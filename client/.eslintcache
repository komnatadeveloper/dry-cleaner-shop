[{"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js":"1","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js":"2","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js":"3","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js":"4","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js":"6","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js":"7","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js":"8","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js":"9","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js":"10","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js":"11","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js":"12","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js":"13","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js":"14","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js":"15","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js":"16","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js":"17","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js":"18","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js":"19","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js":"20","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js":"21","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js":"22","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js":"23","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js":"24","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js":"25","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js":"26","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js":"27","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js":"28","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js":"29","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js":"30","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js":"31","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js":"32","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js":"33","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js":"34","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js":"35","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js":"36","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js":"37","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js":"38","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js":"39","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js":"40","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js":"41","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js":"42","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js":"43","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js":"44","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js":"45","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js":"46","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js":"47","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js":"48","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js":"49","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js":"50","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js":"51","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js":"52","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js":"53","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js":"54","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js":"55","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js":"56","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js":"57","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js":"58","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js":"59","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js":"60","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js":"61","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js":"62","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js":"63","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js":"64","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js":"65","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js":"66","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js":"67","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js":"68","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js":"69","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js":"70","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js":"71","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js":"72","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js":"73","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js":"74","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js":"75","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js":"76","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\CustomerDetails.js":"77","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTable.js":"78","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTableItem.js":"79","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\Account\\AccountUserPage.js":"80","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\ChangePassword.js":"81","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivitiesTabInAdminDashBoard.js":"82","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivityItem.js":"83","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Settings\\SetttingsPage.js":"84"},{"size":196,"mtime":1612726131102,"results":"85","hashOfConfig":"86"},{"size":8882,"mtime":1613172699756,"results":"87","hashOfConfig":"86"},{"size":902,"mtime":1612726130963,"results":"88","hashOfConfig":"86"},{"size":918,"mtime":1612726131016,"results":"89","hashOfConfig":"86"},{"size":1301,"mtime":1612726131015,"results":"90","hashOfConfig":"86"},{"size":2599,"mtime":1612726131020,"results":"91","hashOfConfig":"86"},{"size":3430,"mtime":1612698196632,"results":"92","hashOfConfig":"86"},{"size":2535,"mtime":1612726131035,"results":"93","hashOfConfig":"86"},{"size":1665,"mtime":1612726131039,"results":"94","hashOfConfig":"86"},{"size":183,"mtime":1612726131034,"results":"95","hashOfConfig":"86"},{"size":8851,"mtime":1613081787250,"results":"96","hashOfConfig":"86"},{"size":815,"mtime":1612726131047,"results":"97","hashOfConfig":"86"},{"size":430,"mtime":1612726131106,"results":"98","hashOfConfig":"86"},{"size":811,"mtime":1612726131048,"results":"99","hashOfConfig":"86"},{"size":3003,"mtime":1597007136578,"results":"100","hashOfConfig":"86"},{"size":3308,"mtime":1613080069846,"results":"101","hashOfConfig":"86"},{"size":4057,"mtime":1613167365153,"results":"102","hashOfConfig":"86"},{"size":2243,"mtime":1612726130989,"results":"103","hashOfConfig":"86"},{"size":2208,"mtime":1578017302727,"results":"104","hashOfConfig":"86"},{"size":3364,"mtime":1612726130967,"results":"105","hashOfConfig":"86"},{"size":16297,"mtime":1613159386737,"results":"106","hashOfConfig":"86"},{"size":10487,"mtime":1612726130985,"results":"107","hashOfConfig":"86"},{"size":2629,"mtime":1612726130965,"results":"108","hashOfConfig":"86"},{"size":11088,"mtime":1613080098580,"results":"109","hashOfConfig":"86"},{"size":4106,"mtime":1613079892528,"results":"110","hashOfConfig":"86"},{"size":826,"mtime":1612726131059,"results":"111","hashOfConfig":"86"},{"size":5448,"mtime":1612726131065,"results":"112","hashOfConfig":"86"},{"size":7386,"mtime":1613099464107,"results":"113","hashOfConfig":"86"},{"size":28498,"mtime":1613166300560,"results":"114","hashOfConfig":"86"},{"size":3482,"mtime":1612726131069,"results":"115","hashOfConfig":"86"},{"size":2884,"mtime":1612726131051,"results":"116","hashOfConfig":"86"},{"size":4934,"mtime":1612726131053,"results":"117","hashOfConfig":"86"},{"size":113,"mtime":1612726131060,"results":"118","hashOfConfig":"86"},{"size":111,"mtime":1612726131063,"results":"119","hashOfConfig":"86"},{"size":320,"mtime":1612726131040,"results":"120","hashOfConfig":"86"},{"size":561,"mtime":1612726131026,"results":"121","hashOfConfig":"86"},{"size":115,"mtime":1612726131066,"results":"122","hashOfConfig":"86"},{"size":109,"mtime":1612726131070,"results":"123","hashOfConfig":"86"},{"size":1752,"mtime":1597007136583,"results":"124","hashOfConfig":"86"},{"size":113,"mtime":1612726131056,"results":"125","hashOfConfig":"86"},{"size":2734,"mtime":1613080069845,"results":"126","hashOfConfig":"86"},{"size":1140,"mtime":1612726130999,"results":"127","hashOfConfig":"86"},{"size":1826,"mtime":1612726130990,"results":"128","hashOfConfig":"86"},{"size":5034,"mtime":1597007136480,"results":"129","hashOfConfig":"86"},{"size":2381,"mtime":1577324814017,"results":"130","hashOfConfig":"86"},{"size":5108,"mtime":1613079734575,"results":"131","hashOfConfig":"86"},{"size":588,"mtime":1612726130975,"results":"132","hashOfConfig":"86"},{"size":631,"mtime":1612726130975,"results":"133","hashOfConfig":"86"},{"size":4168,"mtime":1613080069846,"results":"134","hashOfConfig":"86"},{"size":2838,"mtime":1612726131043,"results":"135","hashOfConfig":"86"},{"size":1320,"mtime":1613079734576,"results":"136","hashOfConfig":"86"},{"size":2685,"mtime":1612995307701,"results":"137","hashOfConfig":"86"},{"size":3382,"mtime":1613078955830,"results":"138","hashOfConfig":"86"},{"size":574,"mtime":1612726131071,"results":"139","hashOfConfig":"86"},{"size":3412,"mtime":1612726131057,"results":"140","hashOfConfig":"86"},{"size":1737,"mtime":1613078955829,"results":"141","hashOfConfig":"86"},{"size":5593,"mtime":1613079892528,"results":"142","hashOfConfig":"86"},{"size":627,"mtime":1612726131067,"results":"143","hashOfConfig":"86"},{"size":347,"mtime":1612726131061,"results":"144","hashOfConfig":"86"},{"size":434,"mtime":1612726131103,"results":"145","hashOfConfig":"86"},{"size":853,"mtime":1613080255202,"results":"146","hashOfConfig":"86"},{"size":1188,"mtime":1577324814029,"results":"147","hashOfConfig":"86"},{"size":2429,"mtime":1612726130969,"results":"148","hashOfConfig":"86"},{"size":4383,"mtime":1612995571942,"results":"149","hashOfConfig":"86"},{"size":653,"mtime":1612726131046,"results":"150","hashOfConfig":"86"},{"size":4553,"mtime":1612726131044,"results":"151","hashOfConfig":"86"},{"size":1308,"mtime":1612726131017,"results":"152","hashOfConfig":"86"},{"size":707,"mtime":1612726131022,"results":"153","hashOfConfig":"86"},{"size":1726,"mtime":1612219860188,"results":"154","hashOfConfig":"86"},{"size":2805,"mtime":1613080184881,"results":"155","hashOfConfig":"86"},{"size":1817,"mtime":1613080184881,"results":"156","hashOfConfig":"86"},{"size":3905,"mtime":1612726131041,"results":"157","hashOfConfig":"86"},{"size":7074,"mtime":1613162796807,"results":"158","hashOfConfig":"86"},{"size":2385,"mtime":1612726131007,"results":"159","hashOfConfig":"86"},{"size":2828,"mtime":1612726131005,"results":"160","hashOfConfig":"86"},{"size":1833,"mtime":1612726131004,"results":"161","hashOfConfig":"86"},{"size":11559,"mtime":1613079892539,"results":"162","hashOfConfig":"86"},{"size":1733,"mtime":1613080423390,"results":"163","hashOfConfig":"86"},{"size":2485,"mtime":1613070823204,"results":"164","hashOfConfig":"86"},{"size":8931,"mtime":1613096966447,"results":"165","hashOfConfig":"86"},{"size":5009,"mtime":1613099738325,"results":"166","hashOfConfig":"86"},{"size":2110,"mtime":1613169867074,"results":"167","hashOfConfig":"86"},{"size":2750,"mtime":1613170308067,"results":"168","hashOfConfig":"86"},{"size":380,"mtime":1613172691903,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"127ii91",{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"172"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"172"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"172"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"172"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"172"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"217"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"286"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"172"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"172"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"172"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"172"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"172"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"172"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"172"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"172"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"172"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"172"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"172"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"172"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"172"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"172"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"172"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"172"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"172"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"172"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js",[],["384","385"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js",["386"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js",["387"],"import React, { useContext, useState } from \"react\";\r\nimport authContext from \"../../context/auth/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst AdminLogin = () => {\r\n\r\n  const authContext1 = useContext(authContext);\r\n  const { adminLogin, isAuthenticated, userType, loading, user } = authContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { username, email, password } = formData;\r\n  const _textFieldMinWidth = 350;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    adminLogin(formData);\r\n    // console.log('SUCCESS');\r\n  };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {\r\n    // console.log(isAuthenticated, userType, loading);\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        // backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexrow justify-content-center' \r\n        style={{minHeight:'90vh'}}\r\n      >\r\n        <div \r\n          className='flexcol h-100 justify-content-center'\r\n          style={{minHeight:'90vh'}}\r\n        >\r\n          <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n            <h1 className='text-center mb-2'>Admin Login</h1>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Username'\r\n                label='Username'\r\n                required\r\n                id='userName'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Email'\r\n                label='Email'\r\n                required\r\n                id='email'\r\n                name='email'\r\n                value={email}\r\n                type='email'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>            \r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Enter Password'\r\n                label='Password'\r\n                required\r\n                id='password'\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>             \r\n            <div className='mb-1 mt-1'>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              fullWidth\r\n              type='submit'\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js",["388"],"import React, {useEffect} from 'react'\r\n\r\nconst UserPage = ({match}) => {\r\n  //match.params.userId\r\n  useEffect(() => {\r\n    console.log(match);\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      This is User Page\r\n\r\n      This is Collapsible\r\n      {/* <ul class=\"collapsible\">\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">filter_drama</i>First</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">place</i>Second</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">whatshot</i>Third</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n      </ul> */}\r\n\r\n      \r\n\r\n      <hr />\r\n      <hr />\r\n      <hr />\r\n\r\n\r\n      <table className=\"striped highlight\">\r\n        <thead>\r\n          <tr>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr style={{height: \"15px\"}}>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.8777</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alan</td>\r\n            <td>Jellybean</td>\r\n            <td>$3.76</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      \r\n\r\n\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPage;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js",["389","390","391","392","393","394","395","396","397","398","399"],"import React, { useEffect, useContext, Fragment } from 'react'\r\nimport HomeHero from './HomeHero'\r\nimport Services from './services/Services'\r\nimport Spinner from '../../layout/Spinner'\r\nimport publicContext from '../../../context/public/publicContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Home = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    getServicesAndCategories,\r\n    loading\r\n  } = publicContext1\r\n  \r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    getServicesAndCategories();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {/* loading ? <Spinner></Spinner> */}\r\n\r\n      <div>\r\n        {/* {\r\n          !loading && <HomeHero />\r\n        } */}\r\n        <HomeHero />\r\n        <Container\r\n          maxWidth='lg'\r\n          style={{\r\n            backgroundColor:'#ccc',\r\n            minHeight:'90vh'\r\n          }}\r\n        >\r\n          {\r\n            loading \r\n              ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              ) \r\n              : <Services />\r\n          }\r\n          \r\n        </Container>\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js",["400"],"import React, { useState, useContext } from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport authContext from '../../context/auth/authContext'\r\nimport alertContext from '../../context/alert/alertContext'\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst CustomerLogin = () => {\r\n  const authContext1 =  useContext(authContext);\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    userLogin, \r\n    userRegister,\r\n    isAuthenticated, \r\n    userType, \r\n    loading, \r\n    user\r\n  } = authContext1\r\n  const { \r\n    setAlert\r\n  } = alertContext1\r\n\r\n  const [ loginMode, setLoginMode ] = useState('login');  // 'login' || 'signup'\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: '',\r\n    personName: '',\r\n    middleName: '',\r\n    tel1: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const { \r\n    username, \r\n    email, \r\n    password, \r\n    // for 'signup'\r\n    confirmPassword,\r\n    personName,\r\n    middleName,\r\n    tel1,\r\n    lastName\r\n  } = formData\r\n\r\n  const _textFieldMinWidth = 350;\r\n\r\n    const onChange = e => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const onSubmit = async e => {\r\n      e.preventDefault();\r\n      if ( loginMode === 'login' ) {\r\n        userLogin(formData);      \r\n      } \r\n      else {  // loginMode === 'signup'\r\n        if ( password !== confirmPassword ) {\r\n          return setAlert('Passwords do not match!', \"danger\");          \r\n        }\r\n        userRegister(formData);\r\n      }\r\n    };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"user\" && !loading && user) {    \r\n    return <Redirect to='/user-main' />;\r\n  }\r\n\r\n  // Redirect if Authenticated as an Admin\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {    \r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    \r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        // backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexrow justify-content-center' \r\n        style={{minHeight:'90vh'}}\r\n      >\r\n        <div \r\n          className='flexcol h-100 justify-content-center'\r\n          style={{minHeight:'90vh'}}\r\n        >\r\n          <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n            <h1 className='text-center mb-2'>User Login</h1>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Username'\r\n                label='Username'\r\n                required\r\n                id='userName'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Email'\r\n                label='Email'\r\n                required\r\n                id='email'\r\n                name='email'\r\n                value={email}\r\n                type='email'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n          \r\n            { loginMode === 'signup' && (\r\n              <>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Name'\r\n                    label='Name'\r\n                    required\r\n                    id='personName'\r\n                    name='personName'\r\n                    value={personName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Middle Name'\r\n                    label='Middle Name'\r\n                    // required\r\n                    id='middleName'\r\n                    name='middleName'\r\n                    value={middleName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Last Name'\r\n                    label='Last Name'\r\n                    required\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    value={lastName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Telephone'\r\n                    label='Telephone'\r\n                    // required\r\n                    id='tel1'\r\n                    name='tel1'\r\n                    value={tel1}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>                  \r\n              </>\r\n            )}\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Enter Password'\r\n                label='Password'\r\n                required\r\n                id='password'\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>         \r\n            {\r\n              loginMode === 'signup' && (              \r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Confirm Password'\r\n                    label='Confirm Password'\r\n                    required\r\n                    id='confirmPassword'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    type='password'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n            <div className='mb-1 mt-1'>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>              \r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              fullWidth\r\n              type='submit'\r\n            >\r\n              { loginMode === 'login' ? 'Login' : 'Register' }                \r\n            </Button>\r\n            <div className=\"flexrow justify-content-space-between pt-4\">         \r\n              <p \r\n                className='mr-4'\r\n                style={{\r\n                  lineHeight:'3.2rem',\r\n                  marginBlockStart:'0',                 \r\n                  marginBlockEnd:'0',                 \r\n                }}\r\n              >\r\n                {\r\n                  loginMode === 'login' && 'Don\\'t have an account?'\r\n                }\r\n                {\r\n                  loginMode === 'signup' && 'Already have an account?'\r\n                }                \r\n              </p>\r\n              {\r\n                loginMode === 'login'\r\n                ? (                  \r\n                  <Button  \r\n                    href='#'\r\n                    style={{\r\n                      // lineHeight:'3.2rem'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('signup');\r\n                    }}\r\n                    color='secondary'\r\n                  >Register</Button>\r\n                  )\r\n                : (\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('login');\r\n                    }}\r\n                    color='secondary'\r\n                  >\r\n                    Login\r\n                  </Button>                      \r\n                )\r\n              }\r\n            </div>\r\n          </form> \r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomerLogin;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js",[],["401","402"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js",["403"],"import React, {useContext, useEffect, } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport OrdersItem from './OrdersItem'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst OrdersTab = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders()\r\n    // eslint-disable-next-line\r\n    loadPayments()\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n          ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          : (\r\n            <div>\r\n              <h2 className='text-center mt-2 mb-1'>Orders</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>\r\n                        Order Date\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>Username</StyledTableCell>\r\n                      <StyledTableCell align='right'>Price</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                <TableBody>\r\n                  {orders ? (\r\n                    orders.length > 0 &&\r\n                    orders.map(order => (\r\n                      <OrdersItem key={order._id} order={order} />\r\n                    ))\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/orders/add'\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            Add Orders\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default OrdersTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js",["404","405","406","407","408","409","410","411","412","413"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js",["414","415","416","417","418","419","420","421","422","423"],"import React, { useContext, useEffect  } from \"react\";\r\nimport {  NavLink} from 'react-router-dom'\r\n\r\nimport adminContext from \"../../../context/admin/adminContext\";\r\nimport ServicesTable from \"./ServicesTable\";\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst ServicesTab = () => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const { \r\n    loadServices , \r\n    services,\r\n    loading\r\n   } = adminContext1;\r\n\r\n  // productsTab , serviceTab\r\n  // const [ currentSection, setCurrentSection ] = useState('serviceTab') \r\n\r\n  useEffect(() => {\r\n    loadServices();\r\n  }, []);\r\n\r\n  // const addCustomer = () => {\r\n  //   const btn = (\r\n  //     <button data-target='modalCustomer' className='btn modal-trigger' />\r\n  //   );\r\n  //   console.log(\"clicked add customer\");\r\n  // };\r\n\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Services</h2>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                  <ServicesTable services={services} />\r\n                )\r\n          }\r\n        </div>\r\n        <div className='mb-2 mt-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/services/add'\r\n          >\r\n            Add Service\r\n          </Button>\r\n        </div>\r\n      </div> \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServicesTab;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js",["424"],"import React, {useContext, useEffect, useState, Fragment } from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport ProductCard from './ProductCard'\r\nimport AddProduct from './AddProduct'\r\nimport Spinner from '../../layout/Spinner'\r\n\r\nconst ProductsTab = () => {\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadProductsWithoutImages , products, loading } = adminContext1;\r\n\r\n  const [addStatus, setAddStatus] = useState(false)\r\n\r\n  useEffect(() => { \r\n    if (products.length === 0)\r\n      // This is a try of turn-around to prevent re-render\r\n      // eslint-disable-next-line\r\n      loadProductsWithoutImages();\r\n      // eslint-disable-next-line\r\n  }, [])\r\n\r\n  \r\n  \r\n  if(loading) return <Spinner></Spinner>\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='row mt-1'>\r\n        {/* Buttons Related with Products */}\r\n        <span>\r\n          {/* <a\r\n            className='waves-effect waves-light btn-small mr-1'\r\n            onClick={e => {\r\n              setCurrentSection(\"productsTab\");\r\n            }}\r\n          >\r\n            <i className='material-icons right'>list</i>Products\r\n          </a> */}\r\n          <a\r\n            className={ addStatus === false ? \r\n              ('waves-effect waves-light blue btn-small') : \r\n              ('waves-effect waves-light red btn-small') \r\n            }\r\n            onClick={e => {\r\n              setAddStatus( !addStatus )\r\n            }}\r\n          >\r\n            { addStatus === false ? (\r\n              <Fragment>\r\n                <i className='material-icons right'>add</i>Product\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <i className='material-icons right'>close</i>Product Add\r\n              </Fragment>\r\n            )}\r\n            \r\n          </a>\r\n        </span>\r\n        {/* End of Buttons Related with Products */}\r\n      </div>\r\n      <AddProduct addStatus={addStatus} />\r\n\r\n      <div className='row'>\r\n        {products.length > 0 &&\r\n          products.map(product => (\r\n            <ProductCard key={product._id} productInfo={product} />\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductsTab\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["425","426"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js",["427","428"],"import React, {useContext, useEffect,  useState } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport CategoriesItem from './CategoriesItem'\r\n\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst CategoriesPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadCategories,\r\n    categories,\r\n    loading, \r\n  } = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>              \r\n          <div>\r\n            <h2 className='text-center mt-1 mb-1'>Categories</h2>            \r\n          </div>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Category Image</StyledTableCell>\r\n                        <StyledTableCell>Category Name</StyledTableCell>\r\n                        <StyledTableCell>Actions</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {categories ? (\r\n                        categories.length > 0 &&\r\n                        categories.map(categoryItem => (\r\n                          <CategoriesItem \r\n                            key={categoryItem._id} \r\n                            categoryItem={categoryItem} \r\n                          />\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </TableBody>  \r\n                  </Table>\r\n                </TableContainer>\r\n              )\r\n          } \r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/categories/add'\r\n          >\r\n            Add Category\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CategoriesPage\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js",["429","430","431","432","433","434","435","436","437"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js",["438","439","440"],"import React, {useContext, useState, Fragment, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst AddService = ({match, history}) => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const {\r\n    loadQueriedCategories,\r\n    addNewService,\r\n    updateService,\r\n    loadSingleService,\r\n    // serviceToBeEditted, \r\n    loading,\r\n    setAdminLoading\r\n  } = adminContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    categoryName: '',\r\n    category: null, // categoryId\r\n    image: null,\r\n    serviceName: '',\r\n    servicePrice: \"\",\r\n    featured: false\r\n  });\r\n\r\n  const [ queriedCategoriesList, setQueriedCategoriesList ] = useState([]);\r\n  const _setQueriedCategories = (arr) => {\r\n    setQueriedCategoriesList(arr);\r\n  }\r\n\r\n  const fileSelectedHandler = e => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n      // I couldnt create image file with .png etc extension so, unless we update image file, we will not send API an image.\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0],\r\n        isImageUpdated: true\r\n      });\r\n    } else { // if not an update but ADD NEW SERVICE\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0]\r\n      });\r\n    }\r\n  };\r\n\r\n  // If Not a New Service, but Editting. Update this form states, by async function at the adminContext loadSingleService method\r\n  const next = res => {\r\n\r\n    if(!res) {\r\n      return history.push('/dashboard/services')\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      categoryName: res.categoryName || \"\",\r\n      category: res.category || null,\r\n      image: res.image || null, // TO BE UPDATED in FUTURE\r\n      serviceName: res.serviceName || \"\",\r\n      servicePrice: res.servicePrice || \"\",\r\n      featured: res.featured || false,\r\n    });\r\n    console.log(formData);\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n    // Do smt\r\n      // loadSingleService({serviceId: match.params.serviceId,}).then(res => {\r\n      // updateFormFromBackend(res);\r\n      loadSingleService({serviceId: match.params.serviceId, next})\r\n\r\n        // console.log(formData);\r\n      } else {\r\n        setAdminLoading(false)\r\n      }\r\n  }, [])\r\n  \r\n\r\n\r\n  // const [ productSearch, setProductSearch ] = useState(false)\r\n  const { \r\n    categoryName,\r\n    category,  // categoryId \r\n    servicePrice, \r\n    serviceName,\r\n    featured \r\n  } = formData\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const submitAddorUpdate = e => {\r\n    setFormData({\r\n      ...formData,\r\n      servicePrice: Number.parseFloat(servicePrice).toFixed(2)\r\n    });\r\n    if(match.params.serviceId) {\r\n      updateService({ formData, serviceId: match.params.serviceId });\r\n    } else {\r\n      addNewService({formData});\r\n    }\r\n  }\r\n\r\n  const handleFeaturedOnChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      featured: !featured\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n        \r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"text-center mt-2 mb-2\">\r\n            <h2> {match.params.serviceId ? 'Update Service' : 'Add Service'}</h2>\r\n          </div>\r\n          {\r\n            loading \r\n            ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              )\r\n            : (\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid\r\n                  xs={12}\r\n                > \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='serviceName'\r\n                      name='serviceName'\r\n                      value={serviceName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Service Name'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={e => onChange(e)}\r\n                    />\r\n                  </div>                 \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='categoryName'\r\n                      name='categoryName'\r\n                      value={categoryName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Search Categories'\r\n                      InputProps={{\r\n                      startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                      // required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={\r\n                        (e) => {  \r\n                          setFormData({\r\n                            ...formData,\r\n                            category: null,  // reset id if we type\r\n                            categoryName: e.target.value,\r\n                          });      \r\n                          if ( e.target.value.length >= 2 ) {\r\n                            loadQueriedCategories(\r\n                              e.target.value,\r\n                              _setQueriedCategories\r\n                            );\r\n                          }  \r\n                        }\r\n                      }\r\n                    />\r\n                    {\r\n                      queriedCategoriesList && queriedCategoriesList.length > 0 && (\r\n                        <TableContainer>\r\n                          <Table>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Category Name</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {\r\n                                queriedCategoriesList.map(categoryItem => (\r\n                                  <TableRow\r\n                                    key={categoryItem._id}\r\n                                    onClick={() => {\r\n                                      console.log('selected category Id -> ', categoryItem._id);\r\n                                      const tempCategory = categoryItem;\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        category: tempCategory._id,\r\n                                        categoryName: tempCategory.name,\r\n                                      });\r\n                                      setQueriedCategoriesList([]);                    \r\n                                    }}\r\n                                  >\r\n                                    <TableCell>{categoryItem.name}</TableCell>\r\n                                  </TableRow>\r\n                                ))\r\n                              }\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      )\r\n                    }\r\n                  </div>                  \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      placeholder='Select Category Image'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      type='file'\r\n                      autoComplete={false}\r\n                      onChange={e => fileSelectedHandler(e)}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >                  \r\n                  <TextField\r\n                    id='servicePrice'\r\n                    name='servicePrice'\r\n                    value={servicePrice}\r\n                    placeholder='Enter Service Price'\r\n                    label='Service Price'\r\n                    required={true}\r\n                    fullWidth={true}\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='ml-2 mt-2'>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={featured}\r\n                          onChange={ e => handleFeaturedOnChange(e)}\r\n                          name=\"featured\"\r\n                          size='medium'\r\n                        />                  \r\n                      }\r\n                      label='Featured'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid> \r\n            )\r\n          }\r\n        </div> \r\n\r\n        <div className='mb-2'>\r\n          <Button\r\n            onClick={e => submitAddorUpdate()}\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            {match.params.serviceId ? 'Update Service' : 'Add Service'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddService;\r\n\r\n\r\n\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js",["441","442","443","444","445","446","447"],"import React, {useContext, useState, Fragment, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport PaymentUserItem from './PaymentUserItem'\r\nimport {\r\n  Container,\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst AddPayment = ({match, history}) => {\r\n  const activityId = match.params.activityId || null\r\n  const adminContext1 = useContext(adminContext)\r\n  const {\r\n    loadQueriedUsers,\r\n    userQuery,\r\n    clearUserQuery,\r\n    addPayment,\r\n    getSingleUserActivity,\r\n    updatePayment\r\n  } = adminContext1;\r\n\r\n  const initialState = {\r\n    customerId: \"\",\r\n    username: \"\",\r\n    balance: \"\",\r\n    fullName: \"\",\r\n    payment: \"\"\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialState });\r\n  const [selectedUserInfo, setSelectedUserInfo] = useState({});\r\n  const [search, setSearched] = useState(\"\");\r\n\r\n\r\n  // If editting a payment, next callback func\r\n  const next = (res) => {\r\n    // So it can not be loaded\r\n    if(res === null) {\r\n      return history.push('/dashboard/orders')\r\n    }\r\n    const { \r\n      customerId, // _id , username, email, name, middleName, surName, balance\r\n      amount, \r\n      date  \r\n    } = res;\r\n    setSelectedUserInfo({...customerId});\r\n    setFormData({\r\n      _id: activityId,\r\n      customerId: customerId._id,\r\n      username: customerId.username,\r\n      fullName: [customerId.name, customerId.middleName, customerId.surName]\r\n        .join(\" \")\r\n        .trim(),\r\n      payment: ((parseFloat(amount.toString()))*(-1)).toFixed(2)\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // If Editting a Payment\r\n    if(activityId) {\r\n      getSingleUserActivity({activityId, next})\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const selectUser = ({userInfo}) => {\r\n  const { username, _id, name, middleName, surName, balance } = userInfo;\r\n\r\n\r\n    setFormData({\r\n    ...formData,\r\n    customerId: _id,\r\n    username: username,\r\n    fullName : [name, middleName, surName].join(\" \").trim(),\r\n    balance,\r\n    });\r\n    setSelectedUserInfo({...userInfo});\r\n\r\n    // clearUserQuery()\r\n    setQueriedUsersList([]);\r\n    setSearched(\"\");\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handlePaymentChange =  () => {\r\n    let payment = parseFloat(formData.payment).toFixed(2)\r\n\r\n    if(payment === 'NaN') payment = ''\r\n\r\n    setFormData({\r\n      ...formData,\r\n      payment\r\n    });\r\n  };\r\n\r\n\r\n  const [ queriedUsersList, setQueriedUsersList ] = useState( [] );\r\n  const _cbSetQueriedUsersList = ( arr ) => {\r\n    setQueriedUsersList(arr);\r\n  }\r\n  const handleSearchChange = e => {\r\n    setFormData({...initialState});\r\n    setSelectedUserInfo({});\r\n    setSearched(e.target.value);\r\n    loadQueriedUsers(\r\n      e.target.value,\r\n      _cbSetQueriedUsersList\r\n    );\r\n  }\r\n\r\n  const submitPayment = (e) => {\r\n    if(!activityId) {\r\n\r\n      addPayment({formData: {\r\n        customerId: formData.customerId,\r\n        payment: parseFloat(payment)\r\n      }})\r\n\r\n    } else { // Edit Existing Payment Option\r\n      // Mutating the formData, as soon as useractivity model has a different structure\r\n      updatePayment({\r\n        formData: {\r\n        _id: formData._id,\r\n        customerId: formData.customerId,\r\n        amount: parseFloat(formData.payment) * (-1)\r\n      }, next: (res) => {\r\n        if(res) {\r\n          history.push('/dashboard/orders')\r\n        }\r\n\r\n      }})\r\n    }\r\n\r\n    setFormData({...initialState})\r\n  }\r\n\r\n  const { username, fullName, balance, payment} = formData\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}      \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-3 mb-1'>\r\n           {activityId ? 'Update Payment for Customers' :  'Add Payment For Customers'}\r\n          </h2>\r\n          {/* Search Bar for Users */}\r\n          <form autoComplete='off'>            \r\n            <TextField\r\n              required={true}\r\n              fullWidth={true}\r\n              placeholder='Search for Customers'\r\n              id='search'\r\n              name='search'\r\n              value={search}\r\n              size='medium'\r\n              type='search'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              autoComplete={false}\r\n              onChange={e => handleSearchChange(e)}\r\n              label='Customer'\r\n            />\r\n          </form>\r\n          {/* End of Search Bar for Users */}\r\n          {/* User List from API */}\r\n          {queriedUsersList && queriedUsersList.length > 0 && (\r\n            <Fragment>\r\n              <span className='flexrow justify-content-flex-start'>\r\n                <div className='row mp-0'></div>\r\n              </span>\r\n              <TableContainer>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Username</TableCell>\r\n                      <TableCell>{'Name & Surname'}</TableCell>\r\n                      <TableCell>Balance</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {queriedUsersList &&\r\n                      queriedUsersList.map(userItem => (\r\n                        <PaymentUserItem\r\n                          key={userItem._id}\r\n                          userInfo={userItem}\r\n                          selectUser={selectUser}\r\n                        />\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Fragment>\r\n          )}\r\n          {/* End of User List from API */}\r\n\r\n          {/* User And Balance Info for Selected User */}\r\n          {selectedUserInfo.username && (\r\n            <Fragment>\r\n              <h3 className='text-center mt-4'>User Information</h3>\r\n              <Grid container spacing={3}>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    placeholder='Username'\r\n                    disabled={true}\r\n                    fullWidth={true}\r\n                    id='username'\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    value={selectedUserInfo.username}\r\n                    label='User Name'\r\n                  />\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      placeholder='Enter name'\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.name}\r\n                      onChange={e => onChange(e)}\r\n                      label='Name'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      placeholder='Middlename'\r\n                      fullWidth={true}\r\n                      disabled={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.middleName ? selectedUserInfo.middleName : ''}\r\n                      label='Middlename'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      fullWidth={true}\r\n                      disabled={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.surName ? selectedUserInfo.surName : ''}\r\n                      label='Surname'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='email'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.email}\r\n                      label='Email'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={ parseFloat(selectedUserInfo.balance.toString()).toFixed(2) }\r\n                      label='Balance'\r\n                    />\r\n                  </div>\r\n                </Grid> \r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <h4 className='text-center w-100 mb-2 mt-2'>Payment Quantity</h4>  \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      placeholder='Enter Payment Quantity'\r\n                      id='payment'\r\n                      name='payment'\r\n                      value={payment}\r\n                      size='medium'\r\n                      type='search'\r\n                      autoComplete={false}\r\n                      onChange={e => onChange(e)}\r\n                      onBlur={() => handlePaymentChange()}\r\n                      label='Payment'\r\n                      prefix={<SearchIcon />}\r\n                    />\r\n                  </div>\r\n                </Grid> \r\n              </Grid>\r\n            </Fragment>\r\n          )}\r\n          {/* End of User And Balance Info for Selected User */}\r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            onClick={e => submitPayment(e)}\r\n            disabled={!selectedUserInfo.username}\r\n            type='submit'\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            {activityId ? 'Update Payment' : 'Submit Payment'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default AddPayment\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js",["448"],"import React, {useContext, useEffect, Fragment } from 'react'\r\nimport {  NavLink} from 'react-router-dom';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport CustomersItem from './CustomersItem'\r\nimport Spinner from '../../layout/Spinner'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst CustomersTab = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadCustomers, customers, loading } = adminContext1;\r\n\r\n  useEffect(() => {\r\n    if (customers.length === 0) {\r\n      loadCustomers();\r\n      console.log('HELLO FROM LOAD CUSTOMERS');\r\n    }\r\n  }, [])\r\n  \r\n\r\n  \r\n\r\n  // const addCustomer = () => {\r\n    \r\n  //   const btn = <button data-target=\"modalCustomer\" className=\"btn modal-trigger\" />\r\n  //   console.log('clicked add customer')  \r\n    \r\n     \r\n  // }\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n    \r\n  \r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n          ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          : (\r\n            <div>\r\n\r\n              <div>\r\n                <h1 className='text-center mt-1 mb-1'>Customers</h1>          \r\n              </div>\r\n              {/* <AddCustomerModal /> */}\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                  <TableHead>\r\n\r\n                    <TableRow>\r\n                      <StyledTableCell>\r\n                        Name\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        Username\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align='right'>\r\n                        Balance\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align='center'>\r\n                        Options\r\n                      </StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      {loading ? (\r\n                        <Spinner></Spinner>\r\n                      ) : (customers ? (\r\n                        customers.map(customer => (\r\n                          <CustomersItem key={customer._id} customer={customer} />\r\n                        ))\r\n                      ) : (\r\n                        <Fragment></Fragment>\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/customers/add'\r\n          >\r\n            ADD CUSTOMER\r\n          </Button>\r\n        </div>        \r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomersTab\r\n\r\n\r\n          // {\r\n          //   customers ? (\r\n          //     customers.map(customer => (\r\n          //       <CustomersItem key={customer._id} customer={customer} />\r\n          //     ))\r\n          //   ) : (\r\n          //     <Fragment></Fragment>\r\n          //   );\r\n          // }\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js",["449"],"import React, { useReducer, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport adminContext from \"./adminContext\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport alertContext from \"../alert/alertContext\";\r\nimport authContext from \"../auth/authContext\";\r\n\r\nimport {\r\n  // Customers\r\n  CUSTOMER_ADDED,\r\n  CUSTOMER_UPDATED,\r\n  CUSTOMER_DELETED,\r\n  CUSTOMERS_LOADED,\r\n  ORDERS_LOADED,\r\n  PAYMENTS_LOADED,\r\n  SERVICES_LOADED,\r\n  SERVICE_ADDED,\r\n  SERVICE_UPDATED,\r\n  SINGLE_SERVICE_LOADED,\r\n  CLEAR_QUERIED_SERVICES,\r\n  SERVICE_STATUSES_LOADED,\r\n  ORDER_FORM_SUBMITTED,\r\n  PRODUCTS_INFO_LOADED,\r\n  PRODUCT_ADDED,\r\n  PRODUCT_UPDATED,\r\n  QUERIED_PRODUCTS_LOADED,\r\n  // Categories\r\n  CATEGORIES_LOADED,\r\n  CATEGORY_ADDED,\r\n  CATEGORY_DELETED,\r\n  PRODUCT_DELETED,\r\n  SERVICE_DELETED,\r\n  SINGLE_ORDER_LOADED,\r\n  ORDER_FORM_UPDATED,\r\n  SET_ADMIN_LOADING,\r\n  CLEAR_QUERIED_USERS\r\n} from \"../types\";\r\n\r\nconst AdminState = props => {\r\n  const initialState = {\r\n    customers: [],\r\n    orders: [],\r\n    categories: [],\r\n    categoryQuery: [],\r\n    services: [],\r\n    serviceToBeEditted: null,\r\n    serviceQuery: [],\r\n    serviceStatuses: [],\r\n    userQuery: [],\r\n    products: [],\r\n    productsQuery: [],\r\n    loading: true,\r\n    payments: []\r\n  }; // initialState END-OF\r\n\r\n  const alertContext1 = useContext(alertContext);\r\n  const { setAlert } = alertContext1;\r\n\r\n  const authContext1 = useContext(authContext);\r\n  const { handleAuthError } = authContext1;\r\n\r\n  \r\n\r\n  const [state, dispatch] = useReducer(adminReducer, initialState);\r\n\r\n\r\n //-----------------------LOADING------------------------------\r\n    const setAdminLoading = status => {\r\n      dispatch({\r\n        type: SET_ADMIN_LOADING,\r\n        payload: status\r\n      });\r\n    };\r\n\r\n\r\n  //-----------------------PRODUCTS------------------------------\r\n\r\n  const addProduct = async ({ formData }) => {\r\n    if (!formData.image || !formData.name) {\r\n      return;\r\n    }\r\n    const formData1 = new FormData();\r\n    formData1.append(\"image\", formData.image);\r\n    formData1.append(\"name\", formData.name);\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.post(`/api/admin/products`, formData1, config);\r\n      dispatch({\r\n        type: PRODUCT_ADDED,\r\n        payload: res.data.product\r\n      });\r\n      setAlert(res.data.msg, 'success', 3000)\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Delete Product\r\n  const deleteProduct = async (_id) => {    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.delete(`/api/admin/products/${_id}`,  config);\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: PRODUCT_DELETED,\r\n        payload: res.data.product\r\n      })\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Load Products WITHOUT Images\r\n  const loadProductsWithoutImages = async () => {\r\n    try {\r\n      setAdminLoading(true)\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.get(`/api/admin/products/without-image`,  config);\r\n\r\n      console.log(res.data);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: PRODUCTS_INFO_LOADED,\r\n          payload: res.data\r\n        });\r\n      }\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update Product\r\n  const updateProduct = async ({formData, _id}) => {\r\n\r\n    const formData1 = new FormData()\r\n    formData1.append('image', formData.image)\r\n    formData1.append('name', formData.name)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.put(\r\n        `/api/admin/products/${_id}`,\r\n        formData1,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_UPDATED,\r\n        payload: res.data.product\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const loadQueriedProducts = async searched => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if (searched) {\r\n        const res = await axios.get(\r\n          `/api/admin/products/query?searched=${searched}`,\r\n          config\r\n        );\r\n\r\n        // console.log(res.data);\r\n\r\n        dispatch({\r\n          type: QUERIED_PRODUCTS_LOADED,\r\n          payload: res.data\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: CLEAR_QUERIED_SERVICES\r\n        });\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  //-----------------------CATEGORIES------------------------------\r\n\r\n  \r\n  const addCategory = async ({ formData }) => {\r\n    if (!formData.image || !formData.name) {\r\n      return;\r\n    }\r\n    const formData1 = new FormData();\r\n    formData1.append(\"image\", formData.image);\r\n    formData1.append(\"name\", formData.name);\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const res = await axios.post(\r\n        `/api/admin/categories`, \r\n        formData1, \r\n        config\r\n      );\r\n      dispatch({\r\n        type: CATEGORY_ADDED,\r\n        payload: res.data.category\r\n      });\r\n      setAlert(res.data.msg, 'success', 3000)\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of addCategory\r\n\r\n  // Delete a Category\r\n  const deleteCategory = async (_id, cb) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.delete(`/api/admin/categories/${_id}`, config);\r\n      dispatch({\r\n        type: CATEGORY_DELETED,\r\n        payload: res.data.category\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      if ( cb ){\r\n        cb();\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if ( cb ){\r\n        cb();\r\n      }\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of Delete a Category\r\n\r\n  // Load All Categories\r\n  const loadCategories = async () => {\r\n    try {\r\n      setAdminLoading(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.get(\"/api/admin/categories\", config);\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: CATEGORIES_LOADED,\r\n        payload: res.data\r\n      });\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of loadCategories\r\n\r\n  // Query Categories\r\n  const loadQueriedCategories = async (\r\n    searched,\r\n    cb\r\n  ) => {\r\n    try {    \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if(searched){\r\n        const res = await axios.get(`/api/admin/categories/query?searched=${searched}`, config);\r\n        // console.log(res.data);\r\n        return cb( res.data );  // queried categories list   \r\n      } else {  \r\n        return cb( [] );   \r\n      } \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n      return cb ( [] );\r\n    }\r\n  }  // End of loadQueriedCategories\r\n\r\n\r\n\r\n\r\n  //-----------------------SERVICES------------------------------\r\n\r\n  \r\n  // Add a Service\r\n  const addNewService = async ({ formData }) => {\r\n    if (\r\n      !formData.image \r\n      || !formData.category\r\n      || !formData.serviceName\r\n    ) {\r\n      return;\r\n    }    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const formData1 = new FormData();\r\n      formData1.append(\"image\", formData.image);\r\n      formData1.append(\"serviceName\", formData.serviceName);\r\n      formData1.append(\"servicePrice\", formData.servicePrice);\r\n      formData1.append(\"category\", formData.category);\r\n      formData1.append(\"featured\", formData.featured);\r\n\r\n      const res = await axios.post(`/api/admin/services`, formData1, config);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: SERVICE_ADDED,\r\n          payload: res.data.service\r\n        });\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update a Service\r\n  const updateService = async ({ formData, serviceId }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const config2 = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const formData1 = new FormData();\r\n      if ( formData.isImageUpdated ) {\r\n        formData1.append(\"image\", formData.image);\r\n        formData1.append(\"isImageUpdated\", formData.isImageUpdated);\r\n        formData1.append(\"serviceName\", formData.serviceName);\r\n        formData1.append(\"servicePrice\", formData.servicePrice);\r\n        formData1.append(\"category\", formData.category);\r\n        formData1.append(\"featured\", formData.featured);\r\n      }\r\n      let res; \r\n      if ( formData.isImageUpdated ) {\r\n        res = await axios.put(`/api/admin/services/image-updated/${serviceId}`, formData1, config);\r\n      } else {\r\n        let formData2 = {...formData};\r\n        formData2.image = undefined;\r\n        res = await axios.put(`/api/admin/services/no-image-update/${serviceId}`, formData2, config2);\r\n      }      \r\n      dispatch({\r\n        type: SERVICE_UPDATED,\r\n        payload: res.data.service\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of Update a Service\r\n  \r\n  \r\n\r\n  // Delete a Service\r\n  const deleteService = async (\r\n    _id,\r\n    cb  // callback\r\n  ) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.delete(`/api/admin/services/${_id}`, config);\r\n      if(cb) { cb(); }\r\n      dispatch({\r\n        type: SERVICE_DELETED,\r\n        payload: res.data.service\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n      if(cb) { cb(); }\r\n    }\r\n  };\r\n\r\n  // Load All Services\r\n  const loadServices = async () => {\r\n    try {\r\n    setAdminLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/services\", config);\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: SERVICES_LOADED,\r\n        payload: res.data\r\n      });\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Load Service Statuses \r\n  const loadServiceStatuses = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.get(`/api/admin/service-status`, config);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: SERVICE_STATUSES_LOADED,\r\n          payload: res.data\r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Load Single Service, this method will be synchronised to component Admin/Services/AddService.js by passing a parameter next method, so be careful when you decide to edit\r\n  const loadSingleService = async ({serviceId, next}) => {\r\n    setAdminLoading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };     \r\n      const res = await axios.get(`/api/admin/services/info/${serviceId}`, config);\r\n\r\n      next(res.data) // This is a method passing from component Admin/Services/AddService.js\r\n\r\n      dispatch({\r\n        type: SINGLE_SERVICE_LOADED,\r\n        payload: res.data\r\n      });\r\n      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      next(null)\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false)\r\n  }\r\n\r\n  \r\n\r\n  // Query Services\r\n  const loadQueriedServices = async (\r\n    searched,\r\n    cb  // callBack Function\r\n  ) => {\r\n    try {    \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if(searched){\r\n        const res = await axios.get(`/api/admin/services/query?searched=${searched}`, config);\r\n        // console.log(res.data);\r\n        // dispatch({\r\n        //   type: QUERIED_SERVICES_LOADED,\r\n        //   payload: res.data\r\n        // });\r\n        cb(res.data);\r\n      } else {\r\n        // dispatch({\r\n        //   type: CLEAR_QUERIED_SERVICES        \r\n        // }); \r\n        cb( [] );    \r\n      } \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of loadQueriedServices\r\n\r\n\r\n\r\n\r\n  \r\n  //-----------------------ORDERS---------------------------------\r\n \r\n  // Submit New Order\r\n  const submitNewOrder = async ({ \r\n    formData,\r\n    cb\r\n  }) => {\r\n    // console.log(formData);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.post(`/api/admin/orders`, formData, config);\r\n      if ( cb ) {\r\n        cb( res.data.order._id );\r\n      }\r\n      dispatch({\r\n        type: ORDER_FORM_SUBMITTED,\r\n        payload: res.data.order\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update  Order\r\n  const updateOrder = async ({ formData, orderId }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.put(`/api/admin/orders/${orderId}`, formData, config);\r\n\r\n      dispatch({\r\n        type: ORDER_FORM_UPDATED,\r\n        payload: res.data\r\n      });\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Load Single Order\r\n  const loadSingleOrder = async ({orderId, next}) => {\r\n    setAdminLoading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };       \r\n      await loadServiceStatuses();\r\n      const res = await axios.get(`/api/admin/orders/${orderId}`, config);\r\n      next(res.data);\r\n      dispatch({\r\n        type: SINGLE_ORDER_LOADED,\r\n        payload: res.data\r\n      });\r\n      // return res.data\r\n\r\n    } catch (err) {\r\n      console.log('LOAD SINGLE ORDER ERROR')\r\n      \r\n      next(null)\r\n\r\n      console.log(err.request.status === 401);\r\n      if (err.request.status === 401) handleAuthError();\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false)\r\n  }\r\n\r\n  // Load Orders\r\n  const loadOrders = async (\r\n    cb // if there is callBack\r\n  ) => {\r\n    try {\r\n    setAdminLoading(true)\r\n    \r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/orders\", config);\r\n\r\n      console.log('HELLO FROM LOAD ORDERS');\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: ORDERS_LOADED,\r\n        payload: res.data\r\n      });\r\n      if ( cb ) { cb(); }\r\n      setAdminLoading(false);\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if ( cb ) { cb(); }\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  //-----------------------USER ACTIVITIES------------------------------ \r\n  const loadPayments = async () => {\r\n    setAdminLoading(true)\r\n    try{ \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.get(\"/api/admin/useractivities/payments\", config);\r\n\r\n      console.log('HELLO FROM LOAD PAYMENTS');\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: PAYMENTS_LOADED,\r\n        payload: res.data\r\n      });      \r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false);\r\n  }\r\n\r\n  const getSingleUserActivity= async ({activityId, next}) => {\r\n    setAdminLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.get(\r\n        `/api/admin/useractivities/payments/${activityId}`,\r\n        config\r\n      );\r\n\r\n      next(res.data);\r\n\r\n      // return res.data\r\n    } catch (err) {\r\n      console.log(\"LOAD SINGLE ORDER ERROR\");\r\n\r\n      next(null);\r\n\r\n      console.log(err.request.status === 401);\r\n      if (err.request.status === 401) handleAuthError();\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false);\r\n  }\r\n\r\n\r\n  // Update Payment\r\n  const updatePayment = async ({formData, next}) => {\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      \r\n      const res = await axios.put(\r\n        `/api/admin/useractivities/payments/${formData._id}`, formData,\r\n        config\r\n      );\r\n      \r\n      next(res.data)\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n           \r\n\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n\r\n      next(null)\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n  //-----------------------CUSTOMERS------------------------------\r\n\r\n  // Add a Customer\r\n  const addNewCustomer = async ({ \r\n    formData,\r\n    cb  // callBack \r\n  }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.post(\r\n        `/api/admin/customers/add`,\r\n        formData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CUSTOMER_ADDED,\r\n        payload: res.data.customer\r\n      });\r\n      if ( cb ) {\r\n        cb(res.data.customer);\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update Customer\r\n  const updateCustomer = async ({formData, id}) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.put(`/api/admin/customers/info/${id}`, formData, config);      \r\n      dispatch({\r\n        type: CUSTOMER_UPDATED,\r\n        payload: res.data.customer\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data      \r\n\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Delete Customer\r\n  const deleteCustomer = async ({\r\n    id, \r\n    cb  // callBack\r\n  }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.delete(`/api/admin/customers/info/${id}`,  config);      \r\n      dispatch({\r\n        type: CUSTOMER_DELETED,\r\n        payload: res.data.customer\r\n      });\r\n      if ( cb ) {\r\n        cb(res.data.customer);\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n      if ( cb ) {\r\n        cb();\r\n      }\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of Delete Customer\r\n\r\n\r\n\r\n  // Load Customers\r\n  const loadCustomers = async () => {\r\n    try {\r\n\r\n    setAdminLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/customers\", config);\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: CUSTOMERS_LOADED,\r\n        payload: res.data\r\n      });\r\n    setAdminLoading(false);\r\n    } catch (err) {\r\n      \r\n    }\r\n  }  \r\n\r\n  // Load Queried Users\r\n  const loadQueriedUsers = async (\r\n    searched,\r\n    cb  // callBack\r\n  ) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if (searched) {\r\n        const res = await axios.get(\r\n          `/api/admin/customers/query?searched=${searched}`,\r\n          config\r\n        );\r\n        cb(res.data);\r\n      } else {\r\n        cb( [] );\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearUserQuery = () => {\r\n    dispatch({\r\n      type: CLEAR_QUERIED_USERS\r\n    });\r\n  }\r\n\r\n  const addPayment = async ({formData}) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      \r\n      const { customerId, payment} = formData\r\n\r\n      const res = await axios.post(\r\n        `/api/admin/customers/payment/${customerId}`, formData,\r\n        config\r\n      );\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);      \r\n      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  // Load Single Customer\r\n  const loadSingleCustomer = async (id) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }; \r\n      const res = await axios.get(`/api/admin/customers/info/${id}`, config);\r\n\r\n      // console.log(res.data);\r\n\r\n      if (res.data) return res.data;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get Single Customer Activities\r\n  const loadSingleCustomerActivities = async ({\r\n    customerId,\r\n    cb  // callBack\r\n  }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }; \r\n      const res = await axios.get(`/api/admin/customers/all-activities/${customerId}`, config); \r\n      if( cb ) {\r\n        cb( res.data );\r\n      }\r\n\r\n      if (res.data) return res.data;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  //-----------------------REPORTS------------------------------\r\n\r\n\r\n  // Load Single Customer\r\n  const loadDashboardReports = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }; \r\n      const res = await axios.get(`/api/admin/reports/dashboard-initial/`, config);\r\n\r\n      // console.log(res.data);\r\n\r\n      if (res.data) return res.data;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <adminContext.Provider\r\n      value={{ \r\n        // General Purpose\r\n        setAdminLoading,       \r\n        // Customers\r\n        loadCustomers,\r\n        addNewCustomer,\r\n        updateCustomer,\r\n        deleteCustomer,\r\n        loadQueriedUsers,\r\n        clearUserQuery,\r\n        loadSingleCustomer,\r\n        addPayment,\r\n        loadSingleCustomerActivities,\r\n        // User Activities\r\n        loadPayments,\r\n        getSingleUserActivity,\r\n        updatePayment,\r\n        // Orders\r\n        loadOrders,\r\n        loadSingleOrder,\r\n        submitNewOrder,\r\n        updateOrder,\r\n        // Categories\r\n        addCategory,\r\n        deleteCategory,\r\n        loadCategories,\r\n        loadQueriedCategories,\r\n        // Services\r\n        loadServices,\r\n        addNewService,\r\n        loadSingleService,\r\n        updateService,\r\n        deleteService,\r\n        loadQueriedServices,\r\n        loadServiceStatuses,\r\n        // Products\r\n        loadProductsWithoutImages,\r\n        updateProduct,\r\n        addProduct,\r\n        deleteProduct,\r\n        loadQueriedProducts,\r\n        // Reports\r\n        loadDashboardReports,\r\n        // State variables\r\n        customers: state.customers,\r\n        orders: state.orders,\r\n        categories: state.categories,\r\n        services: state.services,\r\n        serviceToBeEditted: state.serviceToBeEditted,\r\n        serviceQuery: state.serviceQuery,\r\n        serviceStatuses: state.serviceStatuses,\r\n        userQuery: state.userQuery,\r\n        products: state.products,\r\n        productsQuery: state.productsQuery,\r\n        orderToBeEditted: state.orderToBeEditted,\r\n        loading: state.loading,\r\n        payments: state.payments\r\n      }}\r\n    >\r\n      {props.children}\r\n    </adminContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AdminState;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js",["450","451"],"import React, {useEffect, useContext } from 'react';\r\nimport OrdersItem from './OrdersItem';\r\nimport userContext from '../../../context/user/userContext';\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst UserMain = () => {\r\n  const userContext1 = useContext(userContext)\r\n  const { loadOrders, orders, loading } = userContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (    \r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      {\r\n        loading \r\n          ? (\r\n            <div \r\n              className='flexrow justify-content-center'\r\n              style={{\r\n                minHeight: 180,\r\n                paddingTop: 120\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          ) \r\n          : (\r\n            <div>\r\n              <div>\r\n                <h2 \r\n                  className=\"pt-2  pb-2 text-center\" \r\n                >\r\n                  Orders\r\n                </h2>\r\n              </div>\r\n              <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>Order Date</StyledTableCell>\r\n                      <StyledTableCell align='right'>Order Total</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {\r\n                    orders \r\n                      ? (\r\n                        orders.length > 0 &&\r\n                        orders.map(order => (\r\n                          <OrdersItem key={order._id} order={order} />\r\n                        ))\r\n                      ) \r\n                      : (\r\n                          <></>\r\n                      )\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n      }\r\n    </Container>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default  UserMain\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js",["452","453","454"],"import React, {Fragment, useContext, useState,  useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userContext from '../../../context/user/userContext'\r\nimport ServiceFormInOrderForm from './ServiceRowInOrderForm'\r\nimport Moment from 'react-moment'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst SingleOrder = ({match, history}) => {  \r\n  const userContext1 = useContext(userContext)\r\n  const { loadSingleOrder,  loading } = userContext1\r\n\r\n  const [formData, setFormData] = useState( {\r\n    _id: '',\r\n    user: '',\r\n    serviceList: [],\r\n    orderStatus: '',\r\n    orderTotalPrice: '',\r\n    date: ''\r\n  })\r\n\r\n  const next = (singleOrder) => { \r\n    if (!singleOrder) return  history.push(\"/user-main\")\r\n    setFormData({\r\n      _id : singleOrder._id,\r\n      user : singleOrder.user,\r\n      serviceList : singleOrder.serviceList,\r\n      orderStatus : singleOrder.orderStatus,\r\n      orderTotalPrice : singleOrder.orderTotalPrice,\r\n      date : singleOrder.date\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    loadSingleOrder({ _id: match.params._id, next })\r\n  }, [])\r\n  \r\n\r\n  const { _id, user, serviceList, orderStatus, orderTotalPrice, date } = formData;\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div className=\"pt-1\"></div>\r\n      <Button\r\n        component={NavLink}\r\n        to=\"/user-main\"\r\n        startIcon={<ArrowBackIosIcon/>}\r\n        color='primary'\r\n        variant='contained'\r\n      >Orders</Button>\r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'calc( 90vh - 36px )'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n            ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )            \r\n            : (\r\n              <div>\r\n                <div className=\"mt-2 mb-2\">\r\n                  <h2 className=\"text-center\">Order Information</h2>\r\n                </div>\r\n                <Grid xs={12}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between ml-2'>\r\n                      <span >\r\n                        Order Date:\r\n                        <Moment className='ml-2' format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n                      </span>\r\n                      <span className='mr-3'>Order Status: {orderStatus}</span>\r\n                    </div>\r\n                  </Box>\r\n                </Grid>\r\n                <div className=\"mt-2\"></div>\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell className='service-column pl-2'>Service</StyledTableCell>\r\n                        <StyledTableCell align='right'>Price</StyledTableCell>\r\n                        <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                        <StyledTableCell align='center'>Status</StyledTableCell>\r\n                        <StyledTableCell  align='right'>Tot. Price</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {serviceList.map(service => (\r\n                        <ServiceFormInOrderForm\r\n                          key={service.service._id}\r\n                          service={service}\r\n                        />\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            ) \r\n            \r\n        }\r\n        { ( loading || orderTotalPrice === '') ? (<Fragment></Fragment>) : (\r\n          <div className='flexrow justify-content-flex-end text-bold mb-2'>\r\n            Sub Total: {parseFloat(orderTotalPrice).toFixed(2)}\r\n          </div>\r\n        )}\r\n      </div>      \r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default SingleOrder\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js",["455","456"],"import React, {useEffect} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport {  withStyles, createMuiTheme, ThemeProvider,  } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst OrdersItem = ({ order }) => {\r\n\r\n  useEffect(() => {\r\n\r\n  }, [order])\r\n\r\n  const {\r\n    _id,\r\n    user,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const _orderStatusCustomTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // Yellow -> '#ffeb3b'  deeporange -> '#e64a19'  amber -> '#ef6c00'\r\n        main: '#ffeb3b',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        contrastText: '#673ab7'  // white -> '#fafafa'\r\n      },      \r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>{user.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell  align='right' size='small'>{orderTotalPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell  align='center' size='small'>\r\n        <ThemeProvider theme={_orderStatusCustomTheme}>\r\n          <Chip \r\n            color={ \r\n              orderStatus === 'In Progress' \r\n                ? 'secondary'\r\n                : 'primary'            \r\n            }\r\n            label={orderStatus}\r\n            size='small'\r\n          />\r\n        </ThemeProvider>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js",["457","458","459","460"],"import React, {Fragment, useContext} from 'react'\r\nimport ServiceItemsInRows from './ServiceItemsInRows'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServicesTable = ({services }) => {\r\n  \r\n\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Service Name</StyledTableCell>\r\n              <StyledTableCell>Image</StyledTableCell>\r\n              <StyledTableCell>Category</StyledTableCell>\r\n              <StyledTableCell align='right'>Price</StyledTableCell>\r\n              <StyledTableCell align='center'>Featured</StyledTableCell>\r\n              <StyledTableCell align='center'>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n              {services ? (\r\n                services.map(service => (\r\n                  <ServiceItemsInRows \r\n                    key={service._id} \r\n                    serviceInfo={service} \r\n                  />\r\n                ))\r\n              ) : (\r\n                <Fragment></Fragment>\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Fragment>\r\n      )\r\n  \r\n}\r\n\r\nexport  default ServicesTable\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js",["461","462"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport M from \"materialize-css\";\r\n\r\nconst ProductCard = ({productInfo}) => {\r\n  const { _id, name } = productInfo\r\n\r\n  const adminContext1 = useContext(adminContext);\r\n  const { updateProduct, deleteProduct } =  adminContext1 ;\r\n\r\n  \r\n\r\n  const [formData, setFormData] = useState({\r\n    image: null,\r\n    name: null\r\n  });\r\n\r\n  useEffect(() => {\r\n// eslint-disable-next-line\r\n    setFormData({...formData, name: productInfo.name })\r\n    // eslint-disable-next-line\r\n    M.AutoInit()\r\n    // eslint-disable-next-line\r\n  }, [productInfo])\r\n\r\n\r\n\r\n  \r\n\r\n  const fileSelectedHandler = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      image: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  const updateProductHandler = (e) => {\r\n    e.preventDefault()\r\n    updateProduct({formData, _id})\r\n  }\r\n\r\n  const handleNameChange = e => {\r\n    if (e.target.name === `${_id}name`) {\r\n      setFormData({\r\n        ...formData,\r\n        name: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='col s12 m6 l3'>\r\n      <div className='card sticky-action'>\r\n        <div className='card-image waves-effect waves-block waves-light'>\r\n          <img className='activator' src={`/api/public/products/${_id}`} />\r\n        </div>\r\n        <div className='card-action'>\r\n          <span className='ml-1 mr-1'>{name}</span>\r\n          <span className='card-title activator grey-text text-darken-4'>\r\n            <a class='btn-small waves-effect waves-light right blue'>\r\n              <i class='material-icons small'>edit</i>\r\n            </a>\r\n            {/* <i className='material-icons right'>edit</i> */}\r\n          </span>\r\n          <a\r\n            className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n            href={`#pd-${_id}`}\r\n            // onClick={e => deleteProduct(_id)}\r\n          >\r\n            <i className='material-icons small'>delete</i>\r\n          </a>\r\n          {/* MODAL BEGIN */}\r\n          <div id={`pd-${_id}`} className='modal'>\r\n            <div className='modal-content'>\r\n              <h4>Delete Confirmation</h4>\r\n              <p>Are you sure you want to delete Product?</p>\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <span\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <a\r\n                  href='#!'\r\n                  className='modal-close waves-effect waves-green red btn-small mr-2'\r\n                  style={{ marginRight: \"1rem\" }}\r\n                >\r\n                  Cancel <i className='material-icons small  right'>close</i>\r\n                </a>\r\n                <a\r\n                  href='#!'\r\n                  onClick={e => deleteProduct(_id)}\r\n                  className='modal-close waves-effect waves-green btn-small ml-2'\r\n                >\r\n                  Agree <i className='material-icons small  right'>send</i>\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* MODAL END */}\r\n          {/* <a href='#'>This is a link</a> */}\r\n        </div>\r\n        <div className='card-reveal'>\r\n          <span className='card-title grey-text text-darken-4'>\r\n            <i className='material-icons right'>close</i>\r\n          </span>\r\n          <form onSubmit={e => updateProductHandler(e)}>\r\n            {/* NAME */}\r\n            <div className='row mp-0'>\r\n              <div className='input-field col s6'>\r\n                <input\r\n                  name={`${_id}name`}\r\n                  value={formData.name}\r\n                  id={`${_id}name`}\r\n                  type='text'\r\n                  onChange={e => handleNameChange(e)}\r\n                  className='validate'\r\n                />\r\n                <label className='active' for={`${_id}name`}>\r\n                  Name\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {/* IMAGE */}\r\n            <div className='file-field input-field'>\r\n              <div className='btn'>\r\n                <span>File</span>\r\n                {/* <span>\r\n                  FILE<i class='ns right'>file_upload</i>\r\n                </span> */}\r\n                <input type='file' onChange={e => fileSelectedHandler(e)} />\r\n              </div>\r\n              <div className='file-path-wrapper'>\r\n                <input\r\n                  className='file-path validate'\r\n                  type='text'\r\n                  // onChange={e => fileSelectedHandler()}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className='btn waves-effect waves-light' type='submit'>\r\n              Submit\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481"],"import React, {useEffect, useState, useContext} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport Spinner from '../../layout/Spinner';\r\n// import { StyledTableCell, StyledTableRow } from \"../../layout/CustomTable\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nconst CategoriesItem = ({ categoryItem }) => {\r\n\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const {\r\n    _id,\r\n    image,\r\n    name,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = categoryItem;\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadOrders, \r\n    loadCategories,\r\n    deleteCategory,\r\n    categories,\r\n    orders, \r\n    loading, \r\n    loadPayments, \r\n    payments\r\n  } = adminContext1\r\n\r\n  const _finishDelete = () => {\r\n    setIsDeleting(false);\r\n  }\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow\r\n      key={_id}\r\n    >      \r\n      <StyledTableCell>\r\n        {/* <img src={uint8ArrayToImageSource(image.data)} width='80' /> */}\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={name}\r\n          variant='circular'\r\n          className={classes.large}\r\n          // width='80' \r\n        />\r\n      </StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell >{name}</StyledTableCell>      \r\n      <StyledTableCell>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              // <Spinner></Spinner>\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {/* <Link\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                  className='waves-effect waves-light btn-small grey darken-1 '\r\n                >\r\n                  <i className='material-icons small'>edit</i>\r\n                </Link> */}\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red  mr-1'\r\n                  // href={`#cd-${_id}`}          \r\n                >\r\n                  {/* <i className='material-icons small'>delete</i> */}\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }\r\n        {/* MODAL BEGIN */}\r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`cd-${_id}-title`}\r\n          aria-describedby={`cd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`cd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`cd-${_id}-description`}>\r\n              Are you sure you want to delete Category?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={_handleClickCloseDeleteModal} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteCategory(\r\n                  _id, _finishDelete\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default CategoriesItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js",["482","483"],"import React from 'react'\r\n\r\nconst newServiceItem = ({service, addToOrder}) => {\r\n  const { _id, serviceName,  servicePrice } = service;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{serviceName}</td>\r\n      <td className='right-align'>{`$${servicePrice.toFixed(2)}`}</td>\r\n      <td className='center-align'>\r\n        <a\r\n          onClick={e => addToOrder(service)}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>add</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newServiceItem\r\n",["484","485"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js",["486","487"],"import React from \"react\";\r\n\r\n\r\nconst newUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n  // console.log(object);\r\n\r\n\r\n  return (\r\n    <tr>\r\n      <td>{`${username}`}</td>\r\n      <td>{fullName}</td>\r\n      <td>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>check</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceItemInOrders = ({\r\n  service,  // It is an Object\r\n  changeQuantity,  \r\n  statusList,\r\n  setServiceStatus\r\n}) => {\r\n  \r\n  const {\r\n    serviceName,\r\n    quantity,\r\n    // servicePrice, // after transform unitPrice exists, servicePrice DOESN'T Exist\r\n    unitPrice,\r\n    // eslint-disable-next-line\r\n    unitServiceStatus,\r\n    // eslint-disable-next-line\r\n    unitTotalPrice\r\n  } = service;\r\n  const serviceId = service.service;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles( (theme) => ({\r\n    textField: {\r\n      textAlign:'center',\r\n      display:'inline-block'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>{unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        <div \r\n          className='inside-div-input-text-center' \r\n          style={{width: 80, display:'inline-block'}}\r\n        >\r\n          <TextField\r\n            className={classes.textField}\r\n            fullWidth={true}\r\n            value={quantity}\r\n            autoComplete={false}\r\n            onChange={e =>\r\n              changeQuantity({ service: serviceId, newValue: e.target.value })\r\n            }\r\n          />\r\n        </div>\r\n      </StyledTableCell>\r\n\r\n      {/* <td>{\"In Progress\"}</td> */}\r\n      <StyledTableCell align='center'>\r\n        {/* <div className='browser-default ml-2'> */}\r\n          <Select\r\n            value={unitServiceStatus}\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <MenuItem\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                  // selected ={ status1 === status.servStatus && true}\r\n                >\r\n                  {/* BADGES and COLORS are maybe in future, because badge and colors for select are tricky */}\r\n                  {status.servStatus}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {/* <select\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <option\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                >\r\n                  \r\n                  {status.servStatus}\r\n                </option>\r\n              );\r\n            })}\r\n          </select> */}\r\n        {/* </div> */}\r\n      </StyledTableCell>\r\n\r\n      <StyledTableCell  align='right' style={{fontWeight:'bold'}}>{unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\n\r\n  // serviceList[\r\n  //   {\r\n  //     service: \"5df55f1fcac13bc2d8220c01\",\r\n  //     productName: \"Pants\",\r\n  //     quantity: 10,\r\n  //     unitPrice: 10,\r\n  //     unitServiceStatus: \"In Progress\",\r\n  //     serviceType: \"Iron\",\r\n  //     servicePrice: 14.05\r\n  //   }\r\n  // ]; \r\n\r\nexport  default ServiceItemInOrders\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js",["503","504","505"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport publicContext from \"../../../../context/public/publicContext\";\r\nimport SingleCategoryTab from \"./SingleCategoryTab\";\r\nimport CategoriesRow from './CategoriesRow';\r\nconst Services = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    publicServices,\r\n    publicCategories\r\n  } = publicContext1\r\n\r\n  const [publicServicesList, setPublicServicesList] = useState([]);\r\n  const [servicesChoice, setServicesChoice] = useState(publicCategories[0].name);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    setPublicServicesList(publicServices);\r\n    // eslint-disable-next-line\r\n  }, [publicServicesList]);\r\n\r\n  const handleFeaturedClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('featured')    \r\n  }\r\n  const handleDryCleanClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Dry Clean')    \r\n  }\r\n  const handleIronClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Iron')    \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pt-4\"></div>\r\n      <div className='text-center  mb-2'>\r\n        <h2>Categories</h2>\r\n      </div>\r\n\r\n        \r\n      <CategoriesRow \r\n        publicCategories={publicCategories}  \r\n        onClick={setServicesChoice}\r\n        selectedCategoryName= {servicesChoice}\r\n      />\r\n      <div style={{height:'1rem'}}></div>\r\n      <div style={{ margin: \"auto\" }} >\r\n        { <SingleCategoryTab\r\n            serviceList={publicServices.filter(\r\n              serviceItem => serviceItem.categoryName === servicesChoice\r\n            )}\r\n          /> \r\n        }\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Services\r\n\r\n\r\n\r\n// 2019.31.12 00.49 BACK UP\r\n// import React, { useContext, useEffect, useState, Fragment } from \"react\";\r\n// import ServicesItem from './ServicesItem'\r\n// import publicContext from \"../../../../context/public/publicContext\";\r\n\r\n// const Services = () => {\r\n//   const publicContext1 = useContext(publicContext)\r\n//   const {\r\n//     publicServices\r\n//   } = publicContext1\r\n\r\n//   const [publicServicesList, setPublicServicesList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     setPublicServicesList(publicServices);\r\n\r\n\r\n//     console.log(publicServicesList);\r\n//   }, [publicServicesList]);\r\n\r\n\r\n//   return (\r\n//     <div className='center'>\r\n//       <h1>Featured</h1>\r\n//       Featured Services List: {publicServicesList.length}\r\n//       <div className='row'>\r\n\r\n\r\n//         {publicServicesList.map(service => (\r\n//           <ServicesItem\r\n//             key={service._id}\r\n//             service={service}\r\n//           />\r\n//         ))}\r\n\r\n\r\n//       </div>\r\n//       {/* <ServicesItem />\r\n//       <ServicesItem />\r\n//       <ServicesItem /> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Services\r\n\r\n\r\n\r\n\r\n  ","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js",["506","507"],"import React from 'react';\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceRowInOrderForm = ({service}) => {\r\n  const { quantity, unitPrice, unitServiceStatus, unitTotalPrice } = service;\r\n  const {\r\n    serviceName, \r\n    category // categoryId\r\n  } = service.service;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>{serviceName}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>{quantity}</StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>{unitServiceStatus}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  )\r\n}\r\nexport default ServiceRowInOrderForm;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js",["508","509","510","511","512","513","514","515","516"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst OrdersItem = ({ order }) => {\r\n  useEffect(() => {}, [order]);\r\n\r\n  const {\r\n    _id,\r\n    // eslint-disable-next-line\r\n    user,\r\n    date,\r\n    // eslint-disable-next-line\r\n    serviceList,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  let calculatedTotalPrice = 0;\r\n  if( !orderTotalPrice ) {\r\n    for( let i = 0; i < serviceList.length; i++ ) {\r\n      calculatedTotalPrice += serviceList[i].unitTotalPrice;  \r\n    }\r\n  }\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>\r\n        {\r\n          orderTotalPrice \r\n            ? orderTotalPrice.toFixed(2)\r\n            : calculatedTotalPrice.toFixed(2)\r\n        }\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>\r\n        <span className='badge red'>{orderStatus}</span>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/user-main/orders/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js",["517"],"import {\r\n  USER_ORDER_FORM_SUBMITTED,\r\n  SET_USER_LOADING,\r\n  USER_ORDERS_LOADED\r\n\r\n} from \"../types\";\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case USER_ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case USER_ORDER_FORM_SUBMITTED:\r\n      return {\r\n        ...state,\r\n        orders: [ ...state.orders, payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js",["518"],"import {\r\n  // Customers\r\n  CUSTOMERS_LOADED,\r\n  CUSTOMER_DELETED,\r\n  PAYMENTS_LOADED,\r\n  SERVICES_LOADED,\r\n  SINGLE_SERVICE_LOADED,\r\n  SERVICE_STATUSES_LOADED,  \r\n  // Categories\r\n  CATEGORIES_LOADED,\r\n  CATEGORY_ADDED,\r\n  CATEGORY_DELETED,\r\n  // Products\r\n  PRODUCTS_INFO_LOADED,\r\n  PRODUCT_ADDED,\r\n  PRODUCT_UPDATED,\r\n  QUERIED_PRODUCTS_LOADED,\r\n  // Services\r\n  SERVICE_ADDED,\r\n  SERVICE_UPDATED,\r\n  PRODUCT_DELETED,\r\n  SERVICE_DELETED,\r\n  CLEAR_QUERIED_SERVICES,\r\n  // Orders\r\n  ORDERS_LOADED,\r\n  // Users\r\n  CLEAR_QUERIED_USERS,\r\n  SET_ADMIN_LOADING,\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ADMIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case PRODUCT_ADDED:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, payload]\r\n      };\r\n    case PRODUCT_DELETED:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.name !== payload.name\r\n        )\r\n      };\r\n    case PRODUCT_UPDATED:\r\n      return {\r\n        ...state,\r\n        products: state.products.map(product =>\r\n          product._id === payload._id ? payload : product\r\n        )\r\n      };\r\n    case CATEGORIES_LOADED:\r\n      return {\r\n        ...state,\r\n        categories: payload\r\n      };\r\n    case CATEGORY_ADDED:\r\n      return {\r\n        ...state,\r\n        categories: [...state.categories, payload]\r\n      };\r\n    case CATEGORY_DELETED:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== payload._id\r\n        )\r\n      };\r\n    case SERVICE_ADDED:\r\n      return {\r\n        ...state,\r\n        services: [...state.services, payload]\r\n      };\r\n    case SERVICE_UPDATED:\r\n      return {\r\n        ...state,\r\n        services: state.services.map(service =>\r\n          service._id === payload._id ? payload : service\r\n        )\r\n      };\r\n    case SERVICE_DELETED:\r\n      return {\r\n        ...state,\r\n        services: state.services.filter(service => service._id !== payload._id)\r\n      };\r\n    case CUSTOMERS_LOADED:\r\n      return {\r\n        ...state,\r\n        customers: payload\r\n      };\r\n    case CUSTOMER_DELETED:\r\n      return {\r\n        ...state,\r\n        customers: state.customers.filter(\r\n          customerItem => customerItem._id !== payload._id\r\n        )\r\n      };\r\n    case ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case PAYMENTS_LOADED:\r\n      return {\r\n        ...state,\r\n        payments: payload\r\n      };\r\n    case SERVICES_LOADED:\r\n      return {\r\n        ...state,\r\n        services: payload\r\n      };\r\n    case CLEAR_QUERIED_SERVICES:\r\n      return {\r\n        ...state,\r\n        serviceQuery: []\r\n      };\r\n    case SERVICE_STATUSES_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceStatuses: payload\r\n      };\r\n    case SINGLE_SERVICE_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceToBeEditted: payload\r\n      };\r\n    case CLEAR_QUERIED_USERS:\r\n      return {\r\n        ...state,\r\n        userQuery: []\r\n      };\r\n    case PRODUCTS_INFO_LOADED:\r\n      return {\r\n        ...state,\r\n        products: payload\r\n      };\r\n    case QUERIED_PRODUCTS_LOADED:\r\n      return {\r\n        ...state,\r\n        productsQuery: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js",["519"],"\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  ADMIN_LOADED,\r\n  ADMIN_LOGIN_SUCCESS,\r\n  ADMIN_LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_AUTH_LOADING\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload.user,\r\n        userType: payload.userType\r\n      };\r\n    case ADMIN_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload.admin,\r\n        userType: payload.userType,\r\n        loading: false\r\n      };\r\n    case USER_LOGIN_SUCCESS:\r\n    case USER_REGISTER_SUCCESS:\r\n    case ADMIN_LOGIN_SUCCESS:\r\n      localStorage.setItem(\r\n        \"auth\",\r\n        JSON.stringify({\r\n          token: payload.token,\r\n          userType: payload.userType\r\n        })\r\n      );\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        userType: payload.userType,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case SET_AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      }\r\n    case AUTH_ERROR:\r\n    case USER_LOGIN_FAIL:\r\n    case ADMIN_LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"auth\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        userType: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js",["520","521","522","523","524","525","526","527"],"import React, { useEffect, useState, useContext} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport adminContext from '../../../context/admin/adminContext';\r\nimport {\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport {  withStyles, createMuiTheme, ThemeProvider,  } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\nconst CustomersItem = (\r\n {customer}\r\n) => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { deleteCustomer  } = adminContext1;\r\n\r\n  const [isDeletingCustomer, setIsDeletingCustomer ] = useState(false);\r\n  const _cbDeleteCustomer = anyData => setIsDeletingCustomer(false);\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  useEffect(() => {\r\n      console.log(customer);\r\n    }, [customer]\r\n  );\r\n\r\n\r\n  const {\r\n    _id,\r\n    name,\r\n    // eslint-disable-next-line\r\n    middleName,\r\n    surName,\r\n    username,\r\n    // eslint-disable-next-line\r\n    email,\r\n    balance,\r\n    // eslint-disable-next-line\r\n    address\r\n  } = customer;\r\n\r\n  const fullName = ([name, surName].join(' ')).trim()\r\n\r\n\r\n  const _balanceCustomTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // Yellow -> '#ffeb3b'  deeporange -> '#e64a19'  amber -> '#ef6c00' green -> '#43a047'\r\n        main: '#43a047',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        contrastText: '#fafafa'  // white -> '#fafafa'\r\n      },      \r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <StyledTableRow \r\n      key={_id}      \r\n    >\r\n      <StyledTableCell size='small' component='th' scope='row'>{fullName}</StyledTableCell>\r\n      <StyledTableCell size='small' component='th' scope='row'>{username}</StyledTableCell>\r\n      <StyledTableCell size='small' component='th' align='right' scope='row'>\r\n        <ThemeProvider theme={_balanceCustomTheme}>\r\n          <Chip \r\n            color={ \r\n              balance >= 0 \r\n                ? 'primary'\r\n                : 'secondary'            \r\n            }\r\n            label={balance.toFixed(2)}\r\n            size='small'\r\n          />\r\n        </ThemeProvider>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' component='th' align='center' scope='row'>\r\n        {\r\n          isDeletingCustomer \r\n          ? (\r\n              <>Deleting...</>\r\n            )\r\n          : (\r\n            <>\r\n              <IconButton>\r\n                <EditIcon />\r\n              </IconButton>\r\n              {/* <a className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Edit\r\n              </a> */}\r\n              {/* <a \r\n                className='waves-effect waves-light red darken-1 btn-small mr-1'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n                >\r\n                Delete\r\n              </a> */}\r\n              <IconButton\r\n                color='secondary'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n              >\r\n                <DeleteForeverIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                component={NavLink}\r\n                to={`/dashboard/customers/edit/${_id}`} \r\n              >\r\n                <DetailsIcon />\r\n              </IconButton>\r\n              {/* <Link to={`/dashboard/customers/edit/${_id}`} className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Details\r\n              </Link> */}\r\n            </>\r\n          )\r\n        }\r\n      </StyledTableCell>\r\n\r\n\r\n      {/* <td>{totalOrders}</td> */}\r\n      {/* <td className='right-align'>\r\n        \r\n      </td> */}\r\n      {/* <td className='center-align'>\r\n        {\r\n          isDeletingCustomer \r\n          ? (\r\n              <>Deleting...</>\r\n            )\r\n          : (\r\n            <>\r\n              <a className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Edit\r\n              </a>\r\n              <a \r\n                className='waves-effect waves-light red darken-1 btn-small mr-1'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </a>\r\n              <Link to={`/dashboard/customers/edit/${_id}`} className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Details\r\n              </Link>\r\n            </>\r\n          )\r\n        }\r\n      </td> */}\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default CustomersItem","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js",["528"],"import { GET_SERVICES_AND_CATEGORIES, SET_PUBLIC_LOADING, ADD_TO_CART, SET_CART } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_SERVICES_AND_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        publicServices: payload.services,\r\n        publicCategories: payload.categories,\r\n      };\r\n    case SET_PUBLIC_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case ADD_TO_CART:\r\n    case SET_CART:\r\n      return {\r\n        ...state,\r\n        cart: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js",["529"],"import { \r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n } from \"../types\";\r\n\r\n\r\n export default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n\r\n }\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js",["530"],"import React from \"react\";\r\nimport {\r\n  TableRow,\r\n  TableCell,  \r\n} from '@material-ui/core';\r\n\r\nconst PaymentUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName, balance } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n\r\n  console.log(userInfo);  \r\n\r\n\r\n  return (\r\n    <TableRow\r\n      onClick={e => selectUser({userInfo})}\r\n    >\r\n      <TableCell>{`${username}`}</TableCell>\r\n      <TableCell>{fullName}</TableCell>\r\n      <TableCell>{balance}</TableCell>\r\n      {/* <TableCell>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='waves-effect waves-light btn-small red'\r\n        >\r\n          <i className='material-icons right'>check</i>Add\r\n        </a>\r\n      </TableCell> */}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js",["531"],"import React from 'react'\r\n\r\nconst ProductRowForAddService = ({ productInfo, selectProduct }) => {\r\n  const { name, _id } = productInfo;\r\n  return (\r\n    \r\n      <a \r\n        style={{ display: 'flex', alignItems:'center'}}\r\n        className='collection-item avatar'      \r\n        onClick={e => selectProduct({productInfo})}>\r\n        <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n        <span class='title'>{name}</span>\r\n        {/* <p>\r\n\r\n        </p> */}\r\n      </a>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProductRowForAddService\r\n\r\n\r\n\r\n\r\n    // <li class='collection-item avatar'>\r\n    //   <a \r\n    //     className='hoverable'      \r\n    //     onClick={e => selectProduct({productInfo})}>\r\n    //     <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n    //     <span class='title'>{name}</span>\r\n    //     {/* <p>\r\n\r\n    //     </p> */}\r\n    //   </a>\r\n    // </li>\r\n\r\n\r\n      // <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n      // <span class='title'>{name}</span>\r\n      // {/* <p>\r\n\r\n      // </p> */}\r\n      // <a href='#!' class='secondary-content'>\r\n      //   <i class='material-icons'>grade</i>\r\n      // </a>\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js",["532","533","534","535","536","537","538"],"import React, { useContext, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport admincontext from '../../../context/admin/adminContext'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\n\r\n const ServiceItemsInRows = ({serviceInfo}) => {\r\n  const adminContext1 = useContext(admincontext)\r\n  const { deleteService} = adminContext1;\r\n  const { _id, serviceName, category, categoryName, image, servicePrice, featured } = serviceInfo;\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const _cbDeleteService = () => setIsDeleting(false);\r\n\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={serviceName}\r\n          variant='circular'\r\n          className={classes.large}\r\n        />\r\n      </StyledTableCell>\r\n      <StyledTableCell>{categoryName}</StyledTableCell>\r\n      <StyledTableCell align='right'>{servicePrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {featured && (\r\n          <DoneOutlineIcon />\r\n        )}\r\n      </StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/services/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"        \r\n                >\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }        \r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`sd-${_id}-title`}\r\n          aria-describedby={`sd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`sd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`sd-${_id}-description`}>\r\n              Are you sure you want to delete Service?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={_handleClickCloseDeleteModal} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteService(\r\n                  _id,\r\n                  _cbDeleteService\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n}\r\n\r\nexport default ServiceItemsInRows\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js",["539","540"],"import React, { useContext, useEffect } from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport ServicesItem from './ServicesItem'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst SingleCategoryTab = ({\r\n  serviceList\r\n}) => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const { publicServices } = publicContext1 \r\n\r\n\r\n\r\n  return (\r\n      <Grid container space={0}>\r\n        {serviceList && serviceList.map(service => (\r\n          <ServicesItem\r\n            key={service._id}\r\n            service={service}\r\n          />\r\n        ))}\r\n      </Grid>\r\n     \r\n  )\r\n}\r\n\r\nexport default SingleCategoryTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js",["541","542","543","544"],"import React, {useContext} from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\nconst ServicesItem = ({\r\n  service\r\n}) => {\r\n        const publicContext1 = useContext(publicContext);\r\n        const { addToCart } = publicContext1;\r\n\r\n        \r\n        const {\r\n          // eslint-disable-next-line\r\n          _id,\r\n          image,\r\n          serviceName,\r\n          categoryName,\r\n          category,\r\n          servicePrice,\r\n          featured,\r\n        } = service;\r\n\r\n        // return (\r\n        //   <div className='col s6 m4 l3'>\r\n        //     <div className='card '>\r\n        //       <div className='card-image'>\r\n        //         <img\r\n        //           alt={`${serviceName}`}\r\n        //           // src={`/api/public/products/${product}`}\r\n        //           src={uint8ArrayToImageSource(image.data)}\r\n        //         />\r\n        //       </div>\r\n        //       <span className='card-title  grey-text text-darken-4'>\r\n        //         {/* {productName} {serviceType} */}\r\n        //         {serviceName}\r\n        //       </span>\r\n        //       <div className='card-content'>\r\n        //         <div className='flexrow justify-content-flex-end mp-1'>\r\n        //           <p\r\n        //             className='mr-2'\r\n        //             style={{\r\n        //               display: \"block\",\r\n        //               height: \"100%\",\r\n        //               verticalAlign: \"middle\"\r\n        //             }}\r\n        //           >{` $${servicePrice}`}</p>\r\n        //           <a\r\n        //             href='#!'\r\n        //             className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n        //             onClick={e => {\r\n        //               e.preventDefault();\r\n        //               addToCart({ service });\r\n        //             }}\r\n        //           >\r\n        //             <i className='material-icons'>add</i>\r\n        //           </a>\r\n        //         </div>\r\n        //       </div>\r\n              \r\n\r\n             \r\n              \r\n        //     </div>\r\n            \r\n        //   </div>\r\n        // );\r\n        return (\r\n          <Grid xs={12} sm={6}  lg={4}>\r\n            <div \r\n              style={{                \r\n                marginLeft:'0.5rem',\r\n                marginRight: '0.5rem',\r\n              }}\r\n            >\r\n              <Card>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt={`${serviceName}`}\r\n                  title={`${serviceName}`}\r\n                  image={uint8ArrayToImageSource(image.data)}\r\n                />\r\n                <CardContent style={{padding: 0}}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between '>\r\n                      <p className=\"text-bold\">{serviceName}</p>\r\n                      <p className=\"text-bold\">{` $${parseFloat(servicePrice.toString()).toFixed(2)}`}</p>\r\n                    </div>\r\n                  </Box>\r\n                </CardContent>\r\n                  {/* <span className='card-title  grey-text text-darken-4'>\r\n                    {serviceName}\r\n                  </span>\r\n                  <div className='card-content'>\r\n                    <div className='flexrow justify-content-flex-end mp-1'>\r\n                      <p\r\n                        className='mr-2'\r\n                        style={{\r\n                          display: \"block\",\r\n                          height: \"100%\",\r\n                          verticalAlign: \"middle\"\r\n                        }}\r\n                      >{` $${servicePrice}`}</p>\r\n                      <a\r\n                        href='#!'\r\n                        className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          addToCart({ service });\r\n                        }}\r\n                      >\r\n                        <i className='material-icons'>add</i>\r\n                      </a>\r\n                    </div>\r\n                  </div> */}\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginBottom:'1rem'}}></div>\r\n          </Grid>\r\n              \r\n\r\n             \r\n              \r\n\r\n        );\r\n      }\r\n\r\nexport default ServicesItem","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js",["545","546"],"import React, {useContext} from 'react';\r\nimport authContext from '../../context/auth/authContext';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst ContentBody = ({children}) =>  {\r\n  const authContext1 =  useContext(authContext);\r\n  const {\r\n    userType, \r\n    user, \r\n    isAuthenticated,\r\n  } = authContext1;\r\n  let desktopPublic =  {\r\n    paddingTop: 47,\r\n    width: '100vw',\r\n    minHeight: '90vh'\r\n  };\r\n  let desktopPrivate =  {\r\n    top: 64,\r\n    // width: 'calc(100vw-180px) !important',\r\n    paddingTop: 47,\r\n    paddingLeft: 180,\r\n    minHeight: '90vh',\r\n    overflow: 'scroll'\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      paddingLeft: 180\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  return (    \r\n    (\r\n      userType === \"Admin\" \r\n      ||  userType === \"user\"\r\n    ) && isAuthenticated\r\n    && user\r\n      ?   (\r\n        <div\r\n          className={classes.content}\r\n          // style={desktopPrivate}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n      : (\r\n        <div\r\n          // style={desktopPublic}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n  );  \r\n}\r\nexport default ContentBody;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js",["547"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js",["548","549","550","551"],"import React, {useContext, useEffect } from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport PaymentItem from './PaymentItem';\r\n\r\n\r\nconst PaymentsPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n  \r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n  \r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        minHeight:'90vh'\r\n      }}\r\n      \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Payments</h2>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                  <TableRow>\r\n                  <StyledTableCell>Payment Date</StyledTableCell>\r\n                  <StyledTableCell>Username</StyledTableCell>\r\n                  <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                  <StyledTableCell align='center'>Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {payments ? (\r\n                  payments.length > 0 &&\r\n                  payments.map(payment => (\r\n                    <PaymentItem key={payment._id} payment={payment} />\r\n                  ))\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/payments/add-payment'\r\n            size='large'\r\n            color='secondary'\r\n            variant='contained'\r\n          //   style={{\r\n          //   position:'absolute',\r\n          //   bottom: 112,\r\n          //   marginLeft:'1rem',\r\n          //   marginRight:'1rem',\r\n          // }}\r\n          >\r\n            Add Payment\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentsPage;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js",["552","553","554","555","556","557","558","559","560","561"],"import React, { useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst PaymentItem = ({ payment }) => {\r\n  useEffect(() => {}, [payment]);\r\n\r\n  const { _id, customerId, date, amount } = payment;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell>{customerId.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell align='right'>{((-1) * amount).toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js",["562"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\n\r\nconst images = [\r\n  {\r\n    url: '/static/images/grid-list/breakfast.jpg',\r\n    title: 'Breakfast',\r\n    width: '40%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/burgers.jpg',\r\n    title: 'Burgers',\r\n    width: '30%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/camera.jpg',\r\n    title: 'Camera',\r\n    width: '30%',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageTitleSelected: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n    border: '4px solid currentColor',\r\n    color: 'red'\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function CategoriesRow({\r\n  publicCategories, \r\n  selectedCategoryName,\r\n  onClick\r\n}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {publicCategories.map((categoryItem) => (\r\n        <ButtonBase\r\n          focusRipple\r\n          key={categoryItem._id}\r\n          component={'button'}\r\n          onClick={() => { onClick(categoryItem.name)}}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: 200,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${ \r\n                uint8ArrayToImageSource(categoryItem.image.data)}\r\n              )`\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={\r\n                selectedCategoryName === categoryItem.name \r\n                  ? classes.imageTitleSelected\r\n                  : classes.imageTitle\r\n              }\r\n            >\r\n              {categoryItem.name}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}      \r\n    </div>\r\n  );\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js",["563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\CustomerDetails.js",["580","581"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport adminContext from '../../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { ActivitiesTable } from './ActivitiesTable';\r\n\r\n\r\n\r\nconst CustomerDetails =   ({match}) => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const {  updateCustomer, addNewCustomer, loadSingleCustomer, loadSingleCustomerActivities } = adminContext1;\r\n  const [ _loading,  _setLoading] = useState(false);\r\n\r\n  const [ _willShowActivities, _setWillShowActivities ] = useState(false);\r\n  const [ _customerActivities, _setCustomerActivities ] = useState( [] );\r\n  const _cbLoadSingleCustomerActivities = ( res ) => {\r\n    console.log('admin/customers/customerDetails -> _cbLoadSingleCustomerActivities -> res -> ', res);\r\n    _setCustomerActivities(res);\r\n  }\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n  name:\"\",\r\n  middleName:\"\",\r\n  surName:\"\",\r\n  username: \"\",\r\n  email:\"\", \r\n  tel1:\"\",\r\n  tel2:\"\", \r\n  address:\"\",\r\n  balance:\"\"\r\n  });\r\n\r\n  const updateFormFromBackend = (res) => {\r\n    let balance;\r\n    if ( res.balance === 0 ) {\r\n      balance= res.balance.toFixed(2);\r\n    } else if (res.balance ) {\r\n      balance = res.balance.toFixed(2);\r\n    } else if ( !res.balance ) {\r\n      balance = res.user.balance.toFixed(2);\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      name: res.name || (res.user && res.user.name ) || \"\",\r\n      middleName: res.middleName ||(res.user && res.user.middleName ) || \"\",\r\n      surName: res.surName || (res.user && res.user.surName ) || \"\",\r\n      username: res.username || (res.user && res.user.username ) || \"\",\r\n      email: res.email || (res.user && res.user.email ) || \"\",\r\n      tel1: res.tel1 || (res.user && res.user.tel1) || \"\",\r\n      tel2: res.tel2 ||  (res.user && res.user.tel2 )|| \"\",\r\n      address: res.address ||  (res.user && res.user.address )|| \"\",\r\n      // balance: res.balance || \"\",\r\n      balance: balance || \"\",\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    // If Edit\r\n    if(match.params.id) {\r\n      _setLoading(true);\r\n      loadSingleCustomer(match.params.id)\r\n        .then(res => {            \r\n          updateFormFromBackend(res);\r\n          _setLoading(false);\r\n        })\r\n    }\r\n  }, []);\r\n\r\n  const {    \r\n    name,\r\n    middleName,\r\n    surName,\r\n    username,\r\n    email,\r\n    tel1,\r\n    tel2,\r\n    address,\r\n    balance,\r\n  } = formData;\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    // If Update\r\n    if (match.params.id) {\r\n      updateCustomer({ formData, id: match.params.id })\r\n        .then(res => {\r\n          updateFormFromBackend(res);\r\n      });\r\n    } else {\r\n\r\n      // If New Customer\r\n      addNewCustomer({\r\n        formData,\r\n        cb: updateFormFromBackend\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>          \r\n          {\r\n            _loading \r\n              ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <div>\r\n                  {match.params.id ? (\r\n                    <h2 className='text-center mt-3 mb-2'>{`${username} Info`}</h2>\r\n                  ) : (\r\n                    <h2 className='text-center mt-3 mb-2'>Add Customer</h2>\r\n                  )}\r\n                  <Grid container spacing={3}>\r\n                    {!match.params.id && (\r\n                      <Grid\r\n                        xs={12}\r\n                      >                  \r\n                        <TextField\r\n                          placeholder='Username'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='username'\r\n                          size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          className='validate'\r\n                          name='username'\r\n                          value={username}\r\n                          onChange={e => onChange(e)}\r\n                          label='User Name'\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter name'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='name'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='name'\r\n                          value={name}\r\n                          onChange={e => onChange(e)}\r\n                          label='Name'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Middlename'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='middleName'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='middleName'\r\n                          value={middleName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Middlename'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Surname'\r\n                          fullWidth={true}\r\n                          id='surName'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='surName'\r\n                          value={surName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Surname'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Email'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          disabled={match.params.id ? true : false}\r\n                          id='email'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='email'\r\n                          value={email}\r\n                          onChange={e => onChange(e)}\r\n                          label='Email'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num1'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='tel1'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel1'\r\n                          value={tel1}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel1'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num2'\r\n                          fullWidth={true}\r\n                          id='tel2'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel2'\r\n                          value={tel2}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel2'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          disabled={true}\r\n                          fullWidth={true}\r\n                          id='balance'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='balance'\r\n                          value={`$${balance}`}\r\n                          label='Balance'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          fullWidth={true}\r\n                          id='address'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='address'\r\n                          value={address}\r\n                          onChange={e => onChange(e)}\r\n                          label='Address'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n            )\r\n          }\r\n          {\r\n            _willShowActivities && (\r\n              <>\r\n                <div className='text-center mb-1 mt-4'>\r\n                  <h3>Customer Activities</h3>\r\n                </div>\r\n                <ActivitiesTable\r\n                  activitiesList={_customerActivities}\r\n                />\r\n\r\n              </>\r\n            )\r\n          }\r\n        </div>\r\n        <div className='mb-2 flexrow'>\r\n          <Button\r\n            size='large'\r\n            disabled={_loading}\r\n            variant='contained'\r\n            color='secondary'\r\n            endIcon= {<SendIcon />}\r\n            type='submit'\r\n          >\r\n            {match.params.id ? 'Update User' : 'Create User'}\r\n          </Button>\r\n          <div className=\"ml-1\">\r\n            <Button\r\n              size='large'\r\n              variant='contained'\r\n              color='secondary'\r\n              onClick={() => {\r\n                _setWillShowActivities(true);\r\n                loadSingleCustomerActivities({\r\n                  customerId: match.params.id,\r\n                  cb: _cbLoadSingleCustomerActivities\r\n\r\n                });\r\n              }}\r\n            >\r\n              View Activities\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomerDetails\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTable.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTableItem.js",["582","583"],"import React from 'react';\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport {  withStyles, createMuiTheme, ThemeProvider,  } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport const ActivitiesTableItem = ({activityItem}) => {\r\n  const {\r\n    _id,\r\n    date,\r\n    activityType,\r\n    amount,\r\n    orderId,\r\n  } = activityItem;\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const _orderTypeCustomTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // Yellow -> '#ffeb3b'  deeporange -> '#e64a19'  amber -> '#ef6c00' green -> '#357a38'\r\n        main: '#357a38',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        contrastText: '#fafafa'  // white -> '#fafafa'\r\n      },      \r\n    }\r\n  });\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell align='center' size='small'>\r\n        <ThemeProvider theme={_orderTypeCustomTheme}>\r\n          <Chip\r\n            label={activityType}\r\n            color={activityType === 'order' ? 'secondary' : 'primary'}\r\n             size='small'\r\n          />\r\n        </ThemeProvider>        \r\n      </StyledTableCell>\r\n      <StyledTableCell align='center' size='small'>\r\n        {\r\n          orderId ? orderId.orderStatus : '-'\r\n        }\r\n      </StyledTableCell>\r\n      <StyledTableCell  align='right' size='small'>\r\n        {(amount * (-1)).toFixed(2)}\r\n      </StyledTableCell>\r\n      <StyledTableCell  align='center' size='small'>\r\n        <IconButton\r\n          component={NavLink}\r\n          to={ activityType === 'order' \r\n            ?  `/dashboard/orders/edit/${orderId._id}`\r\n            : `/dashboard/payments/edit/${_id}`\r\n          }\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n}\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\Account\\AccountUserPage.js",["584","585"],"import React, {useContext, useState, useEffect, } from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport authContext from '../../../context/auth/authContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport const AccountUserPage = () => {\r\n  const authContext1 = useContext(authContext)\r\n  const {\r\n    loading,  \r\n    user,\r\n    userUpdateSelfAccount,\r\n  } = authContext1;\r\n  const [formData, setFormData] = useState({\r\n    _id: '',\r\n    name:\"\",\r\n    middleName:\"\",\r\n    surName:\"\",\r\n    username: \"\",\r\n    email:\"\", \r\n    tel1:\"\",\r\n    tel2:\"\", \r\n    address:\"\",\r\n    balance:\"\"\r\n  });\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if( !loading ) {\r\n      setFormData({\r\n        ...user\r\n      })\r\n    }\r\n  }, [loading]);\r\n\r\n  const {  \r\n    _id,  \r\n    name,\r\n    middleName,\r\n    surName,\r\n    username,\r\n    email,\r\n    tel1,\r\n    tel2,\r\n    address,\r\n    balance,\r\n  } = formData;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    userUpdateSelfAccount({\r\n      formData\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>          \r\n          {\r\n            loading \r\n              ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <div>\r\n                  <h2 className='text-center mt-3 mb-2'>Account</h2>\r\n                  <Grid container spacing={3}>\r\n                    <Grid\r\n                      xs={12}\r\n                    >                  \r\n                      <TextField\r\n                        placeholder='Username'\r\n                        disabled={true}\r\n                        fullWidth={true}\r\n                        id='username'\r\n                        size='medium'\r\n                        type='text'\r\n                        autoComplete={false}\r\n                        className='validate'\r\n                        name='username'\r\n                        value={username}\r\n                        label='User Name'\r\n                      />\r\n                    </Grid>                  \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter name'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='name'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='name'\r\n                          value={name}\r\n                          onChange={e => onChange(e)}\r\n                          label='Name'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Middlename'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='middleName'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='middleName'\r\n                          value={middleName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Middlename'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Surname'\r\n                          fullWidth={true}\r\n                          id='surName'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='surName'\r\n                          value={surName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Surname'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Email'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          disabled={true}\r\n                          id='email'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='email'\r\n                          value={email}\r\n                          label='Email'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num1'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='tel1'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel1'\r\n                          value={tel1}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel1'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num2'\r\n                          fullWidth={true}\r\n                          id='tel2'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel2'\r\n                          value={tel2}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel2'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          disabled={true}\r\n                          fullWidth={true}\r\n                          id='balance'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='balance'\r\n                          value={( balance === undefined || balance === '') ?  '-' : `$${(parseFloat(balance)).toFixed(2)}`}\r\n                          label='Balance'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          fullWidth={true}\r\n                          id='address'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='address'\r\n                          value={address}\r\n                          onChange={e => onChange(e)}\r\n                          label='Address'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n            )\r\n          }\r\n          \r\n        </div>\r\n        <div className='mb-2 pt-3 flexrow'>\r\n          <Button\r\n            size='large'\r\n            disabled={loading}\r\n            variant='contained'\r\n            color='secondary'\r\n            endIcon= {<SendIcon />}\r\n            type='submit'\r\n          >\r\n            Update\r\n          </Button>\r\n          <div className=\"ml-2\">\r\n            <Button\r\n              size='large'\r\n              component={NavLink}\r\n              disabled={loading}\r\n              variant='contained'\r\n              color='secondary'\r\n              endIcon= {<SendIcon />}\r\n              to={`/user-main/change-password`}\r\n              // type='submit'\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </div>\r\n          \r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\ChangePassword.js",["586"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivitiesTabInAdminDashBoard.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivityItem.js",["587","588","589"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Settings\\SetttingsPage.js",[],{"ruleId":"590","replacedBy":"591"},{"ruleId":"592","replacedBy":"593"},{"ruleId":"594","severity":1,"message":"595","line":94,"column":9,"nodeType":"596","messageId":"597","endLine":94,"endColumn":16},{"ruleId":"598","severity":1,"message":"599","line":102,"column":15,"nodeType":"600","endLine":102,"endColumn":27},{"ruleId":"601","severity":1,"message":"602","line":7,"column":6,"nodeType":"603","endLine":7,"endColumn":8,"suggestions":"604"},{"ruleId":"594","severity":1,"message":"605","line":4,"column":8,"nodeType":"596","messageId":"597","endLine":4,"endColumn":15},{"ruleId":"594","severity":1,"message":"606","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":9},{"ruleId":"594","severity":1,"message":"607","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":12,"column":3,"nodeType":"596","messageId":"597","endLine":12,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":13,"column":3,"nodeType":"596","messageId":"597","endLine":13,"endColumn":12},{"ruleId":"594","severity":1,"message":"611","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":11},{"ruleId":"594","severity":1,"message":"612","line":15,"column":3,"nodeType":"596","messageId":"597","endLine":15,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":16,"column":3,"nodeType":"596","messageId":"597","endLine":16,"endColumn":8},{"ruleId":"594","severity":1,"message":"614","line":18,"column":11,"nodeType":"596","messageId":"597","endLine":18,"endColumn":21},{"ruleId":"594","severity":1,"message":"615","line":18,"column":23,"nodeType":"596","messageId":"597","endLine":18,"endColumn":33},{"ruleId":"598","severity":1,"message":"599","line":222,"column":15,"nodeType":"600","endLine":222,"endColumn":27},{"ruleId":"590","replacedBy":"616"},{"ruleId":"592","replacedBy":"617"},{"ruleId":"594","severity":1,"message":"618","line":21,"column":54,"nodeType":"596","messageId":"597","endLine":21,"endColumn":62},{"ruleId":"594","severity":1,"message":"619","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":9},{"ruleId":"594","severity":1,"message":"620","line":15,"column":3,"nodeType":"596","messageId":"597","endLine":15,"endColumn":6},{"ruleId":"594","severity":1,"message":"621","line":18,"column":3,"nodeType":"596","messageId":"597","endLine":18,"endColumn":7},{"ruleId":"594","severity":1,"message":"622","line":19,"column":3,"nodeType":"596","messageId":"597","endLine":19,"endColumn":14},{"ruleId":"594","severity":1,"message":"623","line":21,"column":3,"nodeType":"596","messageId":"597","endLine":21,"endColumn":13},{"ruleId":"594","severity":1,"message":"624","line":22,"column":3,"nodeType":"596","messageId":"597","endLine":22,"endColumn":9},{"ruleId":"594","severity":1,"message":"615","line":23,"column":3,"nodeType":"596","messageId":"597","endLine":23,"endColumn":13},{"ruleId":"594","severity":1,"message":"625","line":35,"column":32,"nodeType":"596","messageId":"597","endLine":35,"endColumn":42},{"ruleId":"594","severity":1,"message":"626","line":35,"column":44,"nodeType":"596","messageId":"597","endLine":35,"endColumn":50},{"ruleId":"601","severity":1,"message":"627","line":62,"column":6,"nodeType":"603","endLine":62,"endColumn":8,"suggestions":"628"},{"ruleId":"594","severity":1,"message":"607","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":12,"column":3,"nodeType":"596","messageId":"597","endLine":12,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":13,"column":3,"nodeType":"596","messageId":"597","endLine":13,"endColumn":12},{"ruleId":"594","severity":1,"message":"611","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":11},{"ruleId":"594","severity":1,"message":"612","line":15,"column":3,"nodeType":"596","messageId":"597","endLine":15,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":16,"column":3,"nodeType":"596","messageId":"597","endLine":16,"endColumn":8},{"ruleId":"594","severity":1,"message":"614","line":18,"column":11,"nodeType":"596","messageId":"597","endLine":18,"endColumn":21},{"ruleId":"594","severity":1,"message":"615","line":18,"column":23,"nodeType":"596","messageId":"597","endLine":18,"endColumn":33},{"ruleId":"601","severity":1,"message":"629","line":34,"column":6,"nodeType":"603","endLine":34,"endColumn":8,"suggestions":"630"},{"ruleId":"598","severity":1,"message":"631","line":39,"column":11,"nodeType":"600","endLine":47,"endColumn":12},{"ruleId":"590","replacedBy":"632"},{"ruleId":"592","replacedBy":"633"},{"ruleId":"594","severity":1,"message":"634","line":1,"column":40,"nodeType":"596","messageId":"597","endLine":1,"endColumn":48},{"ruleId":"601","severity":1,"message":"635","line":33,"column":6,"nodeType":"603","endLine":33,"endColumn":8,"suggestions":"636"},{"ruleId":"594","severity":1,"message":"637","line":1,"column":50,"nodeType":"596","messageId":"597","endLine":1,"endColumn":58},{"ruleId":"594","severity":1,"message":"638","line":37,"column":5,"nodeType":"596","messageId":"597","endLine":37,"endColumn":12},{"ruleId":"594","severity":1,"message":"639","line":51,"column":10,"nodeType":"596","messageId":"597","endLine":51,"endColumn":26},{"ruleId":"594","severity":1,"message":"640","line":51,"column":28,"nodeType":"596","messageId":"597","endLine":51,"endColumn":47},{"ruleId":"601","severity":1,"message":"641","line":105,"column":6,"nodeType":"603","endLine":105,"endColumn":8,"suggestions":"642"},{"ruleId":"643","severity":1,"message":"644","line":121,"column":24,"nodeType":"645","messageId":"646","endLine":127,"endColumn":7},{"ruleId":"647","severity":1,"message":"648","line":149,"column":22,"nodeType":"649","messageId":"650","endLine":149,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":173,"column":22,"nodeType":"649","messageId":"650","endLine":173,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":190,"column":22,"nodeType":"649","messageId":"650","endLine":190,"endColumn":24},{"ruleId":"594","severity":1,"message":"637","line":1,"column":38,"nodeType":"596","messageId":"597","endLine":1,"endColumn":46},{"ruleId":"601","severity":1,"message":"651","line":95,"column":6,"nodeType":"603","endLine":95,"endColumn":8,"suggestions":"652"},{"ruleId":"594","severity":1,"message":"653","line":102,"column":5,"nodeType":"596","messageId":"597","endLine":102,"endColumn":13},{"ruleId":"594","severity":1,"message":"654","line":24,"column":5,"nodeType":"596","messageId":"597","endLine":24,"endColumn":14},{"ruleId":"594","severity":1,"message":"655","line":25,"column":5,"nodeType":"596","messageId":"597","endLine":25,"endColumn":19},{"ruleId":"594","severity":1,"message":"656","line":53,"column":7,"nodeType":"596","messageId":"597","endLine":53,"endColumn":11},{"ruleId":"601","severity":1,"message":"657","line":72,"column":6,"nodeType":"603","endLine":72,"endColumn":8,"suggestions":"658"},{"ruleId":"594","severity":1,"message":"659","line":160,"column":11,"nodeType":"596","messageId":"597","endLine":160,"endColumn":19},{"ruleId":"594","severity":1,"message":"660","line":160,"column":21,"nodeType":"596","messageId":"597","endLine":160,"endColumn":29},{"ruleId":"594","severity":1,"message":"661","line":160,"column":31,"nodeType":"596","messageId":"597","endLine":160,"endColumn":38},{"ruleId":"601","severity":1,"message":"662","line":29,"column":6,"nodeType":"603","endLine":29,"endColumn":8,"suggestions":"663"},{"ruleId":"594","severity":1,"message":"664","line":977,"column":27,"nodeType":"596","messageId":"597","endLine":977,"endColumn":34},{"ruleId":"594","severity":1,"message":"665","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":12},{"ruleId":"594","severity":1,"message":"606","line":8,"column":3,"nodeType":"596","messageId":"597","endLine":8,"endColumn":9},{"ruleId":"601","severity":1,"message":"666","line":50,"column":6,"nodeType":"603","endLine":50,"endColumn":8,"suggestions":"667"},{"ruleId":"594","severity":1,"message":"668","line":53,"column":11,"nodeType":"596","messageId":"597","endLine":53,"endColumn":14},{"ruleId":"594","severity":1,"message":"669","line":53,"column":16,"nodeType":"596","messageId":"597","endLine":53,"endColumn":20},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"613","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":8},{"ruleId":"594","severity":1,"message":"671","line":1,"column":26,"nodeType":"596","messageId":"597","endLine":1,"endColumn":36},{"ruleId":"594","severity":1,"message":"672","line":4,"column":3,"nodeType":"596","messageId":"597","endLine":4,"endColumn":12},{"ruleId":"594","severity":1,"message":"673","line":5,"column":3,"nodeType":"596","messageId":"597","endLine":5,"endColumn":19},{"ruleId":"594","severity":1,"message":"606","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":9},{"ruleId":"674","severity":1,"message":"675","line":57,"column":11,"nodeType":"600","endLine":57,"endColumn":76},{"ruleId":"598","severity":1,"message":"631","line":62,"column":13,"nodeType":"600","endLine":62,"endColumn":70},{"ruleId":"594","severity":1,"message":"676","line":1,"column":16,"nodeType":"596","messageId":"597","endLine":1,"endColumn":25},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"677","line":3,"column":8,"nodeType":"596","messageId":"597","endLine":3,"endColumn":14},{"ruleId":"594","severity":1,"message":"605","line":6,"column":8,"nodeType":"596","messageId":"597","endLine":6,"endColumn":15},{"ruleId":"594","severity":1,"message":"607","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":12,"column":3,"nodeType":"596","messageId":"597","endLine":12,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":15,"column":3,"nodeType":"596","messageId":"597","endLine":15,"endColumn":8},{"ruleId":"594","severity":1,"message":"656","line":42,"column":5,"nodeType":"596","messageId":"597","endLine":42,"endColumn":9},{"ruleId":"594","severity":1,"message":"678","line":43,"column":5,"nodeType":"596","messageId":"597","endLine":43,"endColumn":16},{"ruleId":"594","severity":1,"message":"679","line":44,"column":5,"nodeType":"596","messageId":"597","endLine":44,"endColumn":20},{"ruleId":"594","severity":1,"message":"625","line":49,"column":5,"nodeType":"596","messageId":"597","endLine":49,"endColumn":15},{"ruleId":"594","severity":1,"message":"680","line":50,"column":5,"nodeType":"596","messageId":"597","endLine":50,"endColumn":19},{"ruleId":"594","severity":1,"message":"681","line":52,"column":5,"nodeType":"596","messageId":"597","endLine":52,"endColumn":15},{"ruleId":"594","severity":1,"message":"626","line":53,"column":5,"nodeType":"596","messageId":"597","endLine":53,"endColumn":11},{"ruleId":"594","severity":1,"message":"638","line":54,"column":5,"nodeType":"596","messageId":"597","endLine":54,"endColumn":12},{"ruleId":"594","severity":1,"message":"682","line":55,"column":5,"nodeType":"596","messageId":"597","endLine":55,"endColumn":17},{"ruleId":"594","severity":1,"message":"618","line":56,"column":5,"nodeType":"596","messageId":"597","endLine":56,"endColumn":13},{"ruleId":"594","severity":1,"message":"668","line":4,"column":11,"nodeType":"596","messageId":"597","endLine":4,"endColumn":14},{"ruleId":"598","severity":1,"message":"631","line":11,"column":9,"nodeType":"600","endLine":14,"endColumn":10},{"ruleId":"590","replacedBy":"683"},{"ruleId":"592","replacedBy":"684"},{"ruleId":"594","severity":1,"message":"668","line":5,"column":11,"nodeType":"596","messageId":"597","endLine":5,"endColumn":14},{"ruleId":"598","severity":1,"message":"631","line":15,"column":9,"nodeType":"600","endLine":18,"endColumn":10},{"ruleId":"594","severity":1,"message":"676","line":1,"column":16,"nodeType":"596","messageId":"597","endLine":1,"endColumn":25},{"ruleId":"594","severity":1,"message":"634","line":1,"column":27,"nodeType":"596","messageId":"597","endLine":1,"endColumn":35},{"ruleId":"594","severity":1,"message":"607","line":3,"column":3,"nodeType":"596","messageId":"597","endLine":3,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":4,"column":3,"nodeType":"596","messageId":"597","endLine":4,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":5,"column":3,"nodeType":"596","messageId":"597","endLine":5,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":12,"column":3,"nodeType":"596","messageId":"597","endLine":12,"endColumn":8},{"ruleId":"594","severity":1,"message":"606","line":13,"column":3,"nodeType":"596","messageId":"597","endLine":13,"endColumn":9},{"ruleId":"594","severity":1,"message":"685","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":13},{"ruleId":"594","severity":1,"message":"686","line":15,"column":3,"nodeType":"596","messageId":"597","endLine":15,"endColumn":9},{"ruleId":"594","severity":1,"message":"687","line":16,"column":3,"nodeType":"596","messageId":"597","endLine":16,"endColumn":14},{"ruleId":"594","severity":1,"message":"688","line":17,"column":3,"nodeType":"596","messageId":"597","endLine":17,"endColumn":16},{"ruleId":"594","severity":1,"message":"689","line":18,"column":3,"nodeType":"596","messageId":"597","endLine":18,"endColumn":20},{"ruleId":"594","severity":1,"message":"690","line":19,"column":3,"nodeType":"596","messageId":"597","endLine":19,"endColumn":16},{"ruleId":"594","severity":1,"message":"619","line":20,"column":3,"nodeType":"596","messageId":"597","endLine":20,"endColumn":9},{"ruleId":"594","severity":1,"message":"691","line":21,"column":9,"nodeType":"596","messageId":"597","endLine":21,"endColumn":28},{"ruleId":"594","severity":1,"message":"692","line":25,"column":9,"nodeType":"596","messageId":"597","endLine":25,"endColumn":28},{"ruleId":"594","severity":1,"message":"693","line":29,"column":9,"nodeType":"596","messageId":"597","endLine":29,"endColumn":24},{"ruleId":"594","severity":1,"message":"615","line":6,"column":23,"nodeType":"596","messageId":"597","endLine":6,"endColumn":33},{"ruleId":"594","severity":1,"message":"653","line":12,"column":5,"nodeType":"596","messageId":"597","endLine":12,"endColumn":13},{"ruleId":"594","severity":1,"message":"672","line":5,"column":3,"nodeType":"596","messageId":"597","endLine":5,"endColumn":12},{"ruleId":"594","severity":1,"message":"665","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":12},{"ruleId":"594","severity":1,"message":"606","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":9},{"ruleId":"594","severity":1,"message":"607","line":8,"column":3,"nodeType":"596","messageId":"597","endLine":8,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":8},{"ruleId":"594","severity":1,"message":"615","line":17,"column":23,"nodeType":"596","messageId":"597","endLine":17,"endColumn":33},{"ruleId":"694","severity":1,"message":"695","line":9,"column":1,"nodeType":"696","endLine":31,"endColumn":3},{"ruleId":"694","severity":1,"message":"695","line":34,"column":1,"nodeType":"696","endLine":156,"endColumn":3},{"ruleId":"694","severity":1,"message":"695","line":18,"column":1,"nodeType":"696","endLine":78,"endColumn":2},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"672","line":5,"column":3,"nodeType":"596","messageId":"597","endLine":5,"endColumn":12},{"ruleId":"594","severity":1,"message":"606","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":9},{"ruleId":"594","severity":1,"message":"607","line":8,"column":3,"nodeType":"596","messageId":"597","endLine":8,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":8},{"ruleId":"694","severity":1,"message":"695","line":3,"column":1,"nodeType":"696","endLine":27,"endColumn":3},{"ruleId":"694","severity":1,"message":"695","line":7,"column":2,"nodeType":"696","endLine":19,"endColumn":3},{"ruleId":"594","severity":1,"message":"668","line":8,"column":11,"nodeType":"596","messageId":"597","endLine":8,"endColumn":14},{"ruleId":"598","severity":1,"message":"631","line":7,"column":7,"nodeType":"600","endLine":10,"endColumn":53},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"607","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":8,"column":3,"nodeType":"596","messageId":"597","endLine":8,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":13,"column":3,"nodeType":"596","messageId":"597","endLine":13,"endColumn":8},{"ruleId":"594","severity":1,"message":"653","line":31,"column":29,"nodeType":"596","messageId":"597","endLine":31,"endColumn":37},{"ruleId":"594","severity":1,"message":"676","line":1,"column":29,"nodeType":"596","messageId":"597","endLine":1,"endColumn":38},{"ruleId":"594","severity":1,"message":"697","line":12,"column":11,"nodeType":"596","messageId":"597","endLine":12,"endColumn":25},{"ruleId":"594","severity":1,"message":"698","line":16,"column":17,"nodeType":"596","messageId":"597","endLine":16,"endColumn":26},{"ruleId":"594","severity":1,"message":"699","line":24,"column":11,"nodeType":"596","messageId":"597","endLine":24,"endColumn":23},{"ruleId":"594","severity":1,"message":"653","line":25,"column":11,"nodeType":"596","messageId":"597","endLine":25,"endColumn":19},{"ruleId":"594","severity":1,"message":"700","line":27,"column":11,"nodeType":"596","messageId":"597","endLine":27,"endColumn":19},{"ruleId":"594","severity":1,"message":"701","line":13,"column":7,"nodeType":"596","messageId":"597","endLine":13,"endColumn":20},{"ruleId":"594","severity":1,"message":"702","line":18,"column":7,"nodeType":"596","messageId":"597","endLine":18,"endColumn":21},{"ruleId":"594","severity":1,"message":"703","line":55,"column":7,"nodeType":"596","messageId":"597","endLine":55,"endColumn":19},{"ruleId":"594","severity":1,"message":"625","line":21,"column":11,"nodeType":"596","messageId":"597","endLine":21,"endColumn":21},{"ruleId":"594","severity":1,"message":"626","line":21,"column":23,"nodeType":"596","messageId":"597","endLine":21,"endColumn":29},{"ruleId":"594","severity":1,"message":"638","line":21,"column":31,"nodeType":"596","messageId":"597","endLine":21,"endColumn":38},{"ruleId":"601","severity":1,"message":"704","line":25,"column":6,"nodeType":"603","endLine":25,"endColumn":8,"suggestions":"705"},{"ruleId":"594","severity":1,"message":"670","line":2,"column":10,"nodeType":"596","messageId":"597","endLine":2,"endColumn":14},{"ruleId":"594","severity":1,"message":"672","line":5,"column":3,"nodeType":"596","messageId":"597","endLine":5,"endColumn":12},{"ruleId":"594","severity":1,"message":"665","line":6,"column":3,"nodeType":"596","messageId":"597","endLine":6,"endColumn":12},{"ruleId":"594","severity":1,"message":"606","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":9},{"ruleId":"594","severity":1,"message":"607","line":8,"column":3,"nodeType":"596","messageId":"597","endLine":8,"endColumn":17},{"ruleId":"594","severity":1,"message":"608","line":9,"column":3,"nodeType":"596","messageId":"597","endLine":9,"endColumn":8},{"ruleId":"594","severity":1,"message":"609","line":10,"column":3,"nodeType":"596","messageId":"597","endLine":10,"endColumn":12},{"ruleId":"594","severity":1,"message":"610","line":11,"column":3,"nodeType":"596","messageId":"597","endLine":11,"endColumn":12},{"ruleId":"594","severity":1,"message":"613","line":14,"column":3,"nodeType":"596","messageId":"597","endLine":14,"endColumn":8},{"ruleId":"594","severity":1,"message":"615","line":17,"column":23,"nodeType":"596","messageId":"597","endLine":17,"endColumn":33},{"ruleId":"594","severity":1,"message":"706","line":7,"column":7,"nodeType":"596","messageId":"597","endLine":7,"endColumn":13},{"ruleId":"594","severity":1,"message":"707","line":24,"column":8,"nodeType":"596","messageId":"597","endLine":24,"endColumn":16},{"ruleId":"708","severity":1,"message":"709","line":138,"column":9,"nodeType":"600","endLine":141,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":142,"column":9,"nodeType":"600","endLine":145,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":146,"column":9,"nodeType":"600","endLine":149,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":150,"column":9,"nodeType":"600","endLine":153,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":154,"column":9,"nodeType":"600","endLine":157,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":158,"column":9,"nodeType":"600","endLine":161,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":162,"column":9,"nodeType":"600","endLine":166,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":167,"column":9,"nodeType":"600","endLine":175,"endColumn":11},{"ruleId":"708","severity":1,"message":"710","line":176,"column":9,"nodeType":"600","endLine":176,"endColumn":30},{"ruleId":"708","severity":1,"message":"709","line":182,"column":7,"nodeType":"600","endLine":185,"endColumn":9},{"ruleId":"708","severity":1,"message":"709","line":186,"column":7,"nodeType":"600","endLine":189,"endColumn":9},{"ruleId":"708","severity":1,"message":"709","line":190,"column":7,"nodeType":"600","endLine":198,"endColumn":9},{"ruleId":"708","severity":1,"message":"710","line":199,"column":7,"nodeType":"600","endLine":199,"endColumn":28},{"ruleId":"708","severity":1,"message":"709","line":205,"column":7,"nodeType":"600","endLine":214,"endColumn":9},{"ruleId":"708","severity":1,"message":"709","line":249,"column":11,"nodeType":"600","endLine":253,"endColumn":13},{"ruleId":"708","severity":1,"message":"709","line":254,"column":11,"nodeType":"600","endLine":258,"endColumn":13},{"ruleId":"594","severity":1,"message":"711","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":14},{"ruleId":"601","severity":1,"message":"712","line":77,"column":6,"nodeType":"603","endLine":77,"endColumn":8,"suggestions":"713"},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"613","line":7,"column":3,"nodeType":"596","messageId":"597","endLine":7,"endColumn":8},{"ruleId":"601","severity":1,"message":"714","line":42,"column":6,"nodeType":"603","endLine":42,"endColumn":15,"suggestions":"715"},{"ruleId":"594","severity":1,"message":"668","line":45,"column":5,"nodeType":"596","messageId":"597","endLine":45,"endColumn":8},{"ruleId":"594","severity":1,"message":"638","line":16,"column":5,"nodeType":"596","messageId":"597","endLine":16,"endColumn":12},{"ruleId":"594","severity":1,"message":"676","line":1,"column":16,"nodeType":"596","messageId":"597","endLine":1,"endColumn":25},{"ruleId":"594","severity":1,"message":"670","line":2,"column":9,"nodeType":"596","messageId":"597","endLine":2,"endColumn":13},{"ruleId":"594","severity":1,"message":"678","line":25,"column":5,"nodeType":"596","messageId":"597","endLine":25,"endColumn":16},"no-native-reassign",["716"],"no-negated-in-lhs",["717"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["718"],"'Spinner' is defined but never used.","'Button' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.",["716"],["717"],"'payments' is assigned a value but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'colors' is defined but never used.","'loadOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUserActivities' and 'loadDashboardReports'. Either include them or remove the dependency array.",["719"],"React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["720"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["716"],["717"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["721"],"'Fragment' is defined but never used.","'loading' is assigned a value but never used.","'sectionSelection' is assigned a value but never used.","'setSectionSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadServiceStatuses', 'loadSingleOrder', 'next', and 'orderId'. Either include them or remove the dependency array.",["722"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadSingleService', 'match.params.serviceId', 'next', and 'setAdminLoading'. Either include them or remove the dependency array.",["723"],"'category' is assigned a value but never used.","'userQuery' is assigned a value but never used.","'clearUserQuery' is assigned a value but never used.","'date' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activityId', 'getSingleUserActivity', and 'next'. Either include them or remove the dependency array.",["724"],"'username' is assigned a value but never used.","'fullName' is assigned a value but never used.","'balance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers.length' and 'loadCustomers'. Either include them or remove the dependency array.",["725"],"'payment' is assigned a value but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'loadSingleOrder', 'match.params._id', and 'next'. Either include them or remove the dependency array.",["726"],"'_id' is assigned a value but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'useContext' is defined but never used.","'Container' is defined but never used.","'CircularProgress' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Moment' is defined but never used.","'orderStatus' is assigned a value but never used.","'orderTotalPrice' is assigned a value but never used.","'loadCategories' is assigned a value but never used.","'categories' is assigned a value but never used.","'loadPayments' is assigned a value but never used.",["716"],["717"],"'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'handleFeaturedClick' is assigned a value but never used.","'handleDryCleanClick' is assigned a value but never used.","'handleIronClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'publicServices' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'categoryName' is assigned a value but never used.","'featured' is assigned a value but never used.","'desktopPublic' is assigned a value but never used.","'desktopPrivate' is assigned a value but never used.","'exampleTable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPayments'. Either include it or remove the dependency array.",["727"],"'images' is assigned a value but never used.","'TuneIcon' is defined but never used.","react/jsx-pascal-case","Imported JSX component _CustomNavButton must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _LogoutModalDialog must be in PascalCase or SCREAMING_SNAKE_CASE","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'loadSingleCustomer', 'match.params.id', and 'updateFormFromBackend'. Either include them or remove the dependency array.",["728"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["729"],"no-global-assign","no-unsafe-negation",{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},"Update the dependencies array to be: [match]",{"range":"754","text":"755"},"Update the dependencies array to be: [getAllUserActivities, loadDashboardReports]",{"range":"756","text":"757"},"Update the dependencies array to be: [loadServices]",{"range":"758","text":"759"},"Update the dependencies array to be: [loadCategories]",{"range":"760","text":"761"},"Update the dependencies array to be: [loadServiceStatuses, loadSingleOrder, next, orderId]",{"range":"762","text":"763"},"Update the dependencies array to be: [loadSingleService, match.params.serviceId, next, setAdminLoading]",{"range":"764","text":"765"},"Update the dependencies array to be: [activityId, getSingleUserActivity, next]",{"range":"766","text":"767"},"Update the dependencies array to be: [customers.length, loadCustomers]",{"range":"768","text":"769"},"Update the dependencies array to be: [loadSingleOrder, match.params._id, next]",{"range":"770","text":"771"},"Update the dependencies array to be: [loadPayments]",{"range":"772","text":"773"},"Update the dependencies array to be: [loadSingleCustomer, match.params.id, updateFormFromBackend]",{"range":"774","text":"775"},"Update the dependencies array to be: [loading, user]",{"range":"776","text":"777"},[151,153],"[match]",[1951,1953],"[getAllUserActivities, loadDashboardReports]",[786,788],"[loadServices]",[727,729],"[loadCategories]",[3037,3039],"[loadServiceStatuses, loadSingleOrder, next, orderId]",[2586,2588],"[loadSingleService, match.params.serviceId, next, setAdminLoading]",[1861,1863],"[activityId, getSingleUserActivity, next]",[797,799],"[customers.length, loadCustomers]",[1374,1376],"[loadSingleOrder, match.params._id, next]",[647,649],"[loadPayments]",[2384,2386],"[loadSingleCustomer, match.params.id, updateFormFromBackend]",[925,934],"[loading, user]"]