[{"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js":"1","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js":"2","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js":"3","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js":"4","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js":"6","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js":"7","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js":"8","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js":"9","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js":"10","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js":"11","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js":"12","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js":"13","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js":"14","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js":"15","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails.js":"16","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js":"17","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js":"18","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js":"19","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js":"20","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js":"21","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js":"22","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js":"23","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js":"24","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js":"25","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js":"26","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js":"27","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js":"28","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js":"29","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js":"30","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js":"31","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js":"32","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js":"33","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js":"34","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js":"35","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js":"36","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js":"37","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js":"38","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js":"39","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js":"40","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js":"41","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js":"42","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js":"43","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js":"44","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js":"45","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js":"46","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js":"47","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js":"48","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js":"49","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js":"50","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js":"51","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js":"52","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js":"53","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js":"54","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js":"55","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js":"56","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js":"57","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js":"58","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js":"59","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js":"60","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js":"61","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js":"62","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js":"63","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js":"64","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js":"65","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js":"66","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js":"67","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js":"68","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js":"69","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js":"70","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js":"71","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js":"72","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js":"73","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js":"74","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js":"75","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js":"76","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js":"77","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\OrdersTabInAdminDashBoard.js":"78","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\OrdersItem.js":"79"},{"size":196,"mtime":1577324814196,"results":"80","hashOfConfig":"81"},{"size":8021,"mtime":1612460627193,"results":"82","hashOfConfig":"81"},{"size":902,"mtime":1577324813984,"results":"83","hashOfConfig":"81"},{"size":918,"mtime":1578017302749,"results":"84","hashOfConfig":"81"},{"size":1301,"mtime":1612293825218,"results":"85","hashOfConfig":"81"},{"size":2599,"mtime":1612393840056,"results":"86","hashOfConfig":"81"},{"size":3228,"mtime":1577324814073,"results":"87","hashOfConfig":"81"},{"size":2535,"mtime":1578017302763,"results":"88","hashOfConfig":"81"},{"size":1665,"mtime":1612407497882,"results":"89","hashOfConfig":"81"},{"size":183,"mtime":1578017302761,"results":"90","hashOfConfig":"81"},{"size":8393,"mtime":1611530536418,"results":"91","hashOfConfig":"81"},{"size":815,"mtime":1578017302782,"results":"92","hashOfConfig":"81"},{"size":430,"mtime":1577324814199,"results":"93","hashOfConfig":"81"},{"size":811,"mtime":1578017302783,"results":"94","hashOfConfig":"81"},{"size":3003,"mtime":1597007136578,"results":"95","hashOfConfig":"81"},{"size":9873,"mtime":1612413386792,"results":"96","hashOfConfig":"81"},{"size":3322,"mtime":1612413471363,"results":"97","hashOfConfig":"81"},{"size":3646,"mtime":1612647824648,"results":"98","hashOfConfig":"81"},{"size":2243,"mtime":1612461346132,"results":"99","hashOfConfig":"81"},{"size":2208,"mtime":1578017302727,"results":"100","hashOfConfig":"81"},{"size":3364,"mtime":1612295815546,"results":"101","hashOfConfig":"81"},{"size":16426,"mtime":1612369014930,"results":"102","hashOfConfig":"81"},{"size":10487,"mtime":1612308813023,"results":"103","hashOfConfig":"81"},{"size":2629,"mtime":1612295855754,"results":"104","hashOfConfig":"81"},{"size":11098,"mtime":1612284497132,"results":"105","hashOfConfig":"81"},{"size":4162,"mtime":1612293999143,"results":"106","hashOfConfig":"81"},{"size":826,"mtime":1577324814101,"results":"107","hashOfConfig":"81"},{"size":5448,"mtime":1611807275373,"results":"108","hashOfConfig":"81"},{"size":5687,"mtime":1611530859805,"results":"109","hashOfConfig":"81"},{"size":26946,"mtime":1612647482460,"results":"110","hashOfConfig":"81"},{"size":3482,"mtime":1597789036822,"results":"111","hashOfConfig":"81"},{"size":2884,"mtime":1612386618215,"results":"112","hashOfConfig":"81"},{"size":4934,"mtime":1612386518869,"results":"113","hashOfConfig":"81"},{"size":113,"mtime":1577324814103,"results":"114","hashOfConfig":"81"},{"size":111,"mtime":1577324814109,"results":"115","hashOfConfig":"81"},{"size":320,"mtime":1578017302771,"results":"116","hashOfConfig":"81"},{"size":561,"mtime":1577324814070,"results":"117","hashOfConfig":"81"},{"size":115,"mtime":1577324814117,"results":"118","hashOfConfig":"81"},{"size":109,"mtime":1578017302810,"results":"119","hashOfConfig":"81"},{"size":1752,"mtime":1597007136583,"results":"120","hashOfConfig":"81"},{"size":113,"mtime":1577324814096,"results":"121","hashOfConfig":"81"},{"size":2178,"mtime":1612379713081,"results":"122","hashOfConfig":"81"},{"size":1140,"mtime":1578017302740,"results":"123","hashOfConfig":"81"},{"size":1826,"mtime":1612301457841,"results":"124","hashOfConfig":"81"},{"size":5034,"mtime":1597007136480,"results":"125","hashOfConfig":"81"},{"size":2381,"mtime":1577324814017,"results":"126","hashOfConfig":"81"},{"size":5175,"mtime":1612301457840,"results":"127","hashOfConfig":"81"},{"size":588,"mtime":1611877741367,"results":"128","hashOfConfig":"81"},{"size":631,"mtime":1578017302713,"results":"129","hashOfConfig":"81"},{"size":4358,"mtime":1612368697461,"results":"130","hashOfConfig":"81"},{"size":2838,"mtime":1612410729748,"results":"131","hashOfConfig":"81"},{"size":1332,"mtime":1612386618214,"results":"132","hashOfConfig":"81"},{"size":2090,"mtime":1612470664636,"results":"133","hashOfConfig":"81"},{"size":3325,"mtime":1611895482857,"results":"134","hashOfConfig":"81"},{"size":574,"mtime":1578017302812,"results":"135","hashOfConfig":"81"},{"size":3412,"mtime":1611895482857,"results":"136","hashOfConfig":"81"},{"size":1586,"mtime":1611530255305,"results":"137","hashOfConfig":"81"},{"size":4956,"mtime":1611994144925,"results":"138","hashOfConfig":"81"},{"size":627,"mtime":1611806084054,"results":"139","hashOfConfig":"81"},{"size":347,"mtime":1577324814104,"results":"140","hashOfConfig":"81"},{"size":434,"mtime":1611628396314,"results":"141","hashOfConfig":"81"},{"size":956,"mtime":1612231885132,"results":"142","hashOfConfig":"81"},{"size":1188,"mtime":1577324814029,"results":"143","hashOfConfig":"81"},{"size":2429,"mtime":1611891484535,"results":"144","hashOfConfig":"81"},{"size":4383,"mtime":1612302312976,"results":"145","hashOfConfig":"81"},{"size":653,"mtime":1612410641488,"results":"146","hashOfConfig":"81"},{"size":4553,"mtime":1612458924072,"results":"147","hashOfConfig":"81"},{"size":1308,"mtime":1612388750640,"results":"148","hashOfConfig":"81"},{"size":707,"mtime":1611980451965,"results":"149","hashOfConfig":"81"},{"size":1726,"mtime":1612219860188,"results":"150","hashOfConfig":"81"},{"size":2855,"mtime":1612224843188,"results":"151","hashOfConfig":"81"},{"size":1935,"mtime":1612282207223,"results":"152","hashOfConfig":"81"},{"size":3905,"mtime":1612410678460,"results":"153","hashOfConfig":"81"},{"size":5495,"mtime":1612471342689,"results":"154","hashOfConfig":"81"},{"size":2385,"mtime":1612645600244,"results":"155","hashOfConfig":"81"},{"size":2828,"mtime":1612645600244,"results":"156","hashOfConfig":"81"},{"size":1833,"mtime":1612646027550,"results":"157","hashOfConfig":"81"},{"size":2105,"mtime":1612647756924,"results":"158","hashOfConfig":"81"},{"size":2178,"mtime":1612379713081,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"127ii91",{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"162"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"162"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"162"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"162"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"162"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"162"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"162"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"162"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"162"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"162"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"162"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"211"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"162"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"162"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"162"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"162"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"162"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"162"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"162"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"162"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"162"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"162"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"162"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"211"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"162"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"162"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"162"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"162"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"162"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"162"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"162"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"162"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js",[],["364","365"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js",["366"],"import React, {useEffect } from 'react';\r\n// import 'materialize-css/dist/css/materialize.min.css';\r\n// import M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nimport './Utilities.css';\r\nimport './App.css';\r\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\r\n// Layout\r\nimport ContentBody from './components/layout/ContentBody';\r\nimport Navbar from \"./components/layout/Navbar/Navbar\";\r\nimport GlobalStyles from './components/layout/GlobalStyles';\r\nimport Alert from './components/layout/Alert';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport About from './components/public/About';\r\nimport Home from \"./components/public/home/Home\";\r\nimport UserPage from \"./components/public/UserPage\";\r\nimport AdminLogin from \"./components/login/AdminLogin\";\r\nimport CustomerLogin from \"./components/login/CustomerLogin\";\r\nimport AdminDashboard from \"./components/Admin/dashboard/AdminDashboard\";\r\nimport AuthLoader from './components/layout/AuthLoader'\r\n\r\nimport AddClothes from './components/AddClothes';\r\n\r\nimport setAuthToken from './utils/setAuthToken'\r\n// States\r\nimport PublicState from './context/public/PublicState'\r\nimport AlertState from './context/alert/AlertState'\r\nimport AuthState from './context/auth/AuthState'\r\nimport AdminState from './context/admin/AdminState'\r\nimport UserState from './context/user/UserState'\r\n// Private Routes\r\nimport AdminRoute from './components/routing/AdminRoute'\r\nimport UserRoute from './components/routing/UserRoute'\r\n\r\nimport CustomersTab from './components/Admin/Customers/CustomersTab'\r\nimport OrdersTab from \"./components/Admin/Orders/OrdersTab\";\r\nimport ServicesTab from './components/Admin/Services/ServicesTab'\r\nimport CategoriesPage from './components/Admin/Categories/CategoriesPage';\r\nimport AddCategory from './components/Admin/Categories/AddCategory';\r\nimport CustomerDetails from './components/Admin/Customers/CustomerDetails'\r\nimport NewOrder from './components/Admin/OrderForm/NewOrder';\r\nimport  PaymentsPage  from './components/Admin/payment/PaymentsPage';\r\nimport AddPayment  from './components/Admin/payment/AddPayment'\r\nimport AddService from './components/Admin/Services/AddService'\r\nimport Footer from './components/layout/Footer'\r\n\r\n// User\r\nimport UserMain from './components/user/main/UserMain'\r\nimport SingleOrder from './components/user/singleOrder/SingleOrder'\r\n \r\n\r\n\r\n// if (localStorage.auth) {\r\n//   setAuthToken(localStorage.auth);\r\n  \r\n// }\r\n\r\n\r\n\r\n\r\n\r\nconst  App =  () => { \r\n\r\n\r\n  useEffect(  () => {\r\n    // Initialize Materialize\r\n    // M.AutoInit();\r\n\r\n    if (localStorage.auth) {\r\n      setAuthToken(localStorage.auth);\r\n    }\r\n\r\n    // Load User or Load Admin\r\n    // if(userType === 'user' ) await loadUser();\r\n    // if(userType === 'Admin' ) await loadAdmin();\r\n    \r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3)\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div \r\n      className='App' \r\n      // style={{display: 'flex'}}\r\n    >\r\n      <AlertState>\r\n        <AuthState>\r\n          <PublicState>\r\n            <UserState>\r\n              <AdminState>\r\n                <BrowserRouter>\r\n                  <ContentBody>\r\n                  <Navbar />\r\n                  <Alert />\r\n                  <AuthLoader />\r\n                  {/* <div style={{ minHeight: \"90vh\" }} className='mp-0'> */}\r\n                    <GlobalStyles />\r\n                    <Switch>\r\n                      <Route exact path='/' component={Home} />\r\n                      <Route exact path='/about' component={About} />\r\n                      <Route exact path='/admin' component={AdminLogin} />\r\n                      <Route\r\n                        exact\r\n                        path='/user-login'\r\n                        component={CustomerLogin}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard'\r\n                        component={AdminDashboard}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/customers'\r\n                        component={CustomersTab}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/orders'\r\n                        component={OrdersTab}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/categories'\r\n                        component={CategoriesPage}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/categories/add'\r\n                        component={AddCategory}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/services'\r\n                        component={ServicesTab}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/orders/add`}\r\n                        component={NewOrder}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path='/dashboard/payments'\r\n                        component={PaymentsPage}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/payments/add-payment`}\r\n                        component={AddPayment}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/payments/edit/:activityId`}\r\n                        component={AddPayment}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/orders/edit/:orderId`}\r\n                        component={NewOrder}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/services/add`}\r\n                        component={AddService}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/services/edit/:serviceId`}\r\n                        component={AddService}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/customers/edit/:id`}\r\n                        component={CustomerDetails}\r\n                      />\r\n                      <AdminRoute\r\n                        exact\r\n                        path={`/dashboard/customers/add`}\r\n                        component={CustomerDetails}\r\n                      />\r\n                      <UserRoute\r\n                        exact\r\n                        path={`/user-main`}\r\n                        component={UserMain}\r\n                      />\r\n                      <UserRoute\r\n                        exact\r\n                        path={`/user-main/orders/:_id`}\r\n                        component={SingleOrder}\r\n                      />\r\n                      <Route\r\n                        exact\r\n                        path='/admin/addclothes'\r\n                        component={AddClothes}\r\n                      />\r\n                      <Route exact path='/user/:userId' component={UserPage} />\r\n\r\n                      <Route exact path='/user/:userId' component={UserPage} />\r\n                    </Switch>\r\n                  {/* </div> */}\r\n                  <Footer />\r\n                  </ContentBody>\r\n                </BrowserRouter>\r\n              </AdminState>\r\n            </UserState>\r\n          </PublicState>\r\n        </AuthState>\r\n      </AlertState>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js",["367"],"import React, { useContext, useState } from \"react\";\r\nimport authContext from \"../../context/auth/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AdminLogin = () => {\r\n\r\n  const authContext1 = useContext(authContext);\r\n  const { adminLogin, isAuthenticated, userType, loading, user } = authContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { username, email, password } = formData;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    adminLogin(formData);\r\n    // console.log('SUCCESS');\r\n  };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {\r\n    // console.log(isAuthenticated, userType, loading);\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  // const divStyle = {\r\n  //   maxWidth: \"650px\",\r\n  //   maxHeigt: \"750px\",\r\n\r\n  // } \r\n  \r\n  return (\r\n    <div id='admin-login-component-div'>\r\n      <div className='row'>\r\n        <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n          <div className='row'>\r\n            <div className='input-field col s12'>\r\n              <h1 className='center'>Admin Login</h1>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s6'>\r\n              <input\r\n                placeholder='Username'\r\n                required\r\n                id='userName'\r\n                type='text'\r\n                className='validate'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='username'>Username</label>\r\n            </div>\r\n            <div className='input-field col s6'>\r\n              <input\r\n                placeholder='Email'\r\n                required\r\n                id='email'\r\n                type='email'\r\n                className='validate'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='Email'>Email</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s12'>\r\n              <input\r\n                id='password'\r\n                required\r\n                type='password'\r\n                className='validate'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='col s6 '>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>\r\n            <div className='col s6 right'>\r\n              <button\r\n                type='submit'\r\n                className='btn full waves-effect waves-light green-darken-2  right'\r\n              >\r\n                Login\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js",["368"],"import React, {useEffect} from 'react'\r\n\r\nconst UserPage = ({match}) => {\r\n  //match.params.userId\r\n  useEffect(() => {\r\n    console.log(match);\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      This is User Page\r\n\r\n      This is Collapsible\r\n      {/* <ul class=\"collapsible\">\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">filter_drama</i>First</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">place</i>Second</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">whatshot</i>Third</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n      </ul> */}\r\n\r\n      \r\n\r\n      <hr />\r\n      <hr />\r\n      <hr />\r\n\r\n\r\n      <table className=\"striped highlight\">\r\n        <thead>\r\n          <tr>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr style={{height: \"15px\"}}>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.8777</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alan</td>\r\n            <td>Jellybean</td>\r\n            <td>$3.76</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      \r\n\r\n\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPage;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js",["369","370","371","372","373","374","375","376","377","378","379"],"import React, { useEffect, useContext, Fragment } from 'react'\r\nimport HomeHero from './HomeHero'\r\nimport Services from './services/Services'\r\nimport Spinner from '../../layout/Spinner'\r\nimport publicContext from '../../../context/public/publicContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Home = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    getServicesAndCategories,\r\n    loading\r\n  } = publicContext1\r\n  \r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    getServicesAndCategories();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {/* loading ? <Spinner></Spinner> */}\r\n\r\n      <div>\r\n        {/* {\r\n          !loading && <HomeHero />\r\n        } */}\r\n        <HomeHero />\r\n        <Container\r\n          maxWidth='lg'\r\n          style={{\r\n            backgroundColor:'#ccc',\r\n            minHeight:'90vh'\r\n          }}\r\n        >\r\n          {\r\n            loading \r\n              ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              ) \r\n              : <Services />\r\n          }\r\n          \r\n        </Container>\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js",["380","381","382"],"import React, { useState, useContext } from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport authContext from '../../context/auth/authContext'\r\nimport alertContext from '../../context/alert/alertContext'\r\n\r\nconst CustomerLogin = () => {\r\n  const authContext1 =  useContext(authContext);\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    userLogin, \r\n    userRegister,\r\n    isAuthenticated, \r\n    userType, \r\n    loading, \r\n    user\r\n  } = authContext1\r\n  const { \r\n    setAlert\r\n  } = alertContext1\r\n\r\n  const [ loginMode, setLoginMode ] = useState('login');  // 'login' || 'signup'\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: '',\r\n    personName: '',\r\n    middleName: '',\r\n    tel1: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const { \r\n    username, \r\n    email, \r\n    password, \r\n    // for 'signup'\r\n    confirmPassword,\r\n    personName,\r\n    middleName,\r\n    tel1,\r\n    lastName\r\n  } = formData\r\n\r\n    const onChange = e => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const onSubmit = async e => {\r\n      e.preventDefault();\r\n      if ( loginMode === 'login' ) {\r\n        userLogin(formData);      \r\n      } \r\n      else {  // loginMode === 'signup'\r\n        if ( password !== confirmPassword ) {\r\n          return setAlert('Passwords do not match!', \"danger\");          \r\n        }\r\n        userRegister(formData);\r\n      }\r\n    };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"user\" && !loading && user) {    \r\n    return <Redirect to='/user-main' />;\r\n  }\r\n\r\n  // Redirect if Authenticated as an Admin\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {    \r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <div id='user-login-component-div'>\r\n      <div className='row'>\r\n        <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n          <div className='row'>\r\n            <div className='input-field col s12'>\r\n              <h1 className='center'>User Login</h1>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s6'>\r\n              <input\r\n                placeholder='Username'\r\n                required\r\n                id='userName'\r\n                type='text'\r\n                className='validate'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='username'>Username</label>\r\n            </div>\r\n            <div className='input-field col s6'>\r\n              <input\r\n                placeholder='Email'\r\n                required\r\n                id='email'\r\n                type='email'\r\n                className='validate'\r\n                name='email'\r\n                value={email}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='Email'>Email</label>\r\n            </div>\r\n          </div>\r\n          { loginMode === 'signup' && (\r\n            <>\r\n              <div className='row'>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='Name'\r\n                    required\r\n                    id='personName'\r\n                    type='text'\r\n                    className='validate'\r\n                    name='personName'\r\n                    value={personName}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                  <label htmlFor='personName'>Name</label>\r\n                </div>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='Middle Name'                  \r\n                    id='middleName'\r\n                    type='text'\r\n                    className='validate'\r\n                    name='middleName'\r\n                    value={middleName}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                  <label htmlFor='Email'>Middle Name</label>\r\n                </div>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='Last Name'\r\n                    id='lastName'\r\n                    type='text'\r\n                    className='validate'\r\n                    name='lastName'\r\n                    value={lastName}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                  <label htmlFor='lastName'>Last Name</label>\r\n                </div>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='Telephone'                  \r\n                    id='tel1'\r\n                    type='text'\r\n                    className='validate'\r\n                    name='tel1'\r\n                    value={tel1}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                  <label htmlFor='tel1'>Telephone</label>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className='row'>\r\n            <div className='input-field col s12'>\r\n              <input\r\n                id='password'\r\n                required\r\n                type='password'\r\n                className='validate'\r\n                name='password'\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          {\r\n            loginMode === 'signup' && (\r\n\r\n              <div className='row'>\r\n                <div className='input-field col s12'>\r\n                  <input\r\n                    id='confirmPassword'\r\n                    required\r\n                    type='password'\r\n                    className='validate'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                  <label htmlFor='password'>Confirm Password</label>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n          <div className='row'>\r\n            <div className='col s6 '>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>\r\n            <div className='col s6 right'>\r\n              <button\r\n                type='submit'\r\n                className='btn full waves-effect waves-light green-darken-2  right'\r\n              >\r\n                { loginMode === 'login' ? 'Login' : 'Register' }                \r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div \r\n            className='row center'\r\n          >\r\n            <div className=\"flexrow justify-content-center\">\r\n              \r\n              <p \r\n                className='mr-4'\r\n                style={{\r\n                  lineHeight:'3.2rem',\r\n                  marginBlockStart:'0',                 \r\n                  marginBlockEnd:'0',                 \r\n                }}\r\n              >\r\n                {\r\n                  loginMode === 'login' && 'Don\\'t have an account?'\r\n                }\r\n                {\r\n                  loginMode === 'signup' && 'Already have an account?'\r\n                }                \r\n              </p>\r\n              {\r\n                loginMode === 'login'\r\n                ? (                  \r\n                  <a  \r\n                    href='#'\r\n                    style={{\r\n                      lineHeight:'3.2rem'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('signup');\r\n                    }}\r\n                  >Register</a>\r\n                  )\r\n                : (\r\n                  <a  \r\n                    href='#'\r\n                    style={{\r\n                      lineHeight:'3.2rem'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('login');\r\n                    }}\r\n                  >Login</a>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerLogin;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js",[],["383","384"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails.js",["385","386"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst CustomerDetails =   ({match}) => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const {  updateCustomer, addNewCustomer, loadSingleCustomer } = adminContext1;\r\n  const [ _loading,  _setLoading] = useState(false);\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n    name:\"\",\r\n    middleName:\"\",\r\n    surName:\"\",\r\n    username: \"\",\r\n    email:\"\", \r\n    tel1:\"\",\r\n    tel2:\"\", \r\n    address:\"\",\r\n    balance:\"\"\r\n    });\r\n\r\n    const updateFormFromBackend = (res) => {\r\n      let balance;\r\n      if (res.balance === 0 ) {\r\n        balance = res.balance.toFixed(2)\r\n      } \r\n        setFormData({\r\n          ...formData,\r\n          name: res.name || \"\",\r\n          middleName: res.middleName || \"\",\r\n          surName: res.surName || \"\",\r\n          username: res.username || \"\",\r\n          email: res.email || \"\",\r\n          tel1: res.tel1 || \"\",\r\n          tel2: res.tel2 || \"\",\r\n          // balance: res.balance || \"\",\r\n          balance: balance || \"\"\r\n        });\r\n    }\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    // If Edit\r\n    if(match.params.id) {\r\n      _setLoading(true);\r\n      loadSingleCustomer(match.params.id)\r\n        .then(res => {  \r\n          updateFormFromBackend(res);\r\n          _setLoading(false);\r\n        })\r\n    }\r\n  }, [updateCustomer])\r\n\r\n  const {    \r\n    name,\r\n    middleName,\r\n    surName,\r\n    username,\r\n    email,\r\n    tel1,\r\n    tel2,\r\n    address,\r\n    balance,\r\n  } = formData;\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    // If Update\r\n    if (match.params.id) {\r\n      updateCustomer({ formData, id: match.params.id })\r\n        .then(res => {\r\n          updateFormFromBackend(res);\r\n      });\r\n    } else {\r\n\r\n      // If New Customer\r\n      addNewCustomer({\r\n        formData,\r\n        cb: updateFormFromBackend\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>\r\n          {\r\n            _loading \r\n              ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <div>\r\n                  {match.params.id ? (\r\n                    <h2 className='text-center mt-3 mb-2'>{`${username} Info`}</h2>\r\n                  ) : (\r\n                    <h2 className='text-center mt-3 mb-2'>Add Customer</h2>\r\n                  )}\r\n                  <Grid container spacing={3}>\r\n                    {!match.params.id && (\r\n                      <Grid\r\n                        xs={12}\r\n                      >                  \r\n                        <TextField\r\n                          placeholder='Username'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='username'\r\n                          size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          className='validate'\r\n                          name='username'\r\n                          value={username}\r\n                          onChange={e => onChange(e)}\r\n                          label='User Name'\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter name'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='name'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='name'\r\n                          value={name}\r\n                          onChange={e => onChange(e)}\r\n                          label='Name'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Middlename'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='middleName'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='middleName'\r\n                          value={middleName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Middlename'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Surname'\r\n                          fullWidth={true}\r\n                          id='surName'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='surName'\r\n                          value={surName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Surname'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Email'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          disabled={match.params.id ? true : false}\r\n                          id='email'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='email'\r\n                          value={email}\r\n                          onChange={e => onChange(e)}\r\n                          label='Email'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num1'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='tel1'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel1'\r\n                          value={tel1}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel1'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num2'\r\n                          fullWidth={true}\r\n                          id='tel2'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel2'\r\n                          value={tel2}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel2'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          disabled={true}\r\n                          fullWidth={true}\r\n                          id='balance'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='balance'\r\n                          value={`$${balance}`}\r\n                          label='Balance'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          fullWidth={true}\r\n                          id='address'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='address'\r\n                          value={address}\r\n                          onChange={e => onChange(e)}\r\n                          label='Address'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n            )\r\n          }\r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            size='large'\r\n            disabled={_loading}\r\n            variant='contained'\r\n            color='secondary'\r\n            endIcon= {<SendIcon />}\r\n            type='submit'\r\n          >\r\n            {match.params.id ? 'Update User' : 'Create User'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomerDetails\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js",["387","388"],"import React, {useContext, useEffect, } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport OrdersItem from './OrdersItem'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst OrdersTab = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders()\r\n    // eslint-disable-next-line\r\n    loadPayments()\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n          ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          : (\r\n            <div>\r\n              <h2 className='text-center mt-2 mb-1'>Orders</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>\r\n                        Order Date\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>Username</StyledTableCell>\r\n                      <StyledTableCell align='right'>Price</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                <TableBody>\r\n                  {orders ? (\r\n                    orders.length > 0 &&\r\n                    orders.map(order => (\r\n                      <OrdersItem key={order._id} order={order} />\r\n                    ))\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/orders/add'\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            Add Orders\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default OrdersTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js",["389","390","391","392","393","394","395","396","397"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js",["398","399","400","401","402","403","404","405","406","407"],"import React, { useContext, useEffect  } from \"react\";\r\nimport {  NavLink} from 'react-router-dom'\r\n\r\nimport adminContext from \"../../../context/admin/adminContext\";\r\nimport ServicesTable from \"./ServicesTable\";\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst ServicesTab = () => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const { \r\n    loadServices , \r\n    services,\r\n    loading\r\n   } = adminContext1;\r\n\r\n  // productsTab , serviceTab\r\n  // const [ currentSection, setCurrentSection ] = useState('serviceTab') \r\n\r\n  useEffect(() => {\r\n    loadServices();\r\n  }, []);\r\n\r\n  // const addCustomer = () => {\r\n  //   const btn = (\r\n  //     <button data-target='modalCustomer' className='btn modal-trigger' />\r\n  //   );\r\n  //   console.log(\"clicked add customer\");\r\n  // };\r\n\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Services</h2>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                  <ServicesTable services={services} />\r\n                )\r\n          }\r\n        </div>\r\n        <div className='mb-2 mt-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/services/add'\r\n          >\r\n            Add Service\r\n          </Button>\r\n        </div>\r\n      </div> \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServicesTab;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js",["408"],"import React, {useContext, useEffect, useState, Fragment } from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport ProductCard from './ProductCard'\r\nimport AddProduct from './AddProduct'\r\nimport Spinner from '../../layout/Spinner'\r\n\r\nconst ProductsTab = () => {\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadProductsWithoutImages , products, loading } = adminContext1;\r\n\r\n  const [addStatus, setAddStatus] = useState(false)\r\n\r\n  useEffect(() => { \r\n    if (products.length === 0)\r\n      // This is a try of turn-around to prevent re-render\r\n      // eslint-disable-next-line\r\n      loadProductsWithoutImages();\r\n      // eslint-disable-next-line\r\n  }, [])\r\n\r\n  \r\n  \r\n  if(loading) return <Spinner></Spinner>\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='row mt-1'>\r\n        {/* Buttons Related with Products */}\r\n        <span>\r\n          {/* <a\r\n            className='waves-effect waves-light btn-small mr-1'\r\n            onClick={e => {\r\n              setCurrentSection(\"productsTab\");\r\n            }}\r\n          >\r\n            <i className='material-icons right'>list</i>Products\r\n          </a> */}\r\n          <a\r\n            className={ addStatus === false ? \r\n              ('waves-effect waves-light blue btn-small') : \r\n              ('waves-effect waves-light red btn-small') \r\n            }\r\n            onClick={e => {\r\n              setAddStatus( !addStatus )\r\n            }}\r\n          >\r\n            { addStatus === false ? (\r\n              <Fragment>\r\n                <i className='material-icons right'>add</i>Product\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <i className='material-icons right'>close</i>Product Add\r\n              </Fragment>\r\n            )}\r\n            \r\n          </a>\r\n        </span>\r\n        {/* End of Buttons Related with Products */}\r\n      </div>\r\n      <AddProduct addStatus={addStatus} />\r\n\r\n      <div className='row'>\r\n        {products.length > 0 &&\r\n          products.map(product => (\r\n            <ProductCard key={product._id} productInfo={product} />\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductsTab\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["409","410"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js",["411","412"],"import React, {useContext, useEffect,  useState } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport CategoriesItem from './CategoriesItem'\r\n\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst CategoriesPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadCategories,\r\n    categories,\r\n    loading, \r\n  } = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>              \r\n          <div>\r\n            <h2 className='text-center mt-1 mb-1'>Categories</h2>            \r\n          </div>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Category Image</StyledTableCell>\r\n                        <StyledTableCell>Category Name</StyledTableCell>\r\n                        <StyledTableCell>Actions</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {categories ? (\r\n                        categories.length > 0 &&\r\n                        categories.map(categoryItem => (\r\n                          <CategoriesItem \r\n                            key={categoryItem._id} \r\n                            categoryItem={categoryItem} \r\n                          />\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </TableBody>  \r\n                  </Table>\r\n                </TableContainer>\r\n              )\r\n          } \r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/categories/add'\r\n          >\r\n            Add Category\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CategoriesPage\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import React, { useContext, useState, useEffect, Fragment } from 'react';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport OrderServiceItem from './OrderServiceItem'\r\nimport OrderUserItem from './OrderUserItem'\r\nimport ServiceItemInOrders from './ServiceItemInOrders';\r\nimport Spinner from '../../layout/Spinner'\r\nimport alertContext from '../../../context/alert/alertContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst NewOrder = ({ match, history }) => {\r\n  // If Edit\r\n  const [orderId, setOrderID ] = useState(match.params.orderId || null);\r\n  const _cbSetOrderId = ( id ) => setOrderID(id);\r\n\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const {\r\n    loadQueriedServices,\r\n    loadServiceStatuses,\r\n    serviceStatuses,\r\n    loadQueriedUsers,\r\n    submitNewOrder,\r\n    loadSingleOrder,\r\n    updateOrder,\r\n    loading\r\n  } = adminContext1;\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    setAlert\r\n  } = alertContext1;\r\n  const [orderData, setOrderData] = useState({\r\n    user: '', // userID => will be SENT TO API\r\n    username: '',  // NOT TO SEND TO API (for UI)\r\n    serviceList: [],\r\n    orderStatus: '',\r\n    orderTotalPrice: 0\r\n  })\r\n\r\n  const [sectionSelection, setSectionSelection] = useState('none')\r\n  const [userObject, setUserObject] = useState( {} );\r\n  const [ queriedUsersList, setQueriedUsersList ] = useState( [] );\r\n  const _cbSetQueriedUsersList = ( arr ) => {\r\n    setQueriedUsersList(arr);\r\n  }\r\n  const [serviceSearchText, setServiceSearchText] = useState('');\r\n  const [ queriedServicesList, setQueriedServicesList ] = useState( [] );\r\n  const _cbSetQueriedServicesList = ( arr ) => {\r\n    setQueriedServicesList(arr);\r\n  }\r\n  \r\n\r\n  // If Edit\r\n  const next = res => {\r\n    if (!res) {\r\n      return history.push('/dashboard/orders')\r\n    }\r\n    setOrderData({\r\n      ...orderData,\r\n      _id: res._id,\r\n      // user: {\r\n      //   _id: res.user._id,\r\n      //   username: res.user.username\r\n      // },\r\n      user: res.user._id,\r\n      username: res.user.username,\r\n      serviceList: res.serviceList.map(item => {\r\n        const mapped = {\r\n          service: item.service._id,      // service id OR productId\r\n          productName: item.service.productName,\r\n          serviceType: item.service.serviceType,\r\n          unitPrice: item.unitPrice,\r\n          quantity: item.quantity,\r\n          unitServiceStatus: item.unitServiceStatus,\r\n          unitTotalPrice: item.unitTotalPrice\r\n        }\r\n        return mapped\r\n      }),\r\n      orderTotalPrice: res.orderTotalPrice,\r\n      orderStatus: res.orderStatus\r\n    });\r\n    setUserObject({...res.user})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!orderId) {\r\n      loadServiceStatuses()\r\n    }\r\n    // If not a new order, we are editting order\r\n    if (orderId) {\r\n      loadSingleOrder({ orderId, next })\r\n    }\r\n  }, [])\r\n\r\n  const statusList = serviceStatuses.map(status => ({\r\n    servStatus: status.servStatus,\r\n    description: status.description\r\n  }))\r\n\r\n\r\n  const addToOrder = service => {\r\n    const newList = orderData.serviceList;\r\n    const { \r\n      _id,\r\n      serviceName,\r\n      servicePrice,\r\n    } = service;\r\n    // Create a new Order Element\r\n    const newService = new Object({\r\n      service: _id,\r\n      serviceName,\r\n      quantity: 1,\r\n      unitPrice: servicePrice,\r\n      unitServiceStatus: statusList[0].servStatus\r\n    });\r\n    // Check if that service already in order list\r\n    const indexNum = newList.findIndex(item => item.service === newService.service)\r\n    // update List according to existence\r\n    if (indexNum >= 0) {\r\n      newList[indexNum].quantity += 1;\r\n    } else {\r\n      newList.push(newService);\r\n    }\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    orderMutate();  \r\n  }  // End of AddToOrder\r\n\r\n\r\n  // Iterate List, and Set Order Status and Prices\r\n  const orderMutate = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderTotal = 0;\r\n    let orderStatus = \"Ready\";\r\n    newList.map(item => {\r\n      item.unitTotalPrice = item.unitPrice * item.quantity;\r\n      orderTotal += item.unitTotalPrice;\r\n\r\n      if (item.unitServiceStatus !== \"Ready\") {\r\n        orderStatus = \"In Progress\";\r\n      }\r\n    });\r\n\r\n    setOrderData({\r\n      ...orderData,\r\n      orderTotalPrice: orderTotal,\r\n      serviceList: newList,\r\n      orderStatus\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n  // Calculate unit total Price and Order Total Price\r\n  const calculatePrice = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderTotal = 0;\r\n    newList.map(item => {\r\n      item.unitTotalPrice = item.unitPrice * item.quantity\r\n      orderTotal += item.unitTotalPrice\r\n    })\r\n\r\n    setOrderData({\r\n      ...orderData,\r\n      orderTotalPrice: orderTotal,\r\n      serviceList: newList\r\n    });\r\n\r\n  }\r\n\r\n\r\n  const setOrderStatus = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderStatus = 'Ready';\r\n    newList.map(item => {\r\n      if (item.unitServiceStatus !== 'Ready')\r\n        orderStatus = 'In Progress';\r\n    });\r\n    setOrderData({\r\n      ...orderData,\r\n      orderStatus,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Change Quantity\r\n  const changeQuantity = ({ service, newValue }) => {\r\n    const newList = orderData.serviceList;\r\n    const indexNum = newList.findIndex(item => item.service === service)\r\n    newList[indexNum].quantity = parseInt(newValue)\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    setOrderStatus()\r\n    calculatePrice()\r\n  }  // End of changeQuantity\r\n\r\n\r\n  // Set Service Status\r\n  const setServiceStatus = ({ service, selectValue }) => {\r\n    console.log(selectValue);\r\n    const newList = [...orderData.serviceList];\r\n    const indexNum = newList.findIndex(item => item.service === service);\r\n    newList[indexNum].unitServiceStatus = selectValue;\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    setOrderStatus()\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    if ( !userObject._id ) {\r\n      return setAlert('Please Select Customer', \"error\");   \r\n    }\r\n    if (!orderId) {\r\n      // If New Order\r\n      submitNewOrder({ \r\n        formData: orderData,\r\n        cb: _cbSetOrderId\r\n      });\r\n    } else {\r\n      updateOrder({ formData: orderData, orderId });\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // if (loading) return <Spinner></Spinner>\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"text-center mb-2 mt-2\"> \r\n            <h2>Add Order</h2>\r\n          </div>  \r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              xs={12}\r\n            >                  \r\n              <div className=\"mb-2\">\r\n                <TextField\r\n                  // id='categoryName'\r\n                  // name='categoryName'\r\n                  value={orderData.username}\r\n                  placeholder='Search User'\r\n                  label='User'\r\n                  InputProps={{\r\n                  startAdornment: (\r\n                      <InputAdornment position='start'>\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  // required={true}\r\n                  fullWidth={true}\r\n                  size='medium'\r\n                  type='search'\r\n                  autoComplete={false}\r\n                  onChange= { e => {\r\n                    setOrderData({\r\n                      ...orderData,\r\n                      user: '',\r\n                      username: e.target.value\r\n                    });\r\n                    setUserObject({});\r\n                    loadQueriedUsers( \r\n                      e.target.value,\r\n                      _cbSetQueriedUsersList\r\n                    );                      \r\n                  }}\r\n                />\r\n                {\r\n                  queriedUsersList.length > 0 && (\r\n                    <TableContainer>\r\n                      <Table>                      \r\n                        <TableRow>\r\n                          <TableCell>Username</TableCell>\r\n                          <TableCell>Name</TableCell>\r\n                          <TableCell>Middle</TableCell>\r\n                          <TableCell>Surname</TableCell>\r\n                          <TableCell>Balance</TableCell>\r\n                        </TableRow>\r\n                        {\r\n                          queriedUsersList.map( userItem => (\r\n                              <TableRow\r\n                                key={userItem._id}\r\n                                onClick= { () => {\r\n                                  const tempUser = userItem;\r\n                                  setUserObject({...tempUser});\r\n                                  setOrderData({\r\n                                    ...orderData,\r\n                                    user: tempUser._id,\r\n                                    username: tempUser.username\r\n                                  });\r\n                                  setQueriedUsersList([]);\r\n                                }}\r\n                              >\r\n                                <TableCell>{userItem.username}</TableCell>\r\n                                <TableCell>{userItem.name}</TableCell>\r\n                                <TableCell>{userItem.middleName}</TableCell>\r\n                                <TableCell>{userItem.surName}</TableCell>\r\n                                <TableCell>{userItem.balance.toFixed(2)}</TableCell>\r\n                              </TableRow>\r\n                            )\r\n                          )\r\n                        }\r\n                      </Table>\r\n                    </TableContainer>\r\n                  )\r\n                }\r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell >Service</StyledTableCell>\r\n                      <StyledTableCell>Price</StyledTableCell>\r\n                      <StyledTableCell align='center'>Quantity</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell align='right' style={{ paddingRight: '1rem' }}>Tot. Price</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <tbody id='services-list'>\r\n                    {orderData.serviceList.map(service => (\r\n                      <ServiceItemInOrders\r\n                        key={service.service}\r\n                        service={service}\r\n                        changeQuantity={changeQuantity}\r\n                        statusList={statusList}\r\n                        setServiceStatus={setServiceStatus}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </TableContainer> \r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"mb-2 mt-3\">\r\n                <TextField\r\n                  // id='categoryName'\r\n                  // name='categoryName'\r\n                  value={serviceSearchText}\r\n                  placeholder='Search for Services'\r\n                  label='Search Service'\r\n                  InputProps={{\r\n                  startAdornment: (\r\n                      <InputAdornment position='start'>\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  // required={true}\r\n                  fullWidth={true}\r\n                  size='medium'\r\n                  type='search'\r\n                  autoComplete={false}\r\n                  onChange= { e => {\r\n                    setServiceSearchText( e.target.value );\r\n                    loadQueriedServices(\r\n                      e.target.value,\r\n                      _cbSetQueriedServicesList\r\n                    );\r\n                  }}\r\n                />\r\n                {\r\n                  queriedServicesList.length > 0 && queriedServicesList.map(  serviceItem => (\r\n                      <TableRow \r\n                        key={serviceItem._id}\r\n                        onClick={ () => {\r\n                          console.log('service Item Click -> serviceItem -> ', serviceItem);\r\n                          addToOrder({...serviceItem});\r\n                          setQueriedServicesList([]);\r\n                          setServiceSearchText('');\r\n                        }}\r\n                      >\r\n                        <TableCell>{serviceItem.serviceName}</TableCell>\r\n                        <TableCell>{serviceItem.servicePrice}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  )\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>        \r\n        </div>\r\n        <div>\r\n          {/* ------------------------------------------------ */}\r\n          <div className='row'>\r\n              {/* <span className=\"col s6 m9\"></span> */}\r\n              \r\n            </div>\r\n            <div className='row'>\r\n              {/* <span className=\"col s6 m9\"></span> */}\r\n            </div>\r\n            {/* <div className='row flexrow justify-content-flex-end'>\r\n              <span className='col s5 m3 l2 '>\r\n              <button\r\n              style={{ marginRight: \"2rem\" }}\r\n              id='order-submit-button'\r\n              className='btn waves-effect waves-light align-items-flex-end'\r\n                  type='button'\r\n                  onClick={e => {\r\n                    handleSubmit();\r\n                  }}\r\n                  >\r\n                  Submit\r\n                  <i className='material-icons right'>send</i>\r\n                  </button>\r\n                  </span>\r\n                </div> */}\r\n            <div className='flexrow justify-content-flex-end'>\r\n              <ul>\r\n                <li className='flexrow justify-content-space-between'>\r\n                  <span>Total</span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      marginRight: \"2rem\",\r\n                      marginLeft: \"2rem\"\r\n                    }}\r\n                  >\r\n                    ${orderData.orderTotalPrice.toFixed(2)}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='flexrow justify-content-flex-end'>\r\n              <ul>\r\n                <li className='flexrow justify-content-space-between'>\r\n                  <span>Order Status: </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      marginRight: \"2rem\",\r\n                      marginLeft: \"2rem\"\r\n                    }}\r\n                  >\r\n                    {orderData.orderStatus}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='mb-2'>\r\n              <Button\r\n                onClick={e => {\r\n                  handleSubmit();\r\n                }}\r\n                color='secondary'\r\n                variant='contained'\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          {/* ------------------------------------------------ */}\r\n        </div>\r\n\r\n      </div>\r\n          \r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewOrder\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js",["429","430","431"],"import React, {useContext, useState, Fragment, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst AddService = ({match, history}) => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const {\r\n    loadQueriedCategories,\r\n    addNewService,\r\n    updateService,\r\n    loadSingleService,\r\n    // serviceToBeEditted, \r\n    loading,\r\n    setAdminLoading\r\n  } = adminContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    categoryName: '',\r\n    category: null, // categoryId\r\n    image: null,\r\n    serviceName: '',\r\n    servicePrice: \"\",\r\n    featured: false\r\n  });\r\n\r\n  const [ queriedCategoriesList, setQueriedCategoriesList ] = useState([]);\r\n  const _setQueriedCategories = (arr) => {\r\n    setQueriedCategoriesList(arr);\r\n  }\r\n\r\n  const fileSelectedHandler = e => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n      // I couldnt create image file with .png etc extension so, unless we update image file, we will not send API an image.\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0],\r\n        isImageUpdated: true\r\n      });\r\n    } else { // if not an update but ADD NEW SERVICE\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0]\r\n      });\r\n    }\r\n  };\r\n\r\n  // If Not a New Service, but Editting. Update this form states, by async function at the adminContext loadSingleService method\r\n  const next = res => {\r\n\r\n    if(!res) {\r\n      return history.push('/dashboard/services')\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      categoryName: res.categoryName || \"\",\r\n      category: res.category || null,\r\n      image: res.image || null, // TO BE UPDATED in FUTURE\r\n      serviceName: res.serviceName || \"\",\r\n      servicePrice: res.servicePrice || \"\",\r\n      featured: res.featured || false,\r\n    });\r\n    console.log(formData);\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n    // Do smt\r\n      // loadSingleService({serviceId: match.params.serviceId,}).then(res => {\r\n      // updateFormFromBackend(res);\r\n      loadSingleService({serviceId: match.params.serviceId, next})\r\n\r\n        // console.log(formData);\r\n      } else {\r\n        setAdminLoading(false)\r\n      }\r\n  }, [])\r\n  \r\n\r\n\r\n  // const [ productSearch, setProductSearch ] = useState(false)\r\n  const { \r\n    categoryName,\r\n    category,  // categoryId \r\n    servicePrice, \r\n    serviceName,\r\n    featured \r\n  } = formData\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const submitAddorUpdate = e => {\r\n    setFormData({\r\n      ...formData,\r\n      servicePrice: Number.parseFloat(servicePrice).toFixed(2)\r\n    });\r\n    if(match.params.serviceId) {\r\n      updateService({ formData, serviceId: match.params.serviceId });\r\n    } else {\r\n      addNewService({formData});\r\n    }\r\n  }\r\n\r\n  const handleFeaturedOnChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      featured: !featured\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n        \r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"text-center mt-2 mb-2\">\r\n            <h2> {match.params.serviceId ? 'Update Service' : 'Add Service'}</h2>\r\n          </div>\r\n          {\r\n            loading \r\n            ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              )\r\n            : (\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid\r\n                  xs={12}\r\n                > \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='serviceName'\r\n                      name='serviceName'\r\n                      value={serviceName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Service Name'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={e => onChange(e)}\r\n                    />\r\n                  </div>                 \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='categoryName'\r\n                      name='categoryName'\r\n                      value={categoryName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Search Categories'\r\n                      InputProps={{\r\n                      startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                      // required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={\r\n                        (e) => {  \r\n                          setFormData({\r\n                            ...formData,\r\n                            category: null,  // reset id if we type\r\n                            categoryName: e.target.value,\r\n                          });      \r\n                          if ( e.target.value.length >= 2 ) {\r\n                            loadQueriedCategories(\r\n                              e.target.value,\r\n                              _setQueriedCategories\r\n                            );\r\n                          }  \r\n                        }\r\n                      }\r\n                    />\r\n                    {\r\n                      queriedCategoriesList && queriedCategoriesList.length > 0 && (\r\n                        <TableContainer>\r\n                          <Table>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Category Name</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {\r\n                                queriedCategoriesList.map(categoryItem => (\r\n                                  <TableRow\r\n                                    key={categoryItem._id}\r\n                                    onClick={() => {\r\n                                      console.log('selected category Id -> ', categoryItem._id);\r\n                                      const tempCategory = categoryItem;\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        category: tempCategory._id,\r\n                                        categoryName: tempCategory.name,\r\n                                      });\r\n                                      setQueriedCategoriesList([]);                    \r\n                                    }}\r\n                                  >\r\n                                    <TableCell>{categoryItem.name}</TableCell>\r\n                                  </TableRow>\r\n                                ))\r\n                              }\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      )\r\n                    }\r\n                  </div>                  \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      placeholder='Select Category Image'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      type='file'\r\n                      autoComplete={false}\r\n                      onChange={e => fileSelectedHandler(e)}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >                  \r\n                  <TextField\r\n                    id='servicePrice'\r\n                    name='servicePrice'\r\n                    value={servicePrice}\r\n                    placeholder='Enter Service Price'\r\n                    label='Service Price'\r\n                    required={true}\r\n                    fullWidth={true}\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='ml-2 mt-2'>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={featured}\r\n                          onChange={ e => handleFeaturedOnChange(e)}\r\n                          name=\"featured\"\r\n                          size='medium'\r\n                        />                  \r\n                      }\r\n                      label='Featured'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid> \r\n            )\r\n          }\r\n        </div> \r\n\r\n        <div className='mb-2'>\r\n          <Button\r\n            onClick={e => submitAddorUpdate()}\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            {match.params.serviceId ? 'Update Service' : 'Add Service'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddService;\r\n\r\n\r\n\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js",["432","433","434","435","436","437","438","439"],"import React, {useContext, useState, Fragment, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport PaymentUserItem from './PaymentUserItem'\r\nimport {\r\n  Container,\r\n  TextField,\r\n  InputAdornment,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst AddPayment = ({match, history}) => {\r\n  const activityId = match.params.activityId || null\r\n  const adminContext1 = useContext(adminContext)\r\n  const {\r\n    loadQueriedUsers,\r\n    userQuery,\r\n    clearUserQuery,\r\n    addPayment,\r\n    getSingleUserActivity,\r\n    updatePayment\r\n  } = adminContext1;\r\n\r\n  const initialState = {\r\n    customerId: \"\",\r\n    username: \"\",\r\n    balance: \"\",\r\n    fullName: \"\",\r\n    payment: \"\"\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialState });\r\n  const [selectedUserInfo, setSelectedUserInfo] = useState({});\r\n  const [search, setSearched] = useState(\"\");\r\n\r\n\r\n  // If editting a payment, next callback func\r\n  const next = (res) => {\r\n    // So it can not be loaded\r\n    if(res === null) {\r\n      return history.push('/dashboard/orders')\r\n    }\r\n    const { \r\n      customerId, // _id , username, email, name, middleName, surName, balance\r\n      amount, \r\n      date  \r\n    } = res;\r\n    setSelectedUserInfo({...customerId});\r\n    setFormData({\r\n      _id: activityId,\r\n      customerId: customerId._id,\r\n      username: customerId.username,\r\n      fullName: [customerId.name, customerId.middleName, customerId.surName]\r\n        .join(\" \")\r\n        .trim(),\r\n      payment: ((parseFloat(amount.toString()))*(-1)).toFixed(2)\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // If Editting a Payment\r\n    if(activityId) {\r\n      getSingleUserActivity({activityId, next})\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const selectUser = ({userInfo}) => {\r\n  const { username, _id, name, middleName, surName, balance } = userInfo;\r\n\r\n\r\n    setFormData({\r\n    ...formData,\r\n    customerId: _id,\r\n    username: username,\r\n    fullName : [name, middleName, surName].join(\" \").trim(),\r\n    balance,\r\n    });\r\n    setSelectedUserInfo({...userInfo});\r\n\r\n    // clearUserQuery()\r\n    setQueriedUsersList([]);\r\n    setSearched(\"\");\r\n  }\r\n\r\n  const onChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handlePaymentChange =  () => {\r\n    let payment = parseFloat(formData.payment).toFixed(2)\r\n\r\n    if(payment === 'NaN') payment = ''\r\n\r\n    setFormData({\r\n      ...formData,\r\n      payment\r\n    });\r\n  };\r\n\r\n\r\n  const [ queriedUsersList, setQueriedUsersList ] = useState( [] );\r\n  const _cbSetQueriedUsersList = ( arr ) => {\r\n    setQueriedUsersList(arr);\r\n  }\r\n  const handleSearchChange = e => {\r\n    setFormData({...initialState});\r\n    setSelectedUserInfo({});\r\n    setSearched(e.target.value);\r\n    loadQueriedUsers(\r\n      e.target.value,\r\n      _cbSetQueriedUsersList\r\n    );\r\n  }\r\n\r\n  const submitPayment = (e) => {\r\n    if(!activityId) {\r\n\r\n      addPayment({formData: {\r\n        customerId: formData.customerId,\r\n        payment: parseFloat(payment)\r\n      }})\r\n\r\n    } else { // Edit Existing Payment Option\r\n      // Mutating the formData, as soon as useractivity model has a different structure\r\n      updatePayment({\r\n        formData: {\r\n        _id: formData._id,\r\n        customerId: formData.customerId,\r\n        amount: parseFloat(formData.payment) * (-1)\r\n      }, next: (res) => {\r\n        if(res) {\r\n          history.push('/dashboard/orders')\r\n        }\r\n\r\n      }})\r\n    }\r\n\r\n    setFormData({...initialState})\r\n  }\r\n\r\n  const { username, fullName, balance, payment} = formData\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}      \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-3 mb-1'>\r\n           {activityId ? 'Update Payment for Customers' :  'Add Payment For Customers'}\r\n          </h2>\r\n          {/* Search Bar for Users */}\r\n          <form autoComplete='off'>            \r\n            <TextField\r\n              required={true}\r\n              fullWidth={true}\r\n              placeholder='Search for Customers'\r\n              id='search'\r\n              name='search'\r\n              value={search}\r\n              size='medium'\r\n              type='search'\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position='start'>\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              autoComplete={false}\r\n              onChange={e => handleSearchChange(e)}\r\n              label='Customer'\r\n            />\r\n          </form>\r\n          {/* End of Search Bar for Users */}\r\n          {/* User List from API */}\r\n          {queriedUsersList && queriedUsersList.length > 0 && (\r\n            <Fragment>\r\n              <span className='flexrow justify-content-flex-start'>\r\n                <div className='row mp-0'></div>\r\n              </span>\r\n              <TableContainer>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Username</TableCell>\r\n                      <TableCell>{'Name & Surname'}</TableCell>\r\n                      <TableCell>Balance</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {queriedUsersList &&\r\n                      queriedUsersList.map(userItem => (\r\n                        <PaymentUserItem\r\n                          key={userItem._id}\r\n                          userInfo={userItem}\r\n                          selectUser={selectUser}\r\n                        />\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Fragment>\r\n          )}\r\n          {/* End of User List from API */}\r\n\r\n          {/* User And Balance Info for Selected User */}\r\n          {selectedUserInfo.username && (\r\n            <Fragment>\r\n              <h3 className='text-center mt-4'>User Information</h3>\r\n              <Grid container spacing={3}>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <TextField\r\n                    placeholder='Username'\r\n                    disabled={true}\r\n                    fullWidth={true}\r\n                    id='username'\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    value={selectedUserInfo.username}\r\n                    label='User Name'\r\n                  />\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      placeholder='Enter name'\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.name}\r\n                      onChange={e => onChange(e)}\r\n                      label='Name'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      placeholder='Middlename'\r\n                      fullWidth={true}\r\n                      disabled={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.middleName ? selectedUserInfo.middleName : ''}\r\n                      label='Middlename'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid  xs={12} md={4}>\r\n                  <div className='mx-1 mt-1'>\r\n                    <TextField\r\n                      fullWidth={true}\r\n                      disabled={true}\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.surName ? selectedUserInfo.surName : ''}\r\n                      label='Surname'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='email'\r\n                      autoComplete={false}\r\n                      value={selectedUserInfo.email}\r\n                      label='Email'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      disabled={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      value={ parseFloat(selectedUserInfo.balance.toString()).toFixed(2) }\r\n                      label='Balance'\r\n                    />\r\n                  </div>\r\n                </Grid> \r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <h4 className='text-center w-100 mb-2 mt-2'>Payment Quantity</h4>  \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='mt-1'>\r\n                    <TextField\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      placeholder='Enter Payment Quantity'\r\n                      id='payment'\r\n                      name='payment'\r\n                      value={payment}\r\n                      size='medium'\r\n                      type='search'\r\n                      autoComplete={false}\r\n                      onChange={e => onChange(e)}\r\n                      onBlur={() => handlePaymentChange()}\r\n                      label='Payment'\r\n                      prefix={<SearchIcon />}\r\n                    />\r\n                  </div>\r\n                </Grid> \r\n              </Grid>\r\n            </Fragment>\r\n          )}\r\n          {/* End of User And Balance Info for Selected User */}\r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            onClick={e => submitPayment(e)}\r\n            disabled={!selectedUserInfo.username}\r\n            type='submit'\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            {activityId ? 'Update Payment' : 'Submit Payment'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default AddPayment\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js",["440","441","442"],"import React, {useContext, useEffect, Fragment } from 'react'\r\nimport { Link, NavLink} from 'react-router-dom'\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport CustomersItem from './CustomersItem'\r\nimport Spinner from '../../layout/Spinner'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst CustomersTab = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadCustomers, customers, loading } = adminContext1;\r\n\r\n  useEffect(() => {\r\n    if (customers.length === 0) {\r\n      loadCustomers();\r\n      console.log('HELLO FROM LOAD CUSTOMERS');\r\n    }\r\n  }, [])\r\n  \r\n\r\n  \r\n\r\n  // const addCustomer = () => {\r\n    \r\n  //   const btn = <button data-target=\"modalCustomer\" className=\"btn modal-trigger\" />\r\n  //   console.log('clicked add customer')  \r\n    \r\n     \r\n  // }\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n    \r\n  \r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n          ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          : (\r\n            <div>\r\n\r\n              <div>\r\n                <h1 className='text-center mt-1 mb-1'>Customers</h1>          \r\n              </div>\r\n              {/* <AddCustomerModal /> */}\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                  <TableHead>\r\n\r\n                    <TableRow>\r\n                      <StyledTableCell>\r\n                        Name\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>\r\n                        Username\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align='right'>\r\n                        Balance\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align='center'>\r\n                        Options\r\n                      </StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      {loading ? (\r\n                        <Spinner></Spinner>\r\n                      ) : (customers ? (\r\n                        customers.map(customer => (\r\n                          <CustomersItem key={customer._id} customer={customer} />\r\n                        ))\r\n                      ) : (\r\n                        <Fragment></Fragment>\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/customers/add'\r\n          >\r\n            ADD CUSTOMER\r\n          </Button>\r\n        </div>        \r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomersTab\r\n\r\n\r\n          // {\r\n          //   customers ? (\r\n          //     customers.map(customer => (\r\n          //       <CustomersItem key={customer._id} customer={customer} />\r\n          //     ))\r\n          //   ) : (\r\n          //     <Fragment></Fragment>\r\n          //   );\r\n          // }\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js",["443"],"import React, { useReducer, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport adminContext from \"./adminContext\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport alertContext from \"../alert/alertContext\";\r\nimport authContext from \"../auth/authContext\";\r\n\r\nimport {\r\n  // Customers\r\n  CUSTOMER_ADDED,\r\n  CUSTOMER_UPDATED,\r\n  CUSTOMER_DELETED,\r\n  CUSTOMERS_LOADED,\r\n  ORDERS_LOADED,\r\n  PAYMENTS_LOADED,\r\n  SERVICES_LOADED,\r\n  SERVICE_ADDED,\r\n  SERVICE_UPDATED,\r\n  SINGLE_SERVICE_LOADED,\r\n  CLEAR_QUERIED_SERVICES,\r\n  SERVICE_STATUSES_LOADED,\r\n  ORDER_FORM_SUBMITTED,\r\n  PRODUCTS_INFO_LOADED,\r\n  PRODUCT_ADDED,\r\n  PRODUCT_UPDATED,\r\n  QUERIED_PRODUCTS_LOADED,\r\n  // Categories\r\n  CATEGORIES_LOADED,\r\n  CATEGORY_ADDED,\r\n  CATEGORY_DELETED,\r\n  PRODUCT_DELETED,\r\n  SERVICE_DELETED,\r\n  SINGLE_ORDER_LOADED,\r\n  ORDER_FORM_UPDATED,\r\n  SET_ADMIN_LOADING,\r\n  CLEAR_QUERIED_USERS\r\n} from \"../types\";\r\n\r\nconst AdminState = props => {\r\n  const initialState = {\r\n    customers: [],\r\n    orders: [],\r\n    categories: [],\r\n    categoryQuery: [],\r\n    services: [],\r\n    serviceToBeEditted: null,\r\n    serviceQuery: [],\r\n    serviceStatuses: [],\r\n    userQuery: [],\r\n    products: [],\r\n    productsQuery: [],\r\n    loading: true,\r\n    payments: []\r\n  }; // initialState END-OF\r\n\r\n  const alertContext1 = useContext(alertContext);\r\n  const { setAlert } = alertContext1;\r\n\r\n  const authContext1 = useContext(authContext);\r\n  const { handleAuthError } = authContext1;\r\n\r\n  \r\n\r\n  const [state, dispatch] = useReducer(adminReducer, initialState);\r\n\r\n\r\n //-----------------------LOADING------------------------------\r\n    const setAdminLoading = status => {\r\n      dispatch({\r\n        type: SET_ADMIN_LOADING,\r\n        payload: status\r\n      });\r\n    };\r\n\r\n\r\n  //-----------------------PRODUCTS------------------------------\r\n\r\n  const addProduct = async ({ formData }) => {\r\n    if (!formData.image || !formData.name) {\r\n      return;\r\n    }\r\n    const formData1 = new FormData();\r\n    formData1.append(\"image\", formData.image);\r\n    formData1.append(\"name\", formData.name);\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.post(`/api/admin/products`, formData1, config);\r\n      dispatch({\r\n        type: PRODUCT_ADDED,\r\n        payload: res.data.product\r\n      });\r\n      setAlert(res.data.msg, 'success', 3000)\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Delete Product\r\n  const deleteProduct = async (_id) => {    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.delete(`/api/admin/products/${_id}`,  config);\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: PRODUCT_DELETED,\r\n        payload: res.data.product\r\n      })\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Load Products WITHOUT Images\r\n  const loadProductsWithoutImages = async () => {\r\n    try {\r\n      setAdminLoading(true)\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.get(`/api/admin/products/without-image`,  config);\r\n\r\n      console.log(res.data);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: PRODUCTS_INFO_LOADED,\r\n          payload: res.data\r\n        });\r\n      }\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update Product\r\n  const updateProduct = async ({formData, _id}) => {\r\n\r\n    const formData1 = new FormData()\r\n    formData1.append('image', formData.image)\r\n    formData1.append('name', formData.name)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.put(\r\n        `/api/admin/products/${_id}`,\r\n        formData1,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_UPDATED,\r\n        payload: res.data.product\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const loadQueriedProducts = async searched => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if (searched) {\r\n        const res = await axios.get(\r\n          `/api/admin/products/query?searched=${searched}`,\r\n          config\r\n        );\r\n\r\n        // console.log(res.data);\r\n\r\n        dispatch({\r\n          type: QUERIED_PRODUCTS_LOADED,\r\n          payload: res.data\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: CLEAR_QUERIED_SERVICES\r\n        });\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  //-----------------------CATEGORIES------------------------------\r\n\r\n  \r\n  const addCategory = async ({ formData }) => {\r\n    if (!formData.image || !formData.name) {\r\n      return;\r\n    }\r\n    const formData1 = new FormData();\r\n    formData1.append(\"image\", formData.image);\r\n    formData1.append(\"name\", formData.name);\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const res = await axios.post(\r\n        `/api/admin/categories`, \r\n        formData1, \r\n        config\r\n      );\r\n      dispatch({\r\n        type: CATEGORY_ADDED,\r\n        payload: res.data.category\r\n      });\r\n      setAlert(res.data.msg, 'success', 3000)\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of addCategory\r\n\r\n  // Delete a Category\r\n  const deleteCategory = async (_id, cb) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.delete(`/api/admin/categories/${_id}`, config);\r\n      dispatch({\r\n        type: CATEGORY_DELETED,\r\n        payload: res.data.category\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      if ( cb ){\r\n        cb();\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if ( cb ){\r\n        cb();\r\n      }\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of Delete a Category\r\n\r\n  // Load All Categories\r\n  const loadCategories = async () => {\r\n    try {\r\n      setAdminLoading(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.get(\"/api/admin/categories\", config);\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: CATEGORIES_LOADED,\r\n        payload: res.data\r\n      });\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of loadCategories\r\n\r\n  // Query Categories\r\n  const loadQueriedCategories = async (\r\n    searched,\r\n    cb\r\n  ) => {\r\n    try {    \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if(searched){\r\n        const res = await axios.get(`/api/admin/categories/query?searched=${searched}`, config);\r\n        // console.log(res.data);\r\n        return cb( res.data );  // queried categories list   \r\n      } else {  \r\n        return cb( [] );   \r\n      } \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n      return cb ( [] );\r\n    }\r\n  }  // End of loadQueriedCategories\r\n\r\n\r\n\r\n\r\n  //-----------------------SERVICES------------------------------\r\n\r\n  \r\n  // Add a Service\r\n  const addNewService = async ({ formData }) => {\r\n    if (\r\n      !formData.image \r\n      || !formData.category\r\n      || !formData.serviceName\r\n    ) {\r\n      return;\r\n    }    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const formData1 = new FormData();\r\n      formData1.append(\"image\", formData.image);\r\n      formData1.append(\"serviceName\", formData.serviceName);\r\n      formData1.append(\"servicePrice\", formData.servicePrice);\r\n      formData1.append(\"category\", formData.category);\r\n      formData1.append(\"featured\", formData.featured);\r\n\r\n      const res = await axios.post(`/api/admin/services`, formData1, config);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: SERVICE_ADDED,\r\n          payload: res.data.service\r\n        });\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update a Service\r\n  const updateService = async ({ formData, serviceId }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      };\r\n      const config2 = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const formData1 = new FormData();\r\n      if ( formData.isImageUpdated ) {\r\n        formData1.append(\"image\", formData.image);\r\n        formData1.append(\"isImageUpdated\", formData.isImageUpdated);\r\n        formData1.append(\"serviceName\", formData.serviceName);\r\n        formData1.append(\"servicePrice\", formData.servicePrice);\r\n        formData1.append(\"category\", formData.category);\r\n        formData1.append(\"featured\", formData.featured);\r\n      }\r\n      let res; \r\n      if ( formData.isImageUpdated ) {\r\n        res = await axios.put(`/api/admin/services/image-updated/${serviceId}`, formData1, config);\r\n      } else {\r\n        let formData2 = {...formData};\r\n        formData2.image = undefined;\r\n        res = await axios.put(`/api/admin/services/no-image-update/${serviceId}`, formData2, config2);\r\n      }      \r\n      dispatch({\r\n        type: SERVICE_UPDATED,\r\n        payload: res.data.service\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };  // End of Update a Service\r\n  \r\n  \r\n\r\n  // Delete a Service\r\n  const deleteService = async (\r\n    _id,\r\n    cb  // callback\r\n  ) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.delete(`/api/admin/services/${_id}`, config);\r\n      if(cb) { cb(); }\r\n      dispatch({\r\n        type: SERVICE_DELETED,\r\n        payload: res.data.service\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n      if(cb) { cb(); }\r\n    }\r\n  };\r\n\r\n  // Load All Services\r\n  const loadServices = async () => {\r\n    try {\r\n    setAdminLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/services\", config);\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: SERVICES_LOADED,\r\n        payload: res.data\r\n      });\r\n      setAdminLoading(false);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Load Service Statuses \r\n  const loadServiceStatuses = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.get(`/api/admin/service-status`, config);\r\n\r\n      if (res.data) {\r\n        dispatch({\r\n          type: SERVICE_STATUSES_LOADED,\r\n          payload: res.data\r\n        });\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Load Single Service, this method will be synchronised to component Admin/Services/AddService.js by passing a parameter next method, so be careful when you decide to edit\r\n  const loadSingleService = async ({serviceId, next}) => {\r\n    setAdminLoading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };     \r\n      const res = await axios.get(`/api/admin/services/info/${serviceId}`, config);\r\n\r\n      next(res.data) // This is a method passing from component Admin/Services/AddService.js\r\n\r\n      dispatch({\r\n        type: SINGLE_SERVICE_LOADED,\r\n        payload: res.data\r\n      });\r\n      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      next(null)\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false)\r\n  }\r\n\r\n  \r\n\r\n  // Query Services\r\n  const loadQueriedServices = async (\r\n    searched,\r\n    cb  // callBack Function\r\n  ) => {\r\n    try {    \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if(searched){\r\n        const res = await axios.get(`/api/admin/services/query?searched=${searched}`, config);\r\n        // console.log(res.data);\r\n        // dispatch({\r\n        //   type: QUERIED_SERVICES_LOADED,\r\n        //   payload: res.data\r\n        // });\r\n        cb(res.data);\r\n      } else {\r\n        // dispatch({\r\n        //   type: CLEAR_QUERIED_SERVICES        \r\n        // }); \r\n        cb( [] );    \r\n      } \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of loadQueriedServices\r\n\r\n\r\n\r\n\r\n  \r\n  //-----------------------ORDERS---------------------------------\r\n \r\n  // Submit New Order\r\n  const submitNewOrder = async ({ \r\n    formData,\r\n    cb\r\n  }) => {\r\n    // console.log(formData);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.post(`/api/admin/orders`, formData, config);\r\n      if ( cb ) {\r\n        cb( res.data.order._id );\r\n      }\r\n      dispatch({\r\n        type: ORDER_FORM_SUBMITTED,\r\n        payload: res.data.order\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update  Order\r\n  const updateOrder = async ({ formData, orderId }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.put(`/api/admin/orders/${orderId}`, formData, config);\r\n\r\n      dispatch({\r\n        type: ORDER_FORM_UPDATED,\r\n        payload: res.data\r\n      });\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Load Single Order\r\n  const loadSingleOrder = async ({orderId, next}) => {\r\n    setAdminLoading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };       \r\n      await loadServiceStatuses();\r\n      const res = await axios.get(`/api/admin/orders/${orderId}`, config);\r\n      next(res.data);\r\n      dispatch({\r\n        type: SINGLE_ORDER_LOADED,\r\n        payload: res.data\r\n      });\r\n      // return res.data\r\n\r\n    } catch (err) {\r\n      console.log('LOAD SINGLE ORDER ERROR')\r\n      \r\n      next(null)\r\n\r\n      console.log(err.request.status === 401);\r\n      if (err.request.status === 401) handleAuthError();\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false)\r\n  }\r\n\r\n  // Load Orders\r\n  const loadOrders = async () => {\r\n    try {\r\n    setAdminLoading(true)\r\n    \r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/orders\", config);\r\n\r\n      console.log('HELLO FROM LOAD ORDERS');\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: ORDERS_LOADED,\r\n        payload: res.data\r\n      });\r\n\r\n      setAdminLoading(false);\r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  //-----------------------USER ACTIVITIES------------------------------ \r\n  const loadPayments = async () => {\r\n    setAdminLoading(true)\r\n    try{ \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.get(\"/api/admin/useractivities/payments\", config);\r\n\r\n      console.log('HELLO FROM LOAD PAYMENTS');\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: PAYMENTS_LOADED,\r\n        payload: res.data\r\n      });      \r\n\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false);\r\n  }\r\n\r\n  const getSingleUserActivity= async ({activityId, next}) => {\r\n    setAdminLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.get(\r\n        `/api/admin/useractivities/payments/${activityId}`,\r\n        config\r\n      );\r\n\r\n      next(res.data);\r\n\r\n      // return res.data\r\n    } catch (err) {\r\n      console.log(\"LOAD SINGLE ORDER ERROR\");\r\n\r\n      next(null);\r\n\r\n      console.log(err.request.status === 401);\r\n      if (err.request.status === 401) handleAuthError();\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n    setAdminLoading(false);\r\n  }\r\n\r\n\r\n  // Update Payment\r\n  const updatePayment = async ({formData, next}) => {\r\n    console.log(formData);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      \r\n      const res = await axios.put(\r\n        `/api/admin/useractivities/payments/${formData._id}`, formData,\r\n        config\r\n      );\r\n      \r\n      next(res.data)\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n           \r\n\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n\r\n      next(null)\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n  //-----------------------CUSTOMERS------------------------------\r\n\r\n  // Add a Customer\r\n  const addNewCustomer = async ({ \r\n    formData,\r\n    cb  // callBack \r\n  }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.post(\r\n        `/api/admin/customers/add`,\r\n        formData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CUSTOMER_ADDED,\r\n        payload: res.data.customer\r\n      });\r\n      if ( cb ) {\r\n        cb(res.data.customer);\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update Customer\r\n  const updateCustomer = async ({formData, id}) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.put(`/api/admin/customers/info/${id}`, formData, config);      \r\n      dispatch({\r\n        type: CUSTOMER_UPDATED,\r\n        payload: res.data.customer\r\n      });\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data      \r\n\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Delete Customer\r\n  const deleteCustomer = async ({\r\n    id, \r\n    cb  // callBack\r\n  }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };      \r\n      const res = await axios.delete(`/api/admin/customers/info/${id}`,  config);      \r\n      dispatch({\r\n        type: CUSTOMER_DELETED,\r\n        payload: res.data.customer\r\n      });\r\n      if ( !cb ) {\r\n        cb(res.data.customer);\r\n      }\r\n      setAlert(res.data.msg, \"success\", 3000);\r\n      return res.data\r\n    } catch (err ) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }  // End of Delete Customer\r\n\r\n\r\n\r\n  // Load Customers\r\n  const loadCustomers = async () => {\r\n    try {\r\n\r\n    setAdminLoading(true)\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };      \r\n      const res = await axios.get(\"/api/admin/customers\", config);\r\n\r\n      // console.log(res.data);\r\n\r\n      dispatch({\r\n        type: CUSTOMERS_LOADED,\r\n        payload: res.data\r\n      });\r\n    setAdminLoading(false);\r\n    } catch (err) {\r\n      \r\n    }\r\n  }  \r\n\r\n  // Load Queried Users\r\n  const loadQueriedUsers = async (\r\n    searched,\r\n    cb  // callBack\r\n  ) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      if (searched) {\r\n        const res = await axios.get(\r\n          `/api/admin/customers/query?searched=${searched}`,\r\n          config\r\n        );\r\n        cb(res.data);\r\n      } else {\r\n        cb( [] );\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearUserQuery = () => {\r\n    dispatch({\r\n      type: CLEAR_QUERIED_USERS\r\n    });\r\n  }\r\n\r\n  const addPayment = async ({formData}) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      \r\n      const { customerId, payment} = formData\r\n\r\n      const res = await axios.post(\r\n        `/api/admin/customers/payment/${customerId}`, formData,\r\n        config\r\n      );\r\n\r\n      setAlert(res.data.msg, \"success\", 3000);      \r\n      \r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach(error => setAlert(error.msg, \"error\", 2500));\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  // Load Single Customer\r\n  const loadSingleCustomer = async (id) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }; \r\n      const res = await axios.get(`/api/admin/customers/info/${id}`, config);\r\n\r\n      // console.log(res.data);\r\n\r\n      if (res.data) return res.data;\r\n    } catch (err) {\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <adminContext.Provider\r\n      value={{ \r\n        // General Purpose\r\n        setAdminLoading,       \r\n        // Customers\r\n        loadCustomers,\r\n        addNewCustomer,\r\n        updateCustomer,\r\n        deleteCustomer,\r\n        loadQueriedUsers,\r\n        clearUserQuery,\r\n        loadSingleCustomer,\r\n        addPayment,\r\n        // User Activities\r\n        loadPayments,\r\n        getSingleUserActivity,\r\n        updatePayment,\r\n        // Orders\r\n        loadOrders,\r\n        loadSingleOrder,\r\n        submitNewOrder,\r\n        updateOrder,\r\n        // Categories\r\n        addCategory,\r\n        deleteCategory,\r\n        loadCategories,\r\n        loadQueriedCategories,\r\n        // Services\r\n        loadServices,\r\n        addNewService,\r\n        loadSingleService,\r\n        updateService,\r\n        deleteService,\r\n        loadQueriedServices,\r\n        loadServiceStatuses,\r\n        // Products\r\n        loadProductsWithoutImages,\r\n        updateProduct,\r\n        addProduct,\r\n        deleteProduct,\r\n        loadQueriedProducts,\r\n        // State variables\r\n        customers: state.customers,\r\n        orders: state.orders,\r\n        categories: state.categories,\r\n        services: state.services,\r\n        serviceToBeEditted: state.serviceToBeEditted,\r\n        serviceQuery: state.serviceQuery,\r\n        serviceStatuses: state.serviceStatuses,\r\n        userQuery: state.userQuery,\r\n        products: state.products,\r\n        productsQuery: state.productsQuery,\r\n        orderToBeEditted: state.orderToBeEditted,\r\n        loading: state.loading,\r\n        payments: state.payments\r\n      }}\r\n    >\r\n      {props.children}\r\n    </adminContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AdminState;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js",["444","445"],"import React, {useEffect, useContext } from 'react';\r\nimport OrdersItem from './OrdersItem';\r\nimport userContext from '../../../context/user/userContext';\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst UserMain = () => {\r\n  const userContext1 = useContext(userContext)\r\n  const { loadOrders, orders, loading } = userContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (    \r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      {\r\n        loading \r\n          ? (\r\n            <div \r\n              className='flexrow justify-content-center'\r\n              style={{\r\n                minHeight: 180,\r\n                paddingTop: 120\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          ) \r\n          : (\r\n            <div>\r\n              <div>\r\n                <h2 \r\n                  className=\"pt-2  pb-2 text-center\" \r\n                >\r\n                  Orders\r\n                </h2>\r\n              </div>\r\n              <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>Order Date</StyledTableCell>\r\n                      <StyledTableCell align='right'>Order Total</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {\r\n                    orders \r\n                      ? (\r\n                        orders.length > 0 &&\r\n                        orders.map(order => (\r\n                          <OrdersItem key={order._id} order={order} />\r\n                        ))\r\n                      ) \r\n                      : (\r\n                          <></>\r\n                      )\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n      }\r\n    </Container>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default  UserMain\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js",["446","447","448"],"import React, {Fragment, useContext, useState,  useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userContext from '../../../context/user/userContext'\r\nimport ServiceFormInOrderForm from './ServiceRowInOrderForm'\r\nimport Moment from 'react-moment'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst SingleOrder = ({match, history}) => {  \r\n  const userContext1 = useContext(userContext)\r\n  const { loadSingleOrder,  loading } = userContext1\r\n\r\n  const [formData, setFormData] = useState( {\r\n    _id: '',\r\n    user: '',\r\n    serviceList: [],\r\n    orderStatus: '',\r\n    orderTotalPrice: '',\r\n    date: ''\r\n  })\r\n\r\n  const next = (singleOrder) => { \r\n    if (!singleOrder) return  history.push(\"/user-main\")\r\n    setFormData({\r\n      _id : singleOrder._id,\r\n      user : singleOrder.user,\r\n      serviceList : singleOrder.serviceList,\r\n      orderStatus : singleOrder.orderStatus,\r\n      orderTotalPrice : singleOrder.orderTotalPrice,\r\n      date : singleOrder.date\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    loadSingleOrder({ _id: match.params._id, next })\r\n  }, [])\r\n  \r\n\r\n  const { _id, user, serviceList, orderStatus, orderTotalPrice, date } = formData;\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div className=\"pt-1\"></div>\r\n      <Button\r\n        component={NavLink}\r\n        to=\"/user-main\"\r\n        startIcon={<ArrowBackIosIcon/>}\r\n        color='primary'\r\n        variant='contained'\r\n      >Orders</Button>\r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'calc( 90vh - 36px )'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n            ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )            \r\n            : (\r\n              <div>\r\n                <div className=\"mt-2 mb-2\">\r\n                  <h2 className=\"text-center\">Order Information</h2>\r\n                </div>\r\n                <Grid xs={12}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between ml-2'>\r\n                      <span >\r\n                        Order Date:\r\n                        <Moment className='ml-2' format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n                      </span>\r\n                      <span className='mr-3'>Order Status: {orderStatus}</span>\r\n                    </div>\r\n                  </Box>\r\n                </Grid>\r\n                <div className=\"mt-2\"></div>\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell className='service-column pl-2'>Service</StyledTableCell>\r\n                        <StyledTableCell align='right'>Price</StyledTableCell>\r\n                        <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                        <StyledTableCell align='center'>Status</StyledTableCell>\r\n                        <StyledTableCell  align='right'>Tot. Price</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {serviceList.map(service => (\r\n                        <ServiceFormInOrderForm\r\n                          key={service.service._id}\r\n                          service={service}\r\n                        />\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            ) \r\n            \r\n        }\r\n        { ( loading || orderTotalPrice === '') ? (<Fragment></Fragment>) : (\r\n          <div className='flexrow justify-content-flex-end text-bold mb-2'>\r\n            Sub Total: {parseFloat(orderTotalPrice).toFixed(2)}\r\n          </div>\r\n        )}\r\n      </div>      \r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default SingleOrder\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js",["449","450","451","452","453","454","455","456","457","458"],"import React, {useEffect} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst OrdersItem = ({ order }) => {\r\n\r\n  useEffect(() => {\r\n\r\n  }, [order])\r\n\r\n  const {\r\n    _id,\r\n    user,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>{user.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell  align='right' size='small'>{orderTotalPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell  align='center' size='small'>\r\n        <span className='badge red center-align'>{orderStatus}</span>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js",["459","460","461","462"],"import React, {Fragment, useContext} from 'react'\r\nimport ServiceItemsInRows from './ServiceItemsInRows'\r\nimport admincontext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServicesTable = ({services }) => {\r\n  \r\n  const adminContext1 = useContext(admincontext)\r\n  const { deleteService} = adminContext1;\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Service Name</StyledTableCell>\r\n              <StyledTableCell>Image</StyledTableCell>\r\n              <StyledTableCell>Category</StyledTableCell>\r\n              <StyledTableCell align='right'>Price</StyledTableCell>\r\n              <StyledTableCell align='center'>Featured</StyledTableCell>\r\n              <StyledTableCell align='center'>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n              {services ? (\r\n                services.map(service => (\r\n                  <ServiceItemsInRows \r\n                    key={service._id} \r\n                    serviceInfo={service} \r\n                    deleteService={deleteService}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Fragment></Fragment>\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Fragment>\r\n      )\r\n  \r\n}\r\n\r\nexport  default ServicesTable\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js",["463","464"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport M from \"materialize-css\";\r\n\r\nconst ProductCard = ({productInfo}) => {\r\n  const { _id, name } = productInfo\r\n\r\n  const adminContext1 = useContext(adminContext);\r\n  const { updateProduct, deleteProduct } =  adminContext1 ;\r\n\r\n  \r\n\r\n  const [formData, setFormData] = useState({\r\n    image: null,\r\n    name: null\r\n  });\r\n\r\n  useEffect(() => {\r\n// eslint-disable-next-line\r\n    setFormData({...formData, name: productInfo.name })\r\n    // eslint-disable-next-line\r\n    M.AutoInit()\r\n    // eslint-disable-next-line\r\n  }, [productInfo])\r\n\r\n\r\n\r\n  \r\n\r\n  const fileSelectedHandler = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      image: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  const updateProductHandler = (e) => {\r\n    e.preventDefault()\r\n    updateProduct({formData, _id})\r\n  }\r\n\r\n  const handleNameChange = e => {\r\n    if (e.target.name === `${_id}name`) {\r\n      setFormData({\r\n        ...formData,\r\n        name: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='col s12 m6 l3'>\r\n      <div className='card sticky-action'>\r\n        <div className='card-image waves-effect waves-block waves-light'>\r\n          <img className='activator' src={`/api/public/products/${_id}`} />\r\n        </div>\r\n        <div className='card-action'>\r\n          <span className='ml-1 mr-1'>{name}</span>\r\n          <span className='card-title activator grey-text text-darken-4'>\r\n            <a class='btn-small waves-effect waves-light right blue'>\r\n              <i class='material-icons small'>edit</i>\r\n            </a>\r\n            {/* <i className='material-icons right'>edit</i> */}\r\n          </span>\r\n          <a\r\n            className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n            href={`#pd-${_id}`}\r\n            // onClick={e => deleteProduct(_id)}\r\n          >\r\n            <i className='material-icons small'>delete</i>\r\n          </a>\r\n          {/* MODAL BEGIN */}\r\n          <div id={`pd-${_id}`} className='modal'>\r\n            <div className='modal-content'>\r\n              <h4>Delete Confirmation</h4>\r\n              <p>Are you sure you want to delete Product?</p>\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <span\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <a\r\n                  href='#!'\r\n                  className='modal-close waves-effect waves-green red btn-small mr-2'\r\n                  style={{ marginRight: \"1rem\" }}\r\n                >\r\n                  Cancel <i className='material-icons small  right'>close</i>\r\n                </a>\r\n                <a\r\n                  href='#!'\r\n                  onClick={e => deleteProduct(_id)}\r\n                  className='modal-close waves-effect waves-green btn-small ml-2'\r\n                >\r\n                  Agree <i className='material-icons small  right'>send</i>\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* MODAL END */}\r\n          {/* <a href='#'>This is a link</a> */}\r\n        </div>\r\n        <div className='card-reveal'>\r\n          <span className='card-title grey-text text-darken-4'>\r\n            <i className='material-icons right'>close</i>\r\n          </span>\r\n          <form onSubmit={e => updateProductHandler(e)}>\r\n            {/* NAME */}\r\n            <div className='row mp-0'>\r\n              <div className='input-field col s6'>\r\n                <input\r\n                  name={`${_id}name`}\r\n                  value={formData.name}\r\n                  id={`${_id}name`}\r\n                  type='text'\r\n                  onChange={e => handleNameChange(e)}\r\n                  className='validate'\r\n                />\r\n                <label className='active' for={`${_id}name`}>\r\n                  Name\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {/* IMAGE */}\r\n            <div className='file-field input-field'>\r\n              <div className='btn'>\r\n                <span>File</span>\r\n                {/* <span>\r\n                  FILE<i class='ns right'>file_upload</i>\r\n                </span> */}\r\n                <input type='file' onChange={e => fileSelectedHandler(e)} />\r\n              </div>\r\n              <div className='file-path-wrapper'>\r\n                <input\r\n                  className='file-path validate'\r\n                  type='text'\r\n                  // onChange={e => fileSelectedHandler()}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className='btn waves-effect waves-light' type='submit'>\r\n              Submit\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, {useEffect, useState, useContext} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport Spinner from '../../layout/Spinner';\r\n// import { StyledTableCell, StyledTableRow } from \"../../layout/CustomTable\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nconst CategoriesItem = ({ categoryItem }) => {\r\n\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const {\r\n    _id,\r\n    image,\r\n    name,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = categoryItem;\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadOrders, \r\n    loadCategories,\r\n    deleteCategory,\r\n    categories,\r\n    orders, \r\n    loading, \r\n    loadPayments, \r\n    payments\r\n  } = adminContext1\r\n\r\n  const _finishDelete = () => {\r\n    setIsDeleting(false);\r\n  }\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow\r\n      key={_id}\r\n    >      \r\n      <StyledTableCell>\r\n        {/* <img src={uint8ArrayToImageSource(image.data)} width='80' /> */}\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={name}\r\n          variant='circular'\r\n          className={classes.large}\r\n          // width='80' \r\n        />\r\n      </StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell >{name}</StyledTableCell>      \r\n      <StyledTableCell>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              // <Spinner></Spinner>\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {/* <Link\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                  className='waves-effect waves-light btn-small grey darken-1 '\r\n                >\r\n                  <i className='material-icons small'>edit</i>\r\n                </Link> */}\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red  mr-1'\r\n                  // href={`#cd-${_id}`}          \r\n                >\r\n                  {/* <i className='material-icons small'>delete</i> */}\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }\r\n        {/* MODAL BEGIN */}\r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`cd-${_id}-title`}\r\n          aria-describedby={`cd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`cd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`cd-${_id}-description`}>\r\n              Are you sure you want to delete Category?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={_handleClickCloseDeleteModal} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteCategory(\r\n                  _id, _finishDelete\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default CategoriesItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js",["484","485"],"import React from 'react'\r\n\r\nconst newServiceItem = ({service, addToOrder}) => {\r\n  const { _id, serviceName,  servicePrice } = service;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{serviceName}</td>\r\n      <td className='right-align'>{`$${servicePrice.toFixed(2)}`}</td>\r\n      <td className='center-align'>\r\n        <a\r\n          onClick={e => addToOrder(service)}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>add</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newServiceItem\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js",["486","487"],"import React from \"react\";\r\n\r\n\r\nconst newUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n  // console.log(object);\r\n\r\n\r\n  return (\r\n    <tr>\r\n      <td>{`${username}`}</td>\r\n      <td>{fullName}</td>\r\n      <td>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>check</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceItemInOrders = ({\r\n  service,  // It is an Object\r\n  changeQuantity,  \r\n  statusList,\r\n  setServiceStatus\r\n}) => {\r\n  \r\n  const {\r\n    serviceName,\r\n    quantity,\r\n    // servicePrice, // after transform unitPrice exists, servicePrice DOESN'T Exist\r\n    unitPrice,\r\n    // eslint-disable-next-line\r\n    unitServiceStatus,\r\n    // eslint-disable-next-line\r\n    unitTotalPrice\r\n  } = service;\r\n  const serviceId = service.service;\r\n\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles( (theme) => ({\r\n    textField: {\r\n      textAlign:'center',\r\n      display:'inline-block'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>{unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        <div \r\n          className='inside-div-input-text-center' \r\n          style={{width: 80, display:'inline-block'}}\r\n        >\r\n          <TextField\r\n            className={classes.textField}\r\n            fullWidth={true}\r\n            value={quantity}\r\n            autoComplete={false}\r\n            onChange={e =>\r\n              changeQuantity({ service: serviceId, newValue: e.target.value })\r\n            }\r\n          />\r\n        </div>\r\n      </StyledTableCell>\r\n\r\n      {/* <td>{\"In Progress\"}</td> */}\r\n      <StyledTableCell align='center'>\r\n        {/* <div className='browser-default ml-2'> */}\r\n          <Select\r\n            value={unitServiceStatus}\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <MenuItem\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                  // selected ={ status1 === status.servStatus && true}\r\n                >\r\n                  {/* BADGES and COLORS are maybe in future, because badge and colors for select are tricky */}\r\n                  {status.servStatus}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {/* <select\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <option\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                >\r\n                  \r\n                  {status.servStatus}\r\n                </option>\r\n              );\r\n            })}\r\n          </select> */}\r\n        {/* </div> */}\r\n      </StyledTableCell>\r\n\r\n      <StyledTableCell  align='right' style={{fontWeight:'bold'}}>{unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\n\r\n  // serviceList[\r\n  //   {\r\n  //     service: \"5df55f1fcac13bc2d8220c01\",\r\n  //     productName: \"Pants\",\r\n  //     quantity: 10,\r\n  //     unitPrice: 10,\r\n  //     unitServiceStatus: \"In Progress\",\r\n  //     serviceType: \"Iron\",\r\n  //     servicePrice: 14.05\r\n  //   }\r\n  // ]; \r\n\r\nexport  default ServiceItemInOrders\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js",["503","504","505"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport publicContext from \"../../../../context/public/publicContext\";\r\nimport SingleCategoryTab from \"./SingleCategoryTab\";\r\nimport CategoriesRow from './CategoriesRow';\r\nconst Services = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    publicServices,\r\n    publicCategories\r\n  } = publicContext1\r\n\r\n  const [publicServicesList, setPublicServicesList] = useState([]);\r\n  const [servicesChoice, setServicesChoice] = useState(publicCategories[0].name);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    setPublicServicesList(publicServices);\r\n    // eslint-disable-next-line\r\n  }, [publicServicesList]);\r\n\r\n  const handleFeaturedClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('featured')    \r\n  }\r\n  const handleDryCleanClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Dry Clean')    \r\n  }\r\n  const handleIronClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Iron')    \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pt-4\"></div>\r\n      <div className='text-center  mb-2'>\r\n        <h2>Categories</h2>\r\n      </div>\r\n\r\n        \r\n      <CategoriesRow \r\n        publicCategories={publicCategories}  \r\n        onClick={setServicesChoice}\r\n        selectedCategoryName= {servicesChoice}\r\n      />\r\n      <div style={{height:'1rem'}}></div>\r\n      <div style={{ margin: \"auto\" }} >\r\n        { <SingleCategoryTab\r\n            serviceList={publicServices.filter(\r\n              serviceItem => serviceItem.categoryName === servicesChoice\r\n            )}\r\n          /> \r\n        }\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Services\r\n\r\n\r\n\r\n// 2019.31.12 00.49 BACK UP\r\n// import React, { useContext, useEffect, useState, Fragment } from \"react\";\r\n// import ServicesItem from './ServicesItem'\r\n// import publicContext from \"../../../../context/public/publicContext\";\r\n\r\n// const Services = () => {\r\n//   const publicContext1 = useContext(publicContext)\r\n//   const {\r\n//     publicServices\r\n//   } = publicContext1\r\n\r\n//   const [publicServicesList, setPublicServicesList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     setPublicServicesList(publicServices);\r\n\r\n\r\n//     console.log(publicServicesList);\r\n//   }, [publicServicesList]);\r\n\r\n\r\n//   return (\r\n//     <div className='center'>\r\n//       <h1>Featured</h1>\r\n//       Featured Services List: {publicServicesList.length}\r\n//       <div className='row'>\r\n\r\n\r\n//         {publicServicesList.map(service => (\r\n//           <ServicesItem\r\n//             key={service._id}\r\n//             service={service}\r\n//           />\r\n//         ))}\r\n\r\n\r\n//       </div>\r\n//       {/* <ServicesItem />\r\n//       <ServicesItem />\r\n//       <ServicesItem /> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Services\r\n\r\n\r\n\r\n\r\n  ","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js",["506","507","508","509","510","511","512","513","514","515","516","517"],"import React from 'react';\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceRowInOrderForm = ({service}) => {\r\n  const { quantity, unitPrice, unitServiceStatus, unitTotalPrice } = service;\r\n  const {\r\n    serviceName, \r\n    category // categoryId\r\n  } = service.service;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>{serviceName}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>{quantity}</StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>{unitServiceStatus}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  )\r\n}\r\nexport default ServiceRowInOrderForm;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js",["518","519","520","521","522","523","524","525","526"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst OrdersItem = ({ order }) => {\r\n  useEffect(() => {}, [order]);\r\n\r\n  const {\r\n    _id,\r\n    // eslint-disable-next-line\r\n    user,\r\n    date,\r\n    // eslint-disable-next-line\r\n    serviceList,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  let calculatedTotalPrice = 0;\r\n  if( !orderTotalPrice ) {\r\n    for( let i = 0; i < serviceList.length; i++ ) {\r\n      calculatedTotalPrice += serviceList[i].unitTotalPrice;  \r\n    }\r\n  }\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>\r\n        {\r\n          orderTotalPrice \r\n            ? orderTotalPrice.toFixed(2)\r\n            : calculatedTotalPrice.toFixed(2)\r\n        }\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>\r\n        <span className='badge red'>{orderStatus}</span>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/user-main/orders/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js",["527"],"import {\r\n  USER_ORDER_FORM_SUBMITTED,\r\n  SET_USER_LOADING,\r\n  USER_ORDERS_LOADED\r\n\r\n} from \"../types\";\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case USER_ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case USER_ORDER_FORM_SUBMITTED:\r\n      return {\r\n        ...state,\r\n        orders: [ ...state.orders, payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js",["528"],"import {\r\n  // Customers\r\n  CUSTOMERS_LOADED,\r\n  CUSTOMER_DELETED,\r\n  PAYMENTS_LOADED,\r\n  SERVICES_LOADED,\r\n  SINGLE_SERVICE_LOADED,\r\n  SERVICE_STATUSES_LOADED,  \r\n  // Categories\r\n  CATEGORIES_LOADED,\r\n  CATEGORY_ADDED,\r\n  CATEGORY_DELETED,\r\n  // Products\r\n  PRODUCTS_INFO_LOADED,\r\n  PRODUCT_ADDED,\r\n  PRODUCT_UPDATED,\r\n  QUERIED_PRODUCTS_LOADED,\r\n  // Services\r\n  SERVICE_ADDED,\r\n  SERVICE_UPDATED,\r\n  PRODUCT_DELETED,\r\n  SERVICE_DELETED,\r\n  CLEAR_QUERIED_SERVICES,\r\n  // Orders\r\n  ORDERS_LOADED,\r\n  // Users\r\n  CLEAR_QUERIED_USERS,\r\n  SET_ADMIN_LOADING,\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ADMIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case PRODUCT_ADDED:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, payload]\r\n      };\r\n    case PRODUCT_DELETED:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.name !== payload.name\r\n        )\r\n      };\r\n    case PRODUCT_UPDATED:\r\n      return {\r\n        ...state,\r\n        products: state.products.map(product =>\r\n          product._id === payload._id ? payload : product\r\n        )\r\n      };\r\n    case CATEGORIES_LOADED:\r\n      return {\r\n        ...state,\r\n        categories: payload\r\n      };\r\n    case CATEGORY_ADDED:\r\n      return {\r\n        ...state,\r\n        categories: [...state.categories, payload]\r\n      };\r\n    case CATEGORY_DELETED:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== payload._id\r\n        )\r\n      };\r\n    case SERVICE_ADDED:\r\n      return {\r\n        ...state,\r\n        services: [...state.services, payload]\r\n      };\r\n    case SERVICE_UPDATED:\r\n      return {\r\n        ...state,\r\n        services: state.services.map(service =>\r\n          service._id === payload._id ? payload : service\r\n        )\r\n      };\r\n    case SERVICE_DELETED:\r\n      return {\r\n        ...state,\r\n        services: state.services.filter(service => service._id !== payload._id)\r\n      };\r\n    case CUSTOMERS_LOADED:\r\n      return {\r\n        ...state,\r\n        customers: payload\r\n      };\r\n    case CUSTOMER_DELETED:\r\n      return {\r\n        ...state,\r\n        customers: state.customers.filter(\r\n          customerItem => customerItem._id !== payload._id\r\n        )\r\n      };\r\n    case ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case PAYMENTS_LOADED:\r\n      return {\r\n        ...state,\r\n        payments: payload\r\n      };\r\n    case SERVICES_LOADED:\r\n      return {\r\n        ...state,\r\n        services: payload\r\n      };\r\n    case CLEAR_QUERIED_SERVICES:\r\n      return {\r\n        ...state,\r\n        serviceQuery: []\r\n      };\r\n    case SERVICE_STATUSES_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceStatuses: payload\r\n      };\r\n    case SINGLE_SERVICE_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceToBeEditted: payload\r\n      };\r\n    case CLEAR_QUERIED_USERS:\r\n      return {\r\n        ...state,\r\n        userQuery: []\r\n      };\r\n    case PRODUCTS_INFO_LOADED:\r\n      return {\r\n        ...state,\r\n        products: payload\r\n      };\r\n    case QUERIED_PRODUCTS_LOADED:\r\n      return {\r\n        ...state,\r\n        productsQuery: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js",["529"],"\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  ADMIN_LOADED,\r\n  ADMIN_LOGIN_SUCCESS,\r\n  ADMIN_LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_AUTH_LOADING\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload.user,\r\n        userType: payload.userType\r\n      };\r\n    case ADMIN_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload.admin,\r\n        userType: payload.userType,\r\n        loading: false\r\n      };\r\n    case USER_LOGIN_SUCCESS:\r\n    case USER_REGISTER_SUCCESS:\r\n    case ADMIN_LOGIN_SUCCESS:\r\n      localStorage.setItem(\r\n        \"auth\",\r\n        JSON.stringify({\r\n          token: payload.token,\r\n          userType: payload.userType\r\n        })\r\n      );\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        userType: payload.userType,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case SET_AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      }\r\n    case AUTH_ERROR:\r\n    case USER_LOGIN_FAIL:\r\n    case ADMIN_LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"auth\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        userType: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js",["530","531","532","533","534","535","536","537","538"],"import React, { useEffect, useState, useContext} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport adminContext from '../../../context/admin/adminContext';\r\nimport {\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\nconst CustomersItem = (\r\n {customer}\r\n) => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { deleteCustomer  } = adminContext1;\r\n\r\n  const [isDeletingCustomer, setIsDeletingCustomer ] = useState(false);\r\n  const _cbDeleteCustomer = anyData => setIsDeletingCustomer(false);\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  useEffect(() => {\r\n      console.log(customer);\r\n    }, [customer]\r\n  );\r\n\r\n\r\n  const {\r\n    _id,\r\n    name,\r\n    // eslint-disable-next-line\r\n    middleName,\r\n    surName,\r\n    username,\r\n    // eslint-disable-next-line\r\n    email,\r\n    balance,\r\n    // eslint-disable-next-line\r\n    address\r\n  } = customer;\r\n\r\n  const fullName = ([name, surName].join(' ')).trim()\r\n\r\n\r\n  return (\r\n    <StyledTableRow \r\n      key={_id}      \r\n    >\r\n      <StyledTableCell size='small' component='th' scope='row'>{fullName}</StyledTableCell>\r\n      <StyledTableCell size='small' component='th' scope='row'>{username}</StyledTableCell>\r\n      <StyledTableCell size='small' component='th' align='right' scope='row'>\r\n        {balance.toFixed(2)}\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' component='th' align='center' scope='row'>\r\n        {\r\n          isDeletingCustomer \r\n          ? (\r\n              <>Deleting...</>\r\n            )\r\n          : (\r\n            <>\r\n              <IconButton>\r\n                <EditIcon />\r\n              </IconButton>\r\n              {/* <a className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Edit\r\n              </a> */}\r\n              {/* <a \r\n                className='waves-effect waves-light red darken-1 btn-small mr-1'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n                >\r\n                Delete\r\n              </a> */}\r\n              <IconButton\r\n                color='secondary'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n              >\r\n                <DeleteForeverIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                component={NavLink}\r\n                to={`/dashboard/customers/edit/${_id}`} \r\n              >\r\n                <DetailsIcon />\r\n              </IconButton>\r\n              {/* <Link to={`/dashboard/customers/edit/${_id}`} className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Details\r\n              </Link> */}\r\n            </>\r\n          )\r\n        }\r\n      </StyledTableCell>\r\n\r\n\r\n      {/* <td>{totalOrders}</td> */}\r\n      {/* <td className='right-align'>\r\n        \r\n      </td> */}\r\n      {/* <td className='center-align'>\r\n        {\r\n          isDeletingCustomer \r\n          ? (\r\n              <>Deleting...</>\r\n            )\r\n          : (\r\n            <>\r\n              <a className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Edit\r\n              </a>\r\n              <a \r\n                className='waves-effect waves-light red darken-1 btn-small mr-1'\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  setIsDeletingCustomer(true);\r\n                  deleteCustomer({\r\n                    id: _id,\r\n                    cb: _cbDeleteCustomer\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </a>\r\n              <Link to={`/dashboard/customers/edit/${_id}`} className='waves-effect waves-light grey darken-1 btn-small mr-1'>\r\n                Details\r\n              </Link>\r\n            </>\r\n          )\r\n        }\r\n      </td> */}\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default CustomersItem","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js",["539"],"import { GET_SERVICES_AND_CATEGORIES, SET_PUBLIC_LOADING, ADD_TO_CART, SET_CART } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_SERVICES_AND_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        publicServices: payload.services,\r\n        publicCategories: payload.categories,\r\n      };\r\n    case SET_PUBLIC_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case ADD_TO_CART:\r\n    case SET_CART:\r\n      return {\r\n        ...state,\r\n        cart: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js",["540"],"import { \r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n } from \"../types\";\r\n\r\n\r\n export default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n\r\n }\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js",["541","542"],"import React from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\n\r\nconst PaymentUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName, balance } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n\r\n  console.log(userInfo);  \r\n\r\n\r\n  return (\r\n    <TableRow\r\n      onClick={e => selectUser({userInfo})}\r\n    >\r\n      <TableCell>{`${username}`}</TableCell>\r\n      <TableCell>{fullName}</TableCell>\r\n      <TableCell>{balance}</TableCell>\r\n      {/* <TableCell>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='waves-effect waves-light btn-small red'\r\n        >\r\n          <i className='material-icons right'>check</i>Add\r\n        </a>\r\n      </TableCell> */}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js",["543"],"import React from 'react'\r\n\r\nconst ProductRowForAddService = ({ productInfo, selectProduct }) => {\r\n  const { name, _id } = productInfo;\r\n  return (\r\n    \r\n      <a \r\n        style={{ display: 'flex', alignItems:'center'}}\r\n        className='collection-item avatar'      \r\n        onClick={e => selectProduct({productInfo})}>\r\n        <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n        <span class='title'>{name}</span>\r\n        {/* <p>\r\n\r\n        </p> */}\r\n      </a>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProductRowForAddService\r\n\r\n\r\n\r\n\r\n    // <li class='collection-item avatar'>\r\n    //   <a \r\n    //     className='hoverable'      \r\n    //     onClick={e => selectProduct({productInfo})}>\r\n    //     <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n    //     <span class='title'>{name}</span>\r\n    //     {/* <p>\r\n\r\n    //     </p> */}\r\n    //   </a>\r\n    // </li>\r\n\r\n\r\n      // <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n      // <span class='title'>{name}</span>\r\n      // {/* <p>\r\n\r\n      // </p> */}\r\n      // <a href='#!' class='secondary-content'>\r\n      //   <i class='material-icons'>grade</i>\r\n      // </a>\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js",["544","545","546","547","548","549","550"],"import React, { useContext, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport admincontext from '../../../context/admin/adminContext'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\n\r\n const ServiceItemsInRows = ({serviceInfo}) => {\r\n  const adminContext1 = useContext(admincontext)\r\n  const { deleteService} = adminContext1;\r\n  const { _id, serviceName, category, categoryName, image, servicePrice, featured } = serviceInfo;\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const _cbDeleteService = () => setIsDeleting(false);\r\n\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={serviceName}\r\n          variant='circular'\r\n          className={classes.large}\r\n        />\r\n      </StyledTableCell>\r\n      <StyledTableCell>{categoryName}</StyledTableCell>\r\n      <StyledTableCell align='right'>{servicePrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {featured && (\r\n          <DoneOutlineIcon />\r\n        )}\r\n      </StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/services/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"        \r\n                >\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }        \r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`sd-${_id}-title`}\r\n          aria-describedby={`sd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`sd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`sd-${_id}-description`}>\r\n              Are you sure you want to delete Service?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={_handleClickCloseDeleteModal} color='primary'>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteService(\r\n                  _id,\r\n                  _cbDeleteService\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n}\r\n\r\nexport default ServiceItemsInRows\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js",["551","552"],"import React, { useContext, useEffect } from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport ServicesItem from './ServicesItem'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst SingleCategoryTab = ({\r\n  serviceList\r\n}) => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const { publicServices } = publicContext1 \r\n\r\n\r\n\r\n  return (\r\n      <Grid container space={0}>\r\n        {serviceList && serviceList.map(service => (\r\n          <ServicesItem\r\n            key={service._id}\r\n            service={service}\r\n          />\r\n        ))}\r\n      </Grid>\r\n     \r\n  )\r\n}\r\n\r\nexport default SingleCategoryTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js",["553","554","555","556"],"import React, {useContext} from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\nconst ServicesItem = ({\r\n  service\r\n}) => {\r\n        const publicContext1 = useContext(publicContext);\r\n        const { addToCart } = publicContext1;\r\n\r\n        \r\n        const {\r\n          // eslint-disable-next-line\r\n          _id,\r\n          image,\r\n          serviceName,\r\n          categoryName,\r\n          category,\r\n          servicePrice,\r\n          featured,\r\n        } = service;\r\n\r\n        // return (\r\n        //   <div className='col s6 m4 l3'>\r\n        //     <div className='card '>\r\n        //       <div className='card-image'>\r\n        //         <img\r\n        //           alt={`${serviceName}`}\r\n        //           // src={`/api/public/products/${product}`}\r\n        //           src={uint8ArrayToImageSource(image.data)}\r\n        //         />\r\n        //       </div>\r\n        //       <span className='card-title  grey-text text-darken-4'>\r\n        //         {/* {productName} {serviceType} */}\r\n        //         {serviceName}\r\n        //       </span>\r\n        //       <div className='card-content'>\r\n        //         <div className='flexrow justify-content-flex-end mp-1'>\r\n        //           <p\r\n        //             className='mr-2'\r\n        //             style={{\r\n        //               display: \"block\",\r\n        //               height: \"100%\",\r\n        //               verticalAlign: \"middle\"\r\n        //             }}\r\n        //           >{` $${servicePrice}`}</p>\r\n        //           <a\r\n        //             href='#!'\r\n        //             className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n        //             onClick={e => {\r\n        //               e.preventDefault();\r\n        //               addToCart({ service });\r\n        //             }}\r\n        //           >\r\n        //             <i className='material-icons'>add</i>\r\n        //           </a>\r\n        //         </div>\r\n        //       </div>\r\n              \r\n\r\n             \r\n              \r\n        //     </div>\r\n            \r\n        //   </div>\r\n        // );\r\n        return (\r\n          <Grid xs={12} sm={6}  lg={4}>\r\n            <div \r\n              style={{                \r\n                marginLeft:'0.5rem',\r\n                marginRight: '0.5rem',\r\n              }}\r\n            >\r\n              <Card>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt={`${serviceName}`}\r\n                  title={`${serviceName}`}\r\n                  image={uint8ArrayToImageSource(image.data)}\r\n                />\r\n                <CardContent style={{padding: 0}}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between '>\r\n                      <p className=\"text-bold\">{serviceName}</p>\r\n                      <p className=\"text-bold\">{` $${parseFloat(servicePrice.toString()).toFixed(2)}`}</p>\r\n                    </div>\r\n                  </Box>\r\n                </CardContent>\r\n                  {/* <span className='card-title  grey-text text-darken-4'>\r\n                    {serviceName}\r\n                  </span>\r\n                  <div className='card-content'>\r\n                    <div className='flexrow justify-content-flex-end mp-1'>\r\n                      <p\r\n                        className='mr-2'\r\n                        style={{\r\n                          display: \"block\",\r\n                          height: \"100%\",\r\n                          verticalAlign: \"middle\"\r\n                        }}\r\n                      >{` $${servicePrice}`}</p>\r\n                      <a\r\n                        href='#!'\r\n                        className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          addToCart({ service });\r\n                        }}\r\n                      >\r\n                        <i className='material-icons'>add</i>\r\n                      </a>\r\n                    </div>\r\n                  </div> */}\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginBottom:'1rem'}}></div>\r\n          </Grid>\r\n              \r\n\r\n             \r\n              \r\n\r\n        );\r\n      }\r\n\r\nexport default ServicesItem","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js",["557","558"],"import React, {useContext} from 'react';\r\nimport authContext from '../../context/auth/authContext';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst ContentBody = ({children}) =>  {\r\n  const authContext1 =  useContext(authContext);\r\n  const {\r\n    userType, \r\n    user, \r\n    isAuthenticated,\r\n  } = authContext1;\r\n  let desktopPublic =  {\r\n    paddingTop: 47,\r\n    width: '100vw',\r\n    minHeight: '90vh'\r\n  };\r\n  let desktopPrivate =  {\r\n    top: 64,\r\n    // width: 'calc(100vw-180px) !important',\r\n    paddingTop: 47,\r\n    paddingLeft: 180,\r\n    minHeight: '90vh',\r\n    overflow: 'scroll'\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      paddingLeft: 180\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  return (    \r\n    (\r\n      userType === \"Admin\" \r\n      ||  userType === \"user\"\r\n    ) && isAuthenticated\r\n    && user\r\n      ?   (\r\n        <div\r\n          className={classes.content}\r\n          // style={desktopPrivate}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n      : (\r\n        <div\r\n          // style={desktopPublic}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n  );  \r\n}\r\nexport default ContentBody;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js",["559"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js",["560","561","562","563","564","565"],"import React, {useContext, useEffect, Fragment, useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport PaymentItem from './PaymentItem';\r\n\r\n\r\nconst PaymentsPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n  \r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n  \r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n      \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Payments</h2>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                  <TableRow>\r\n                  <StyledTableCell>Payment Date</StyledTableCell>\r\n                  <StyledTableCell>Username</StyledTableCell>\r\n                  <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                  <StyledTableCell align='center'>Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {payments ? (\r\n                  payments.length > 0 &&\r\n                  payments.map(payment => (\r\n                    <PaymentItem key={payment._id} payment={payment} />\r\n                  ))\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/payments/add-payment'\r\n            size='large'\r\n            color='secondary'\r\n            variant='contained'\r\n          //   style={{\r\n          //   position:'absolute',\r\n          //   bottom: 112,\r\n          //   marginLeft:'1rem',\r\n          //   marginRight:'1rem',\r\n          // }}\r\n          >\r\n            Add Payment\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentsPage;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js",["566","567","568","569","570","571","572","573","574","575"],"import React, { useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst PaymentItem = ({ payment }) => {\r\n  useEffect(() => {}, [payment]);\r\n\r\n  const { _id, customerId, date, amount } = payment;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell>{customerId.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell align='right'>{((-1) * amount).toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js",["576"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\n\r\nconst images = [\r\n  {\r\n    url: '/static/images/grid-list/breakfast.jpg',\r\n    title: 'Breakfast',\r\n    width: '40%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/burgers.jpg',\r\n    title: 'Burgers',\r\n    width: '30%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/camera.jpg',\r\n    title: 'Camera',\r\n    width: '30%',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageTitleSelected: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n    border: '4px solid currentColor',\r\n    color: 'red'\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function CategoriesRow({\r\n  publicCategories, \r\n  selectedCategoryName,\r\n  onClick\r\n}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {publicCategories.map((categoryItem) => (\r\n        <ButtonBase\r\n          focusRipple\r\n          key={categoryItem._id}\r\n          component={'button'}\r\n          onClick={() => { onClick(categoryItem.name)}}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: 200,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${ \r\n                uint8ArrayToImageSource(categoryItem.image.data)}\r\n              )`\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={\r\n                selectedCategoryName === categoryItem.name \r\n                  ? classes.imageTitleSelected\r\n                  : classes.imageTitle\r\n              }\r\n            >\r\n              {categoryItem.name}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}      \r\n    </div>\r\n  );\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js",["577","578","579","580","581","582","583","584","585","586","587","588","589"],"import React, { useContext } from 'react';\r\nimport {\r\n  NavLink,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport authContext from '../../../context/auth/authContext'\r\n\r\nimport {\r\n  AppBar, \r\n  Drawer,\r\n  Toolbar, \r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Navbar = ({\r\n  location\r\n}) => {\r\n  const authContext1 = useContext(authContext)\r\n  const { loading, userType, user, isAuthenticated, logout } = authContext1 \r\n  \r\n  let classes;\r\n  const useStyles = makeStyles( () => ({\r\n    mobileDrawer: {\r\n      width: 180\r\n    },\r\n    desktopDrawer: {\r\n      width: 180,\r\n      top: 64,\r\n      backgroundColor:'#777'\r\n    }\r\n  }));\r\n  classes=useStyles();  \r\n  \r\n  const _CustomNavButton = ({content, navPath, onClick, isAppbar = false}) => {\r\n    const _sidebarButtonTheme = createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: '#fafafa',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        },\r\n      }\r\n    });\r\n    if ( isAppbar ) {\r\n      return (\r\n        <ThemeProvider theme={_sidebarButtonTheme}>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'primary'  }\r\n            to={navPath}\r\n            variant= { location.pathname === navPath ? 'outlined' : 'inherit'}\r\n          >\r\n            {content}\r\n          </Button>\r\n        </ThemeProvider>\r\n      );\r\n    }\r\n    if ( onClick ) {\r\n      return (\r\n        <ThemeProvider theme={_sidebarButtonTheme}>\r\n          <Button\r\n            onClick={onClick}\r\n          >\r\n            {content}\r\n          </Button>\r\n        </ThemeProvider>\r\n      );\r\n    }\r\n    return (\r\n      <ThemeProvider theme={_sidebarButtonTheme}>\r\n        <Button\r\n          component={NavLink}\r\n          color={ location.pathname === navPath ? 'secondary' : 'primary'  }\r\n          to={navPath}\r\n        >\r\n          {content}\r\n        </Button>\r\n      </ThemeProvider>\r\n    );\r\n  }  // End of _CustomNavButton\r\n  \r\n\r\n\r\n  const adminMenu = () => (\r\n    <> \r\n        <div className='pt-2'></div>\r\n        <_CustomNavButton\r\n          navPath= '/dashboard'\r\n          content='Dashboard'\r\n        />    \r\n        <_CustomNavButton\r\n          navPath= '/dashboard/customers'\r\n          content='Customers'\r\n        />     \r\n        <_CustomNavButton\r\n          navPath= '/dashboard/orders'\r\n          content='Orders'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/payments'\r\n          content='Payments'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/categories'\r\n          content='Categories'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/services'\r\n          content='Services'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/settings'\r\n          content={<TuneIcon />}\r\n        />     \r\n        <_CustomNavButton\r\n          onClick= { () => {\r\n            logout();\r\n          }}\r\n          content={\r\n            <>\r\n              <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Logout</p>\r\n              <ExitToAppIcon color='primary'/>\r\n            </>\r\n          }\r\n        />\r\n    </>\r\n  );  // End of adminMenu \r\n  \r\n  const userMenu = () => (\r\n    <>\r\n      <_CustomNavButton\r\n        navPath= '/user-main'\r\n        content='Orders'\r\n      />  \r\n      <_CustomNavButton\r\n          onClick= { () => {\r\n            logout();\r\n          }}\r\n          content={\r\n            <>\r\n              <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Logout</p>\r\n              <ExitToAppIcon color='primary'/>\r\n            </>\r\n          }\r\n        />\r\n    </>\r\n  )\r\n\r\n  const publicMenu = () => (\r\n    <>      \r\n      <_CustomNavButton\r\n        isAppbar={true}\r\n        navPath={'/user-login'}\r\n        content={\r\n          <>\r\n            <ExitToAppIcon color='primary'/>\r\n            <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Login</p>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );  \r\n \r\n\r\n  return (\r\n    <>      \r\n      {\r\n        (\r\n          userType === \"Admin\" \r\n          ||  userType === \"user\"\r\n        ) && isAuthenticated\r\n        && user && (\r\n          <Drawer\r\n            anchor='left'\r\n            variant='permanent'\r\n            classes={{paper: classes.desktopDrawer}}\r\n          >\r\n              {!loading &&\r\n                userType === \"Admin\" &&\r\n                user &&\r\n                isAuthenticated &&\r\n                adminMenu()}\r\n              {!loading &&\r\n                userType === \"user\" &&\r\n                user &&\r\n                isAuthenticated &&\r\n                userMenu()}  \r\n          </Drawer>\r\n        )\r\n      }        \r\n      <AppBar\r\n        color='secondary'\r\n      >\r\n        <Toolbar>\r\n          <_CustomNavButton\r\n            navPath='/'\r\n            content={<p style={{color:'#fafafa'}}>Home</p>}\r\n            isAppbar={true}\r\n          />\r\n          <_CustomNavButton\r\n            navPath='/about'\r\n            content={<p style={{color:'#fafafa'}}>About</p>}\r\n            isAppbar={true}\r\n          />\r\n          {\r\n            !loading \r\n            && !userType \r\n            && !user\r\n            && !isAuthenticated \r\n            && publicMenu()\r\n          }\r\n        </Toolbar>\r\n      </AppBar>      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\OrdersTabInAdminDashBoard.js",["590","591","592","593","594","595","596","597"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\OrdersItem.js",["598","599","600","601","602","603","604","605","606","607","608"],{"ruleId":"609","replacedBy":"610"},{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","severity":1,"message":"614","line":90,"column":9,"nodeType":"615","messageId":"616","endLine":90,"endColumn":16},{"ruleId":"617","severity":1,"message":"618","line":93,"column":15,"nodeType":"619","endLine":93,"endColumn":27},{"ruleId":"620","severity":1,"message":"621","line":7,"column":6,"nodeType":"622","endLine":7,"endColumn":8,"suggestions":"623"},{"ruleId":"613","severity":1,"message":"624","line":4,"column":8,"nodeType":"615","messageId":"616","endLine":4,"endColumn":15},{"ruleId":"613","severity":1,"message":"625","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":12},{"ruleId":"613","severity":1,"message":"630","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":11},{"ruleId":"613","severity":1,"message":"631","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":16,"column":3,"nodeType":"615","messageId":"616","endLine":16,"endColumn":8},{"ruleId":"613","severity":1,"message":"633","line":18,"column":11,"nodeType":"615","messageId":"616","endLine":18,"endColumn":21},{"ruleId":"613","severity":1,"message":"634","line":18,"column":23,"nodeType":"615","messageId":"616","endLine":18,"endColumn":33},{"ruleId":"617","severity":1,"message":"618","line":203,"column":15,"nodeType":"619","endLine":203,"endColumn":27},{"ruleId":"617","severity":1,"message":"618","line":237,"column":19,"nodeType":"619","endLine":246,"endColumn":20},{"ruleId":"617","severity":1,"message":"618","line":249,"column":19,"nodeType":"619","endLine":258,"endColumn":20},{"ruleId":"609","replacedBy":"635"},{"ruleId":"611","replacedBy":"636"},{"ruleId":"613","severity":1,"message":"637","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":14},{"ruleId":"620","severity":1,"message":"638","line":62,"column":6,"nodeType":"622","endLine":62,"endColumn":22,"suggestions":"639"},{"ruleId":"613","severity":1,"message":"640","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":12},{"ruleId":"613","severity":1,"message":"641","line":22,"column":54,"nodeType":"615","messageId":"616","endLine":22,"endColumn":62},{"ruleId":"613","severity":1,"message":"642","line":4,"column":8,"nodeType":"615","messageId":"616","endLine":4,"endColumn":17},{"ruleId":"613","severity":1,"message":"643","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":9},{"ruleId":"613","severity":1,"message":"644","line":16,"column":3,"nodeType":"615","messageId":"616","endLine":16,"endColumn":6},{"ruleId":"613","severity":1,"message":"645","line":19,"column":3,"nodeType":"615","messageId":"616","endLine":19,"endColumn":7},{"ruleId":"613","severity":1,"message":"646","line":20,"column":3,"nodeType":"615","messageId":"616","endLine":20,"endColumn":14},{"ruleId":"613","severity":1,"message":"647","line":22,"column":3,"nodeType":"615","messageId":"616","endLine":22,"endColumn":13},{"ruleId":"613","severity":1,"message":"648","line":23,"column":3,"nodeType":"615","messageId":"616","endLine":23,"endColumn":9},{"ruleId":"613","severity":1,"message":"634","line":24,"column":3,"nodeType":"615","messageId":"616","endLine":24,"endColumn":13},{"ruleId":"620","severity":1,"message":"649","line":50,"column":6,"nodeType":"622","endLine":50,"endColumn":8,"suggestions":"650"},{"ruleId":"613","severity":1,"message":"626","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":12},{"ruleId":"613","severity":1,"message":"630","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":11},{"ruleId":"613","severity":1,"message":"631","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":16,"column":3,"nodeType":"615","messageId":"616","endLine":16,"endColumn":8},{"ruleId":"613","severity":1,"message":"633","line":18,"column":11,"nodeType":"615","messageId":"616","endLine":18,"endColumn":21},{"ruleId":"613","severity":1,"message":"634","line":18,"column":23,"nodeType":"615","messageId":"616","endLine":18,"endColumn":33},{"ruleId":"620","severity":1,"message":"651","line":34,"column":6,"nodeType":"622","endLine":34,"endColumn":8,"suggestions":"652"},{"ruleId":"617","severity":1,"message":"653","line":39,"column":11,"nodeType":"619","endLine":47,"endColumn":12},{"ruleId":"609","replacedBy":"654"},{"ruleId":"611","replacedBy":"655"},{"ruleId":"613","severity":1,"message":"656","line":1,"column":40,"nodeType":"615","messageId":"616","endLine":1,"endColumn":48},{"ruleId":"620","severity":1,"message":"657","line":33,"column":6,"nodeType":"622","endLine":33,"endColumn":8,"suggestions":"658"},{"ruleId":"613","severity":1,"message":"659","line":1,"column":50,"nodeType":"615","messageId":"616","endLine":1,"endColumn":58},{"ruleId":"613","severity":1,"message":"660","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":24},{"ruleId":"613","severity":1,"message":"661","line":4,"column":8,"nodeType":"615","messageId":"616","endLine":4,"endColumn":21},{"ruleId":"613","severity":1,"message":"624","line":6,"column":8,"nodeType":"615","messageId":"616","endLine":6,"endColumn":15},{"ruleId":"613","severity":1,"message":"662","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":19},{"ruleId":"613","severity":1,"message":"628","line":18,"column":3,"nodeType":"615","messageId":"616","endLine":18,"endColumn":12},{"ruleId":"613","severity":1,"message":"663","line":22,"column":3,"nodeType":"615","messageId":"616","endLine":22,"endColumn":11},{"ruleId":"613","severity":1,"message":"664","line":23,"column":3,"nodeType":"615","messageId":"616","endLine":23,"endColumn":19},{"ruleId":"613","severity":1,"message":"665","line":44,"column":5,"nodeType":"615","messageId":"616","endLine":44,"endColumn":12},{"ruleId":"613","severity":1,"message":"666","line":58,"column":10,"nodeType":"615","messageId":"616","endLine":58,"endColumn":26},{"ruleId":"613","severity":1,"message":"667","line":58,"column":28,"nodeType":"615","messageId":"616","endLine":58,"endColumn":47},{"ruleId":"620","severity":1,"message":"668","line":111,"column":6,"nodeType":"622","endLine":111,"endColumn":8,"suggestions":"669"},{"ruleId":"670","severity":1,"message":"671","line":127,"column":24,"nodeType":"672","messageId":"673","endLine":133,"endColumn":7},{"ruleId":"674","severity":1,"message":"675","line":155,"column":22,"nodeType":"676","messageId":"677","endLine":155,"endColumn":24},{"ruleId":"674","severity":1,"message":"675","line":179,"column":22,"nodeType":"676","messageId":"677","endLine":179,"endColumn":24},{"ruleId":"674","severity":1,"message":"675","line":196,"column":22,"nodeType":"676","messageId":"677","endLine":196,"endColumn":24},{"ruleId":"613","severity":1,"message":"659","line":1,"column":38,"nodeType":"615","messageId":"616","endLine":1,"endColumn":46},{"ruleId":"620","severity":1,"message":"678","line":95,"column":6,"nodeType":"622","endLine":95,"endColumn":8,"suggestions":"679"},{"ruleId":"613","severity":1,"message":"680","line":102,"column":5,"nodeType":"615","messageId":"616","endLine":102,"endColumn":13},{"ruleId":"613","severity":1,"message":"632","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":8},{"ruleId":"613","severity":1,"message":"681","line":25,"column":5,"nodeType":"615","messageId":"616","endLine":25,"endColumn":14},{"ruleId":"613","severity":1,"message":"682","line":26,"column":5,"nodeType":"615","messageId":"616","endLine":26,"endColumn":19},{"ruleId":"613","severity":1,"message":"683","line":54,"column":7,"nodeType":"615","messageId":"616","endLine":54,"endColumn":11},{"ruleId":"620","severity":1,"message":"684","line":73,"column":6,"nodeType":"622","endLine":73,"endColumn":8,"suggestions":"685"},{"ruleId":"613","severity":1,"message":"686","line":161,"column":11,"nodeType":"615","messageId":"616","endLine":161,"endColumn":19},{"ruleId":"613","severity":1,"message":"687","line":161,"column":21,"nodeType":"615","messageId":"616","endLine":161,"endColumn":29},{"ruleId":"613","severity":1,"message":"688","line":161,"column":31,"nodeType":"615","messageId":"616","endLine":161,"endColumn":38},{"ruleId":"613","severity":1,"message":"689","line":2,"column":10,"nodeType":"615","messageId":"616","endLine":2,"endColumn":14},{"ruleId":"613","severity":1,"message":"690","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":24},{"ruleId":"620","severity":1,"message":"691","line":30,"column":6,"nodeType":"622","endLine":30,"endColumn":8,"suggestions":"692"},{"ruleId":"613","severity":1,"message":"693","line":972,"column":27,"nodeType":"615","messageId":"616","endLine":972,"endColumn":34},{"ruleId":"613","severity":1,"message":"640","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":9},{"ruleId":"620","severity":1,"message":"694","line":50,"column":6,"nodeType":"622","endLine":50,"endColumn":8,"suggestions":"695"},{"ruleId":"613","severity":1,"message":"696","line":53,"column":11,"nodeType":"615","messageId":"616","endLine":53,"endColumn":14},{"ruleId":"613","severity":1,"message":"697","line":53,"column":16,"nodeType":"615","messageId":"616","endLine":53,"endColumn":20},{"ruleId":"613","severity":1,"message":"689","line":2,"column":9,"nodeType":"615","messageId":"616","endLine":2,"endColumn":13},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"640","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":8},{"ruleId":"613","severity":1,"message":"634","line":17,"column":23,"nodeType":"615","messageId":"616","endLine":17,"endColumn":33},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"662","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":19},{"ruleId":"613","severity":1,"message":"625","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":9},{"ruleId":"613","severity":1,"message":"628","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"699","severity":1,"message":"700","line":57,"column":11,"nodeType":"619","endLine":57,"endColumn":76},{"ruleId":"617","severity":1,"message":"653","line":62,"column":13,"nodeType":"619","endLine":62,"endColumn":70},{"ruleId":"613","severity":1,"message":"701","line":1,"column":16,"nodeType":"615","messageId":"616","endLine":1,"endColumn":25},{"ruleId":"613","severity":1,"message":"689","line":2,"column":9,"nodeType":"615","messageId":"616","endLine":2,"endColumn":13},{"ruleId":"613","severity":1,"message":"702","line":3,"column":8,"nodeType":"615","messageId":"616","endLine":3,"endColumn":14},{"ruleId":"613","severity":1,"message":"624","line":6,"column":8,"nodeType":"615","messageId":"616","endLine":6,"endColumn":15},{"ruleId":"613","severity":1,"message":"626","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":8},{"ruleId":"613","severity":1,"message":"683","line":42,"column":5,"nodeType":"615","messageId":"616","endLine":42,"endColumn":9},{"ruleId":"613","severity":1,"message":"703","line":43,"column":5,"nodeType":"615","messageId":"616","endLine":43,"endColumn":16},{"ruleId":"613","severity":1,"message":"704","line":44,"column":5,"nodeType":"615","messageId":"616","endLine":44,"endColumn":20},{"ruleId":"613","severity":1,"message":"705","line":49,"column":5,"nodeType":"615","messageId":"616","endLine":49,"endColumn":15},{"ruleId":"613","severity":1,"message":"706","line":50,"column":5,"nodeType":"615","messageId":"616","endLine":50,"endColumn":19},{"ruleId":"613","severity":1,"message":"707","line":52,"column":5,"nodeType":"615","messageId":"616","endLine":52,"endColumn":15},{"ruleId":"613","severity":1,"message":"708","line":53,"column":5,"nodeType":"615","messageId":"616","endLine":53,"endColumn":11},{"ruleId":"613","severity":1,"message":"665","line":54,"column":5,"nodeType":"615","messageId":"616","endLine":54,"endColumn":12},{"ruleId":"613","severity":1,"message":"709","line":55,"column":5,"nodeType":"615","messageId":"616","endLine":55,"endColumn":17},{"ruleId":"613","severity":1,"message":"641","line":56,"column":5,"nodeType":"615","messageId":"616","endLine":56,"endColumn":13},{"ruleId":"613","severity":1,"message":"696","line":4,"column":11,"nodeType":"615","messageId":"616","endLine":4,"endColumn":14},{"ruleId":"617","severity":1,"message":"653","line":11,"column":9,"nodeType":"619","endLine":14,"endColumn":10},{"ruleId":"613","severity":1,"message":"696","line":5,"column":11,"nodeType":"615","messageId":"616","endLine":5,"endColumn":14},{"ruleId":"617","severity":1,"message":"653","line":15,"column":9,"nodeType":"619","endLine":18,"endColumn":10},{"ruleId":"613","severity":1,"message":"701","line":1,"column":16,"nodeType":"615","messageId":"616","endLine":1,"endColumn":25},{"ruleId":"613","severity":1,"message":"656","line":1,"column":27,"nodeType":"615","messageId":"616","endLine":1,"endColumn":35},{"ruleId":"613","severity":1,"message":"626","line":3,"column":3,"nodeType":"615","messageId":"616","endLine":3,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":4,"column":3,"nodeType":"615","messageId":"616","endLine":4,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":8},{"ruleId":"613","severity":1,"message":"625","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":9},{"ruleId":"613","severity":1,"message":"710","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":13},{"ruleId":"613","severity":1,"message":"711","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":9},{"ruleId":"613","severity":1,"message":"712","line":16,"column":3,"nodeType":"615","messageId":"616","endLine":16,"endColumn":14},{"ruleId":"613","severity":1,"message":"713","line":17,"column":3,"nodeType":"615","messageId":"616","endLine":17,"endColumn":16},{"ruleId":"613","severity":1,"message":"714","line":18,"column":3,"nodeType":"615","messageId":"616","endLine":18,"endColumn":20},{"ruleId":"613","severity":1,"message":"715","line":19,"column":3,"nodeType":"615","messageId":"616","endLine":19,"endColumn":16},{"ruleId":"613","severity":1,"message":"643","line":20,"column":3,"nodeType":"615","messageId":"616","endLine":20,"endColumn":9},{"ruleId":"613","severity":1,"message":"716","line":21,"column":9,"nodeType":"615","messageId":"616","endLine":21,"endColumn":28},{"ruleId":"613","severity":1,"message":"717","line":25,"column":9,"nodeType":"615","messageId":"616","endLine":25,"endColumn":28},{"ruleId":"613","severity":1,"message":"718","line":29,"column":9,"nodeType":"615","messageId":"616","endLine":29,"endColumn":24},{"ruleId":"613","severity":1,"message":"698","line":3,"column":3,"nodeType":"615","messageId":"616","endLine":3,"endColumn":12},{"ruleId":"613","severity":1,"message":"662","line":4,"column":3,"nodeType":"615","messageId":"616","endLine":4,"endColumn":19},{"ruleId":"613","severity":1,"message":"640","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":8},{"ruleId":"613","severity":1,"message":"710","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":13},{"ruleId":"613","severity":1,"message":"634","line":16,"column":23,"nodeType":"615","messageId":"616","endLine":16,"endColumn":33},{"ruleId":"613","severity":1,"message":"680","line":22,"column":5,"nodeType":"615","messageId":"616","endLine":22,"endColumn":13},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"640","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":8},{"ruleId":"613","severity":1,"message":"634","line":17,"column":23,"nodeType":"615","messageId":"616","endLine":17,"endColumn":33},{"ruleId":"719","severity":1,"message":"720","line":9,"column":1,"nodeType":"721","endLine":31,"endColumn":3},{"ruleId":"719","severity":1,"message":"720","line":34,"column":1,"nodeType":"721","endLine":156,"endColumn":3},{"ruleId":"719","severity":1,"message":"720","line":18,"column":1,"nodeType":"721","endLine":78,"endColumn":2},{"ruleId":"613","severity":1,"message":"689","line":2,"column":9,"nodeType":"615","messageId":"616","endLine":2,"endColumn":13},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":8},{"ruleId":"613","severity":1,"message":"634","line":16,"column":23,"nodeType":"615","messageId":"616","endLine":16,"endColumn":33},{"ruleId":"719","severity":1,"message":"720","line":3,"column":1,"nodeType":"721","endLine":27,"endColumn":3},{"ruleId":"719","severity":1,"message":"720","line":7,"column":2,"nodeType":"721","endLine":19,"endColumn":3},{"ruleId":"613","severity":1,"message":"696","line":4,"column":11,"nodeType":"615","messageId":"616","endLine":4,"endColumn":14},{"ruleId":"617","severity":1,"message":"653","line":16,"column":9,"nodeType":"619","endLine":19,"endColumn":10},{"ruleId":"617","severity":1,"message":"653","line":7,"column":7,"nodeType":"619","endLine":10,"endColumn":53},{"ruleId":"613","severity":1,"message":"689","line":2,"column":9,"nodeType":"615","messageId":"616","endLine":2,"endColumn":13},{"ruleId":"613","severity":1,"message":"626","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":8},{"ruleId":"613","severity":1,"message":"680","line":31,"column":29,"nodeType":"615","messageId":"616","endLine":31,"endColumn":37},{"ruleId":"613","severity":1,"message":"701","line":1,"column":29,"nodeType":"615","messageId":"616","endLine":1,"endColumn":38},{"ruleId":"613","severity":1,"message":"722","line":12,"column":11,"nodeType":"615","messageId":"616","endLine":12,"endColumn":25},{"ruleId":"613","severity":1,"message":"723","line":16,"column":17,"nodeType":"615","messageId":"616","endLine":16,"endColumn":26},{"ruleId":"613","severity":1,"message":"724","line":24,"column":11,"nodeType":"615","messageId":"616","endLine":24,"endColumn":23},{"ruleId":"613","severity":1,"message":"680","line":25,"column":11,"nodeType":"615","messageId":"616","endLine":25,"endColumn":19},{"ruleId":"613","severity":1,"message":"725","line":27,"column":11,"nodeType":"615","messageId":"616","endLine":27,"endColumn":19},{"ruleId":"613","severity":1,"message":"726","line":13,"column":7,"nodeType":"615","messageId":"616","endLine":13,"endColumn":20},{"ruleId":"613","severity":1,"message":"727","line":18,"column":7,"nodeType":"615","messageId":"616","endLine":18,"endColumn":21},{"ruleId":"613","severity":1,"message":"728","line":55,"column":7,"nodeType":"615","messageId":"616","endLine":55,"endColumn":19},{"ruleId":"613","severity":1,"message":"656","line":1,"column":49,"nodeType":"615","messageId":"616","endLine":1,"endColumn":57},{"ruleId":"613","severity":1,"message":"689","line":2,"column":10,"nodeType":"615","messageId":"616","endLine":2,"endColumn":14},{"ruleId":"613","severity":1,"message":"705","line":21,"column":11,"nodeType":"615","messageId":"616","endLine":21,"endColumn":21},{"ruleId":"613","severity":1,"message":"708","line":21,"column":23,"nodeType":"615","messageId":"616","endLine":21,"endColumn":29},{"ruleId":"613","severity":1,"message":"665","line":21,"column":31,"nodeType":"615","messageId":"616","endLine":21,"endColumn":38},{"ruleId":"620","severity":1,"message":"729","line":25,"column":6,"nodeType":"622","endLine":25,"endColumn":8,"suggestions":"730"},{"ruleId":"613","severity":1,"message":"689","line":2,"column":10,"nodeType":"615","messageId":"616","endLine":2,"endColumn":14},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"640","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":8},{"ruleId":"613","severity":1,"message":"634","line":17,"column":23,"nodeType":"615","messageId":"616","endLine":17,"endColumn":33},{"ruleId":"613","severity":1,"message":"731","line":7,"column":7,"nodeType":"615","messageId":"616","endLine":7,"endColumn":13},{"ruleId":"732","severity":1,"message":"733","line":90,"column":9,"nodeType":"619","endLine":93,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":94,"column":9,"nodeType":"619","endLine":97,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":98,"column":9,"nodeType":"619","endLine":101,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":102,"column":9,"nodeType":"619","endLine":105,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":106,"column":9,"nodeType":"619","endLine":109,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":110,"column":9,"nodeType":"619","endLine":113,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":114,"column":9,"nodeType":"619","endLine":117,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":118,"column":9,"nodeType":"619","endLine":128,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":134,"column":7,"nodeType":"619","endLine":137,"endColumn":9},{"ruleId":"732","severity":1,"message":"733","line":138,"column":7,"nodeType":"619","endLine":148,"endColumn":11},{"ruleId":"732","severity":1,"message":"733","line":154,"column":7,"nodeType":"619","endLine":163,"endColumn":9},{"ruleId":"732","severity":1,"message":"733","line":198,"column":11,"nodeType":"619","endLine":202,"endColumn":13},{"ruleId":"732","severity":1,"message":"733","line":203,"column":11,"nodeType":"619","endLine":207,"endColumn":13},{"ruleId":"613","severity":1,"message":"734","line":1,"column":16,"nodeType":"615","messageId":"616","endLine":1,"endColumn":26},{"ruleId":"613","severity":1,"message":"701","line":1,"column":28,"nodeType":"615","messageId":"616","endLine":1,"endColumn":37},{"ruleId":"613","severity":1,"message":"735","line":2,"column":11,"nodeType":"615","messageId":"616","endLine":2,"endColumn":18},{"ruleId":"613","severity":1,"message":"736","line":4,"column":8,"nodeType":"615","messageId":"616","endLine":4,"endColumn":20},{"ruleId":"613","severity":1,"message":"662","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":19},{"ruleId":"613","severity":1,"message":"698","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":12},{"ruleId":"613","severity":1,"message":"640","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":9},{"ruleId":"613","severity":1,"message":"689","line":2,"column":9,"nodeType":"615","messageId":"616","endLine":2,"endColumn":13},{"ruleId":"613","severity":1,"message":"698","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":12},{"ruleId":"613","severity":1,"message":"662","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":19},{"ruleId":"613","severity":1,"message":"640","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":12},{"ruleId":"613","severity":1,"message":"625","line":8,"column":3,"nodeType":"615","messageId":"616","endLine":8,"endColumn":9},{"ruleId":"613","severity":1,"message":"626","line":9,"column":3,"nodeType":"615","messageId":"616","endLine":9,"endColumn":17},{"ruleId":"613","severity":1,"message":"627","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":8},{"ruleId":"613","severity":1,"message":"628","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":12},{"ruleId":"613","severity":1,"message":"629","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":12},{"ruleId":"613","severity":1,"message":"632","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":8},{"ruleId":"613","severity":1,"message":"634","line":18,"column":23,"nodeType":"615","messageId":"616","endLine":18,"endColumn":33},"no-native-reassign",["737"],"no-negated-in-lhs",["738"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["739"],"'Spinner' is defined but never used.","'Button' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.",["737"],["738"],"'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'loadSingleCustomer', 'match.params.id', and 'updateFormFromBackend'. Either include them or remove the dependency array.",["740"],"'TextField' is defined but never used.","'payments' is assigned a value but never used.","'AdminTabs' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'colors' is defined but never used.","React Hook useEffect has missing dependencies: 'loadDashboardReports' and 'loadOrders'. Either include them or remove the dependency array.",["741"],"React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["742"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["737"],["738"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["743"],"'Fragment' is defined but never used.","'OrderServiceItem' is defined but never used.","'OrderUserItem' is defined but never used.","'CircularProgress' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'loading' is assigned a value but never used.","'sectionSelection' is assigned a value but never used.","'setSectionSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadServiceStatuses', 'loadSingleOrder', 'next', and 'orderId'. Either include them or remove the dependency array.",["744"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadSingleService', 'match.params.serviceId', 'next', and 'setAdminLoading'. Either include them or remove the dependency array.",["745"],"'category' is assigned a value but never used.","'userQuery' is assigned a value but never used.","'clearUserQuery' is assigned a value but never used.","'date' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activityId', 'getSingleUserActivity', and 'next'. Either include them or remove the dependency array.",["746"],"'username' is assigned a value but never used.","'fullName' is assigned a value but never used.","'balance' is assigned a value but never used.","'Link' is defined but never used.","'AddCustomerModal' is defined but never used.","React Hook useEffect has missing dependencies: 'customers.length' and 'loadCustomers'. Either include them or remove the dependency array.",["747"],"'payment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadSingleOrder', 'match.params._id', and 'next'. Either include them or remove the dependency array.",["748"],"'_id' is assigned a value but never used.","'user' is assigned a value but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Moment' is defined but never used.","'orderStatus' is assigned a value but never used.","'orderTotalPrice' is assigned a value but never used.","'loadOrders' is assigned a value but never used.","'loadCategories' is assigned a value but never used.","'categories' is assigned a value but never used.","'orders' is assigned a value but never used.","'loadPayments' is assigned a value but never used.","'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'handleFeaturedClick' is assigned a value but never used.","'handleDryCleanClick' is assigned a value but never used.","'handleIronClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'publicServices' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'categoryName' is assigned a value but never used.","'featured' is assigned a value but never used.","'desktopPublic' is assigned a value but never used.","'desktopPrivate' is assigned a value but never used.","'exampleTable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPayments'. Either include it or remove the dependency array.",["749"],"'images' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component _CustomNavButton must be in PascalCase or SCREAMING_SNAKE_CASE","'useContext' is defined but never used.","'NavLink' is defined but never used.","'adminContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},"Update the dependencies array to be: [match]",{"range":"772","text":"773"},"Update the dependencies array to be: [loadSingleCustomer, match.params.id, updateCustomer, updateFormFromBackend]",{"range":"774","text":"775"},"Update the dependencies array to be: [loadDashboardReports, loadOrders]",{"range":"776","text":"777"},"Update the dependencies array to be: [loadServices]",{"range":"778","text":"779"},"Update the dependencies array to be: [loadCategories]",{"range":"780","text":"781"},"Update the dependencies array to be: [loadServiceStatuses, loadSingleOrder, next, orderId]",{"range":"782","text":"783"},"Update the dependencies array to be: [loadSingleService, match.params.serviceId, next, setAdminLoading]",{"range":"784","text":"785"},"Update the dependencies array to be: [activityId, getSingleUserActivity, next]",{"range":"786","text":"787"},"Update the dependencies array to be: [customers.length, loadCustomers]",{"range":"788","text":"789"},"Update the dependencies array to be: [loadSingleOrder, match.params._id, next]",{"range":"790","text":"791"},"Update the dependencies array to be: [loadPayments]",{"range":"792","text":"793"},[151,153],"[match]",[1553,1569],"[loadSingleCustomer, match.params.id, updateCustomer, updateFormFromBackend]",[1566,1568],"[loadDashboardReports, loadOrders]",[786,788],"[loadServices]",[727,729],"[loadCategories]",[3195,3197],"[loadServiceStatuses, loadSingleOrder, next, orderId]",[2586,2588],"[loadSingleService, match.params.serviceId, next, setAdminLoading]",[1871,1873],"[activityId, getSingleUserActivity, next]",[853,855],"[customers.length, loadCustomers]",[1374,1376],"[loadSingleOrder, match.params._id, next]",[672,674],"[loadPayments]"]