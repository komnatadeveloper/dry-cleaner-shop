[{"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js":"1","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js":"2","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js":"3","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js":"4","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js":"6","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js":"7","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js":"8","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js":"9","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js":"10","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js":"11","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js":"12","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js":"13","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js":"14","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js":"15","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js":"16","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js":"17","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js":"18","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js":"19","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js":"20","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js":"21","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js":"22","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js":"23","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js":"24","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js":"25","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js":"26","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js":"27","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js":"28","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js":"29","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js":"30","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js":"31","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js":"32","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js":"33","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js":"34","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js":"35","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js":"36","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js":"37","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js":"38","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js":"39","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js":"40","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js":"41","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js":"42","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js":"43","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js":"44","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js":"45","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js":"46","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js":"47","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js":"48","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js":"49","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js":"50","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js":"51","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js":"52","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js":"53","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js":"54","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js":"55","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js":"56","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js":"57","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js":"58","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js":"59","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js":"60","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js":"61","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js":"62","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js":"63","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js":"64","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js":"65","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js":"66","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js":"67","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js":"68","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js":"69","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js":"70","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js":"71","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js":"72","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js":"73","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js":"74","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js":"75","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js":"76","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\CustomerDetails.js":"77","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTable.js":"78","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTableItem.js":"79","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\Account\\AccountUserPage.js":"80","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\ChangePassword.js":"81","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivitiesTabInAdminDashBoard.js":"82","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivityItem.js":"83","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\EmployeeList\\EmployeeListPage.js":"84","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Settings\\SettingsPage.js":"85","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\EmployeeList\\EmployeeItem.js":"86","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Employee\\AddEmployeePage.js":"87","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Employee\\EditEmployeePage.js":"88"},{"size":196,"mtime":1612726131102,"results":"89","hashOfConfig":"90"},{"size":9746,"mtime":1613238612530,"results":"91","hashOfConfig":"90"},{"size":902,"mtime":1612726130963,"results":"92","hashOfConfig":"90"},{"size":918,"mtime":1612726131016,"results":"93","hashOfConfig":"90"},{"size":1301,"mtime":1612726131015,"results":"94","hashOfConfig":"90"},{"size":2599,"mtime":1612726131020,"results":"95","hashOfConfig":"90"},{"size":3430,"mtime":1612698196632,"results":"96","hashOfConfig":"90"},{"size":2535,"mtime":1612726131035,"results":"97","hashOfConfig":"90"},{"size":1665,"mtime":1612726131039,"results":"98","hashOfConfig":"90"},{"size":183,"mtime":1612726131034,"results":"99","hashOfConfig":"90"},{"size":8850,"mtime":1613227815563,"results":"100","hashOfConfig":"90"},{"size":815,"mtime":1612726131047,"results":"101","hashOfConfig":"90"},{"size":430,"mtime":1612726131106,"results":"102","hashOfConfig":"90"},{"size":811,"mtime":1612726131048,"results":"103","hashOfConfig":"90"},{"size":3003,"mtime":1597007136578,"results":"104","hashOfConfig":"90"},{"size":3313,"mtime":1613262743762,"results":"105","hashOfConfig":"90"},{"size":3973,"mtime":1613173915642,"results":"106","hashOfConfig":"90"},{"size":2243,"mtime":1612726130989,"results":"107","hashOfConfig":"90"},{"size":2208,"mtime":1578017302727,"results":"108","hashOfConfig":"90"},{"size":3369,"mtime":1613262743763,"results":"109","hashOfConfig":"90"},{"size":16302,"mtime":1613262743762,"results":"110","hashOfConfig":"90"},{"size":10492,"mtime":1613262743761,"results":"111","hashOfConfig":"90"},{"size":2634,"mtime":1613262743763,"results":"112","hashOfConfig":"90"},{"size":13120,"mtime":1613250652109,"results":"113","hashOfConfig":"90"},{"size":4062,"mtime":1613262743762,"results":"114","hashOfConfig":"90"},{"size":826,"mtime":1612726131059,"results":"115","hashOfConfig":"90"},{"size":5448,"mtime":1613258021327,"results":"116","hashOfConfig":"90"},{"size":7386,"mtime":1613099464107,"results":"117","hashOfConfig":"90"},{"size":29855,"mtime":1613262767616,"results":"118","hashOfConfig":"90"},{"size":3482,"mtime":1612726131069,"results":"119","hashOfConfig":"90"},{"size":2884,"mtime":1612726131051,"results":"120","hashOfConfig":"90"},{"size":4934,"mtime":1612726131053,"results":"121","hashOfConfig":"90"},{"size":113,"mtime":1612726131060,"results":"122","hashOfConfig":"90"},{"size":111,"mtime":1612726131063,"results":"123","hashOfConfig":"90"},{"size":320,"mtime":1612726131040,"results":"124","hashOfConfig":"90"},{"size":561,"mtime":1612726131026,"results":"125","hashOfConfig":"90"},{"size":115,"mtime":1612726131066,"results":"126","hashOfConfig":"90"},{"size":109,"mtime":1612726131070,"results":"127","hashOfConfig":"90"},{"size":1752,"mtime":1597007136583,"results":"128","hashOfConfig":"90"},{"size":113,"mtime":1612726131056,"results":"129","hashOfConfig":"90"},{"size":2734,"mtime":1613080069845,"results":"130","hashOfConfig":"90"},{"size":1140,"mtime":1612726130999,"results":"131","hashOfConfig":"90"},{"size":1826,"mtime":1612726130990,"results":"132","hashOfConfig":"90"},{"size":5034,"mtime":1597007136480,"results":"133","hashOfConfig":"90"},{"size":2381,"mtime":1577324814017,"results":"134","hashOfConfig":"90"},{"size":5154,"mtime":1613234102356,"results":"135","hashOfConfig":"90"},{"size":588,"mtime":1612726130975,"results":"136","hashOfConfig":"90"},{"size":631,"mtime":1612726130975,"results":"137","hashOfConfig":"90"},{"size":4168,"mtime":1613080069846,"results":"138","hashOfConfig":"90"},{"size":2839,"mtime":1613258021327,"results":"139","hashOfConfig":"90"},{"size":1320,"mtime":1613079734576,"results":"140","hashOfConfig":"90"},{"size":2685,"mtime":1612995307701,"results":"141","hashOfConfig":"90"},{"size":3382,"mtime":1613078955830,"results":"142","hashOfConfig":"90"},{"size":574,"mtime":1612726131071,"results":"143","hashOfConfig":"90"},{"size":3412,"mtime":1612726131057,"results":"144","hashOfConfig":"90"},{"size":1737,"mtime":1613078955829,"results":"145","hashOfConfig":"90"},{"size":5596,"mtime":1613239871100,"results":"146","hashOfConfig":"90"},{"size":627,"mtime":1612726131067,"results":"147","hashOfConfig":"90"},{"size":347,"mtime":1612726131061,"results":"148","hashOfConfig":"90"},{"size":434,"mtime":1612726131103,"results":"149","hashOfConfig":"90"},{"size":853,"mtime":1613080255202,"results":"150","hashOfConfig":"90"},{"size":1188,"mtime":1577324814029,"results":"151","hashOfConfig":"90"},{"size":2429,"mtime":1612726130969,"results":"152","hashOfConfig":"90"},{"size":4429,"mtime":1613235474292,"results":"153","hashOfConfig":"90"},{"size":653,"mtime":1612726131046,"results":"154","hashOfConfig":"90"},{"size":4553,"mtime":1612726131044,"results":"155","hashOfConfig":"90"},{"size":1308,"mtime":1612726131017,"results":"156","hashOfConfig":"90"},{"size":707,"mtime":1612726131022,"results":"157","hashOfConfig":"90"},{"size":1726,"mtime":1612219860188,"results":"158","hashOfConfig":"90"},{"size":3458,"mtime":1613262743777,"results":"159","hashOfConfig":"90"},{"size":1817,"mtime":1613080184881,"results":"160","hashOfConfig":"90"},{"size":3905,"mtime":1612726131041,"results":"161","hashOfConfig":"90"},{"size":7190,"mtime":1613173600906,"results":"162","hashOfConfig":"90"},{"size":2385,"mtime":1612726131007,"results":"163","hashOfConfig":"90"},{"size":2839,"mtime":1613251224140,"results":"164","hashOfConfig":"90"},{"size":1833,"mtime":1612726131004,"results":"165","hashOfConfig":"90"},{"size":11564,"mtime":1613262743762,"results":"166","hashOfConfig":"90"},{"size":1733,"mtime":1613080423390,"results":"167","hashOfConfig":"90"},{"size":2485,"mtime":1613070823204,"results":"168","hashOfConfig":"90"},{"size":8931,"mtime":1613096966447,"results":"169","hashOfConfig":"90"},{"size":5009,"mtime":1613099738325,"results":"170","hashOfConfig":"90"},{"size":2110,"mtime":1613169867074,"results":"171","hashOfConfig":"90"},{"size":2758,"mtime":1613241076497,"results":"172","hashOfConfig":"90"},{"size":3654,"mtime":1613262470582,"results":"173","hashOfConfig":"90"},{"size":379,"mtime":1613174039605,"results":"174","hashOfConfig":"90"},{"size":1275,"mtime":1613177902031,"results":"175","hashOfConfig":"90"},{"size":5395,"mtime":1613258021327,"results":"176","hashOfConfig":"90"},{"size":1523,"mtime":1613239054500,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"127ii91",{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"180"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"180"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"180"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"180"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"180"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"180"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"226"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"180"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"294"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"180"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"180"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"180"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"180"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"180"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"180"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"226"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"180"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"180"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"180"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"180"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"180"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"180"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"180"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"180"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"180"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"180"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"180"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\index.js",[],["402","403"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\App.js",["404"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\AddClothes.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\AuthLoader.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\AdminLogin.js",["405"],"import React, { useContext, useState } from \"react\";\r\nimport authContext from \"../../context/auth/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst AdminLogin = () => {\r\n\r\n  const authContext1 = useContext(authContext);\r\n  const { adminLogin, isAuthenticated, userType, loading, user } = authContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { username, email, password } = formData;\r\n  const _textFieldMinWidth = 350;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    adminLogin(formData);\r\n    // console.log('SUCCESS');\r\n  };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {\r\n    // console.log(isAuthenticated, userType, loading);\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        // backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexrow justify-content-center' \r\n        style={{minHeight:'90vh'}}\r\n      >\r\n        <div \r\n          className='flexcol h-100 justify-content-center'\r\n          style={{minHeight:'90vh'}}\r\n        >\r\n          <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n            <h1 className='text-center mb-2'>Admin Login</h1>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Username'\r\n                label='Username'\r\n                required\r\n                id='userName'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Email'\r\n                label='Email'\r\n                required\r\n                id='email'\r\n                name='email'\r\n                value={email}\r\n                type='email'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>            \r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Enter Password'\r\n                label='Password'\r\n                required\r\n                id='password'\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>             \r\n            <div className='mb-1 mt-1'>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              fullWidth\r\n              type='submit'\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\UserPage.js",["406"],"import React, {useEffect} from 'react'\r\n\r\nconst UserPage = ({match}) => {\r\n  //match.params.userId\r\n  useEffect(() => {\r\n    console.log(match);\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      This is User Page\r\n\r\n      This is Collapsible\r\n      {/* <ul class=\"collapsible\">\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">filter_drama</i>First</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">place</i>Second</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n        <li>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons\">whatshot</i>Third</div>\r\n          <div class=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n        </li>\r\n      </ul> */}\r\n\r\n      \r\n\r\n      <hr />\r\n      <hr />\r\n      <hr />\r\n\r\n\r\n      <table className=\"striped highlight\">\r\n        <thead>\r\n          <tr>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr style={{height: \"15px\"}}>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.8777</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alvin</td>\r\n            <td>Eclair</td>\r\n            <td>$0.87</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Alan</td>\r\n            <td>Jellybean</td>\r\n            <td>$3.76</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jonathan</td>\r\n            <td>Lollipop</td>\r\n            <td>$7.00</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      \r\n\r\n\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPage;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\Home.js",["407","408","409","410","411","412","413","414","415","416","417"],"import React, { useEffect, useContext, Fragment } from 'react'\r\nimport HomeHero from './HomeHero'\r\nimport Services from './services/Services'\r\nimport Spinner from '../../layout/Spinner'\r\nimport publicContext from '../../../context/public/publicContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Home = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    getServicesAndCategories,\r\n    loading\r\n  } = publicContext1\r\n  \r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    getServicesAndCategories();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {/* loading ? <Spinner></Spinner> */}\r\n\r\n      <div>\r\n        {/* {\r\n          !loading && <HomeHero />\r\n        } */}\r\n        <HomeHero />\r\n        <Container\r\n          maxWidth='lg'\r\n          style={{\r\n            backgroundColor:'#ccc',\r\n            minHeight:'90vh'\r\n          }}\r\n        >\r\n          {\r\n            loading \r\n              ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              ) \r\n              : <Services />\r\n          }\r\n          \r\n        </Container>\r\n      </div>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\About.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\login\\CustomerLogin.js",["418"],"import React, { useState, useContext } from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport authContext from '../../context/auth/authContext'\r\nimport alertContext from '../../context/alert/alertContext'\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst CustomerLogin = () => {\r\n  const authContext1 =  useContext(authContext);\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    userLogin, \r\n    userRegister,\r\n    isAuthenticated, \r\n    userType, \r\n    loading, \r\n    user\r\n  } = authContext1\r\n  const { \r\n    setAlert\r\n  } = alertContext1\r\n\r\n  const [ loginMode, setLoginMode ] = useState('login');  // 'login' || 'signup'\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: '',\r\n    personName: '',\r\n    middleName: '',\r\n    tel1: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const { \r\n    username, \r\n    email, \r\n    password, \r\n    // for 'signup'\r\n    confirmPassword,\r\n    personName,\r\n    middleName,\r\n    tel1,\r\n    lastName\r\n  } = formData\r\n\r\n  const _textFieldMinWidth = 350;\r\n\r\n    const onChange = e => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const onSubmit = async e => {\r\n      e.preventDefault();\r\n      if ( loginMode === 'login' ) {\r\n        userLogin(formData);      \r\n      } \r\n      else {  // loginMode === 'signup'\r\n        if ( password !== confirmPassword ) {\r\n          return setAlert('Passwords do not match!', \"error\");          \r\n        }\r\n        userRegister(formData);\r\n      }\r\n    };\r\n\r\n  // Redirect if Authenticated\r\n  if (isAuthenticated && userType === \"user\" && !loading && user) {    \r\n    return <Redirect to='/user-main' />;\r\n  }\r\n\r\n  // Redirect if Authenticated as an Admin\r\n  if (isAuthenticated && userType === \"Admin\" && !loading && user) {    \r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    \r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        // backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexrow justify-content-center' \r\n        style={{minHeight:'90vh'}}\r\n      >\r\n        <div \r\n          className='flexcol h-100 justify-content-center'\r\n          style={{minHeight:'90vh'}}\r\n        >\r\n          <form className='col s12' onSubmit={e => onSubmit(e)}>\r\n            <h1 className='text-center mb-2'>User Login</h1>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Username'\r\n                label='Username'\r\n                required\r\n                id='userName'\r\n                name='username'\r\n                value={username}\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Email'\r\n                label='Email'\r\n                required\r\n                id='email'\r\n                name='email'\r\n                value={email}\r\n                type='email'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>\r\n          \r\n            { loginMode === 'signup' && (\r\n              <>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Name'\r\n                    label='Name'\r\n                    required\r\n                    id='personName'\r\n                    name='personName'\r\n                    value={personName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Middle Name'\r\n                    label='Middle Name'\r\n                    // required\r\n                    id='middleName'\r\n                    name='middleName'\r\n                    value={middleName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Last Name'\r\n                    label='Last Name'\r\n                    required\r\n                    id='lastName'\r\n                    name='lastName'\r\n                    value={lastName}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Telephone'\r\n                    label='Telephone'\r\n                    // required\r\n                    id='tel1'\r\n                    name='tel1'\r\n                    value={tel1}\r\n                    type='text'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>                  \r\n              </>\r\n            )}\r\n            <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n              <TextField\r\n                placeholder='Enter Password'\r\n                label='Password'\r\n                required\r\n                id='password'\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                onChange={e => onChange(e)}\r\n                variant='outlined'\r\n                fullWidth={true}\r\n              />\r\n            </div>         \r\n            {\r\n              loginMode === 'signup' && (              \r\n                <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                  <TextField\r\n                    placeholder='Confirm Password'\r\n                    label='Confirm Password'\r\n                    required\r\n                    id='confirmPassword'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    type='password'\r\n                    onChange={e => onChange(e)}\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n            <div className='mb-1 mt-1'>\r\n              <a href='#'>Forgot Password?</a>\r\n            </div>              \r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              fullWidth\r\n              type='submit'\r\n            >\r\n              { loginMode === 'login' ? 'Login' : 'Register' }                \r\n            </Button>\r\n            <div className=\"flexrow justify-content-space-between pt-4\">         \r\n              <p \r\n                className='mr-4'\r\n                style={{\r\n                  lineHeight:'3.2rem',\r\n                  marginBlockStart:'0',                 \r\n                  marginBlockEnd:'0',                 \r\n                }}\r\n              >\r\n                {\r\n                  loginMode === 'login' && 'Don\\'t have an account?'\r\n                }\r\n                {\r\n                  loginMode === 'signup' && 'Already have an account?'\r\n                }                \r\n              </p>\r\n              {\r\n                loginMode === 'login'\r\n                ? (                  \r\n                  <Button  \r\n                    href='#'\r\n                    style={{\r\n                      // lineHeight:'3.2rem'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('signup');\r\n                    }}\r\n                    color='secondary'\r\n                  >Register</Button>\r\n                  )\r\n                : (\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setLoginMode('login');\r\n                    }}\r\n                    color='secondary'\r\n                  >\r\n                    Login\r\n                  </Button>                      \r\n                )\r\n              }\r\n            </div>\r\n          </form> \r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomerLogin;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\AdminRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\routing\\UserRoute.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\Cart.js",[],["419","420"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersTab.js",["421"],"import React, {useContext, useEffect, } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport OrdersItem from './OrdersItem'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst OrdersTab = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders()\r\n    // eslint-disable-next-line\r\n    loadPayments()\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n          ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          : (\r\n            <div>\r\n              <h2 className='text-center mt-2 mb-1'>Orders</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>\r\n                        Order Date\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>Username</StyledTableCell>\r\n                      <StyledTableCell align='right'>Price</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                <TableBody>\r\n                  {orders ? (\r\n                    orders.length > 0 &&\r\n                    orders.map(order => (\r\n                      <OrdersItem key={order._id} order={order} />\r\n                    ))\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/orders/add'\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            Add Orders\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default OrdersTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminDashboard.js",["422","423","424"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n// import AdminTabs from './TOBEDELETED/AdminTabs'\r\nimport authContext from '../../../context/auth/authContext';\r\nimport adminContext from '../../../context/admin/adminContext';\r\n// Reports\r\nimport TotalCustomers from './reports/TotalCustomers';\r\nimport Payment from './reports/Payment';\r\nimport OrdersProgress from './reports/OrdersProgress';\r\n// Orders Component\r\nimport ActivitiesTabInAdminDashBoard from './ActivitiesTabInAdminDashBoard';\r\n\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst AdminDashboard = ({ match }) => {\r\n\r\n\r\n  // Redirect if not Authenticated\r\n  const authContext1 = useContext(authContext)\r\n  const adminContext1 = useContext(adminContext)\r\n  const {user, isAuthenticated, userType, loading ,  } = authContext1;\r\n  const {loadDashboardReports, loadOrders, orders, getAllUserActivities  } = adminContext1;\r\n  const [ _loading, _setLoading ] = useState(true);\r\n  const [ _loadingUserActivites, _setLoadingUserActivites ] = useState(true);\r\n  // const _cbsetLoadingOrders = () => _setLoadingOrders(false);\r\n  const _cbSetLoadingUserActivites = ( resFromApi ) => {\r\n    if( resFromApi !== null ) {\r\n      _setUserActivites( resFromApi );\r\n    } else {\r\n      _setUserActivites( [] );\r\n    }\r\n    _setLoadingUserActivites(false);\r\n  };\r\n  const [_dashboardInitialReport, _setDashboardInitialReport ] = useState({});\r\n  const [ _userActivities, _setUserActivites ] = useState([]);\r\n\r\n  useEffect( () => {\r\n    loadDashboardReports()\r\n      .then( res => {\r\n        console.log(res);\r\n        _setDashboardInitialReport(res);\r\n        _setLoading(false);\r\n      } );\r\n    \r\n    getAllUserActivities({\r\n      cb: _cbSetLoadingUserActivites\r\n    })\r\n    // loadOrders(_cbsetLoadingOrders);\r\n  }, []);\r\n  // console.log(user, isAuthenticated, userType);\r\n  if( ! loading && (!user || !isAuthenticated || userType !== 'Admin')) {\r\n    return (\r\n      <Redirect to={'/'} />\r\n    )\r\n  }\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    > \r\n      {\r\n        (_loading || _loadingUserActivites )\r\n        ? (\r\n          <div \r\n            className='flexrow justify-content-center'\r\n            style={{\r\n              minHeight: 180,\r\n              paddingTop: 120\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </div>\r\n        )\r\n        : (\r\n          <>\r\n            <div className=\"pt-4\"></div>\r\n            <Grid container spacing={2}>\r\n              <Grid item lg={4} md={6} sm={12} xs={12}>\r\n                <TotalCustomers\r\n                  increaseCount = {_dashboardInitialReport.lastOneMonthCustomerCount}\r\n                  totalCount={_dashboardInitialReport.totalCustomerCount}\r\n                  descriptionText={'Since last month'}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} md={6} sm={12} xs={12}>\r\n                <Payment\r\n                  paymentQuantity={_dashboardInitialReport.paymentTotalInLast30Days}\r\n                  comparisonToOldValues={_dashboardInitialReport.paymentChangePercentage}\r\n                  changeDescription={_dashboardInitialReport.paymentChangeDescriptionText}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} md={6} sm={12} xs={12}>\r\n                <OrdersProgress\r\n                  paymentQuantity='34'\r\n                  ordersInProgressPercentage={_dashboardInitialReport.ordersInProgressPercentage}\r\n                  changeDescription='This is change Desc'\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n              <ActivitiesTabInAdminDashBoard \r\n                activitiesList={_userActivities}\r\n              />\r\n          </>\r\n        )\r\n      }\r\n    \r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default AdminDashboard;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTab.js",["425","426","427","428","429","430","431","432","433","434"],"import React, { useContext, useEffect  } from \"react\";\r\nimport {  NavLink} from 'react-router-dom'\r\n\r\nimport adminContext from \"../../../context/admin/adminContext\";\r\nimport ServicesTable from \"./ServicesTable\";\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst ServicesTab = () => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const { \r\n    loadServices , \r\n    services,\r\n    loading\r\n   } = adminContext1;\r\n\r\n  // productsTab , serviceTab\r\n  // const [ currentSection, setCurrentSection ] = useState('serviceTab') \r\n\r\n  useEffect(() => {\r\n    loadServices();\r\n  }, []);\r\n\r\n  // const addCustomer = () => {\r\n  //   const btn = (\r\n  //     <button data-target='modalCustomer' className='btn modal-trigger' />\r\n  //   );\r\n  //   console.log(\"clicked add customer\");\r\n  // };\r\n\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Services</h2>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                  <ServicesTable services={services} />\r\n                )\r\n          }\r\n        </div>\r\n        <div className='mb-2 mt-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/services/add'\r\n          >\r\n            Add Service\r\n          </Button>\r\n        </div>\r\n      </div> \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServicesTab;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductsTab.js",["435"],"import React, {useContext, useEffect, useState, Fragment } from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport ProductCard from './ProductCard'\r\nimport AddProduct from './AddProduct'\r\nimport Spinner from '../../layout/Spinner'\r\n\r\nconst ProductsTab = () => {\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadProductsWithoutImages , products, loading } = adminContext1;\r\n\r\n  const [addStatus, setAddStatus] = useState(false)\r\n\r\n  useEffect(() => { \r\n    if (products.length === 0)\r\n      // This is a try of turn-around to prevent re-render\r\n      // eslint-disable-next-line\r\n      loadProductsWithoutImages();\r\n      // eslint-disable-next-line\r\n  }, [])\r\n\r\n  \r\n  \r\n  if(loading) return <Spinner></Spinner>\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='row mt-1'>\r\n        {/* Buttons Related with Products */}\r\n        <span>\r\n          {/* <a\r\n            className='waves-effect waves-light btn-small mr-1'\r\n            onClick={e => {\r\n              setCurrentSection(\"productsTab\");\r\n            }}\r\n          >\r\n            <i className='material-icons right'>list</i>Products\r\n          </a> */}\r\n          <a\r\n            className={ addStatus === false ? \r\n              ('waves-effect waves-light blue btn-small') : \r\n              ('waves-effect waves-light red btn-small') \r\n            }\r\n            onClick={e => {\r\n              setAddStatus( !addStatus )\r\n            }}\r\n          >\r\n            { addStatus === false ? (\r\n              <Fragment>\r\n                <i className='material-icons right'>add</i>Product\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <i className='material-icons right'>close</i>Product Add\r\n              </Fragment>\r\n            )}\r\n            \r\n          </a>\r\n        </span>\r\n        {/* End of Buttons Related with Products */}\r\n      </div>\r\n      <AddProduct addStatus={addStatus} />\r\n\r\n      <div className='row'>\r\n        {products.length > 0 &&\r\n          products.map(product => (\r\n            <ProductCard key={product._id} productInfo={product} />\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProductsTab\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["436","437"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesPage.js",["438","439"],"import React, {useContext, useEffect,  useState } from 'react'\r\nimport {  NavLink } from 'react-router-dom'\r\nimport CategoriesItem from './CategoriesItem'\r\n\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst CategoriesPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadCategories,\r\n    categories,\r\n    loading, \r\n  } = adminContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>              \r\n          <div>\r\n            <h2 className='text-center mt-1 mb-1'>Categories</h2>            \r\n          </div>\r\n          {\r\n            loading \r\n              ? (  \r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell>Category Image</StyledTableCell>\r\n                        <StyledTableCell>Category Name</StyledTableCell>\r\n                        <StyledTableCell>Actions</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {categories ? (\r\n                        categories.length > 0 &&\r\n                        categories.map(categoryItem => (\r\n                          <CategoriesItem \r\n                            key={categoryItem._id} \r\n                            categoryItem={categoryItem} \r\n                          />\r\n                        ))\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </TableBody>  \r\n                  </Table>\r\n                </TableContainer>\r\n              )\r\n          } \r\n        </div>\r\n        <div className='mb-2'>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'secondary'  }\r\n            variant='contained'\r\n            to='/dashboard/categories/add'\r\n          >\r\n            Add Category\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CategoriesPage\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\NewOrder.js",["440","441","442","443","444","445","446","447","448"],"import React, { useContext, useState, useEffect, Fragment } from 'react';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport ServiceItemInOrders from './ServiceItemInOrders';\r\nimport alertContext from '../../../context/alert/alertContext';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst NewOrder = ({ match, history }) => {\r\n  // If Edit\r\n  const [orderId, setOrderID ] = useState(match.params.orderId || null);\r\n  const _cbSetOrderId = ( id ) => setOrderID(id);\r\n\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const {\r\n    loadQueriedServices,\r\n    loadServiceStatuses,\r\n    serviceStatuses,\r\n    loadQueriedUsers,\r\n    submitNewOrder,\r\n    loadSingleOrder,\r\n    updateOrder,\r\n    loading\r\n  } = adminContext1;\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    setAlert\r\n  } = alertContext1;\r\n  const [orderData, setOrderData] = useState({\r\n    user: '', // userID => will be SENT TO API\r\n    username: '',  // NOT TO SEND TO API (for UI)\r\n    serviceList: [],\r\n    orderStatus: '',\r\n    orderTotalPrice: 0\r\n  })\r\n\r\n  const [sectionSelection, setSectionSelection] = useState('none')\r\n  const [userObject, setUserObject] = useState( {} );\r\n  const [ queriedUsersList, setQueriedUsersList ] = useState( [] );\r\n  const _cbSetQueriedUsersList = ( arr ) => {\r\n    setQueriedUsersList(arr);\r\n  }\r\n  const [serviceSearchText, setServiceSearchText] = useState('');\r\n  const [ queriedServicesList, setQueriedServicesList ] = useState( [] );\r\n  const _cbSetQueriedServicesList = ( arr ) => {\r\n    setQueriedServicesList(arr);\r\n  }\r\n  \r\n\r\n  // If Edit\r\n  const next = res => {\r\n    if (!res) {\r\n      return history.push('/dashboard/orders')\r\n    }\r\n    setOrderData({\r\n      ...orderData,\r\n      _id: res._id,\r\n      // user: {\r\n      //   _id: res.user._id,\r\n      //   username: res.user.username\r\n      // },\r\n      user: res.user._id,\r\n      username: res.user.username,\r\n      serviceList: res.serviceList.map(item => {\r\n        const mapped = {\r\n          service: item.service._id,      // service id OR productId\r\n          productName: item.service.productName,\r\n          serviceName: item.service.serviceName,\r\n          serviceType: item.service.serviceType,\r\n          unitPrice: item.unitPrice,\r\n          quantity: item.quantity,\r\n          unitServiceStatus: item.unitServiceStatus,\r\n          unitTotalPrice: item.unitTotalPrice\r\n        }\r\n        return mapped\r\n      }),\r\n      orderTotalPrice: res.orderTotalPrice,\r\n      orderStatus: res.orderStatus\r\n    });\r\n    setUserObject({...res.user})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!orderId) {\r\n      loadServiceStatuses()\r\n    }\r\n    // If not a new order, we are editting order\r\n    if (orderId) {\r\n      loadSingleOrder({ orderId, next })\r\n    }\r\n  }, [])\r\n\r\n  const statusList = serviceStatuses.map(status => ({\r\n    servStatus: status.servStatus,\r\n    description: status.description\r\n  }))\r\n\r\n\r\n  const addToOrder = service => {\r\n    const newList = orderData.serviceList;\r\n    const { \r\n      _id,\r\n      serviceName,\r\n      servicePrice,\r\n    } = service;\r\n    // Create a new Order Element\r\n    const newService = new Object({\r\n      service: _id,\r\n      serviceName,\r\n      quantity: 1,\r\n      unitPrice: servicePrice,\r\n      unitServiceStatus: statusList[0].servStatus\r\n    });\r\n    // Check if that service already in order list\r\n    const indexNum = newList.findIndex(item => item.service === newService.service)\r\n    // update List according to existence\r\n    if (indexNum >= 0) {\r\n      newList[indexNum].quantity += 1;\r\n    } else {\r\n      newList.push(newService);\r\n    }\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    orderMutate();  \r\n  }  // End of AddToOrder\r\n\r\n\r\n  // Iterate List, and Set Order Status and Prices\r\n  const orderMutate = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderTotal = 0;\r\n    let orderStatus = \"Ready\";\r\n    newList.map(item => {\r\n      item.unitTotalPrice = item.unitPrice * item.quantity;\r\n      orderTotal += item.unitTotalPrice;\r\n\r\n      if (item.unitServiceStatus !== \"Ready\") {\r\n        orderStatus = \"In Progress\";\r\n      }\r\n    });\r\n\r\n    setOrderData({\r\n      ...orderData,\r\n      orderTotalPrice: orderTotal,\r\n      serviceList: newList,\r\n      orderStatus\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n  // Calculate unit total Price and Order Total Price\r\n  const calculatePrice = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderTotal = 0;\r\n    newList.map(item => {\r\n      item.unitTotalPrice = item.unitPrice * item.quantity\r\n      orderTotal += item.unitTotalPrice\r\n    })\r\n\r\n    setOrderData({\r\n      ...orderData,\r\n      orderTotalPrice: orderTotal,\r\n      serviceList: newList\r\n    });\r\n\r\n  }\r\n\r\n\r\n  const setOrderStatus = () => {\r\n    const newList = orderData.serviceList;\r\n    let orderStatus = 'Ready';\r\n    newList.map(item => {\r\n      if (item.unitServiceStatus !== 'Ready')\r\n        orderStatus = 'In Progress';\r\n    });\r\n    setOrderData({\r\n      ...orderData,\r\n      orderStatus,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // Change Quantity\r\n  const changeQuantity = ({ service, newValue }) => {\r\n    const newList = orderData.serviceList;\r\n    const indexNum = newList.findIndex(item => item.service === service)\r\n    newList[indexNum].quantity = parseInt(newValue)\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    setOrderStatus()\r\n    calculatePrice()\r\n  }  // End of changeQuantity\r\n\r\n\r\n  // Set Service Status\r\n  const setServiceStatus = ({ service, selectValue }) => {\r\n    console.log(selectValue);\r\n    const newList = [...orderData.serviceList];\r\n    const indexNum = newList.findIndex(item => item.service === service);\r\n    newList[indexNum].unitServiceStatus = selectValue;\r\n    setOrderData({\r\n      ...orderData,\r\n      serviceList: newList\r\n    });\r\n    setOrderStatus()\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    if ( !userObject._id ) {\r\n      return setAlert('Please Select Customer', \"error\");   \r\n    }\r\n    if (!orderId) {\r\n      // If New Order\r\n      submitNewOrder({ \r\n        formData: orderData,\r\n        cb: _cbSetOrderId\r\n      });\r\n    } else {\r\n      updateOrder({ formData: orderData, orderId });\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // if (loading) return <Spinner></Spinner>\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"text-center mb-2 mt-2\"> \r\n            <h2>{orderId ? 'Edit Order' : 'Add Order'}</h2>\r\n          </div>  \r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              xs={12}\r\n            >                  \r\n              <div className=\"mb-2\">\r\n                <TextField\r\n                  // id='categoryName'\r\n                  // name='categoryName'\r\n                  value={orderData.username}\r\n                  placeholder='Search User'\r\n                  label='User'\r\n                  InputProps={{\r\n                  startAdornment: (\r\n                      <InputAdornment position='start'>\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  // required={true}\r\n                  fullWidth={true}\r\n                  size='medium'\r\n                  type='search'\r\n                  autoComplete={false}\r\n                  onChange= { e => {\r\n                    setOrderData({\r\n                      ...orderData,\r\n                      user: '',\r\n                      username: e.target.value\r\n                    });\r\n                    setUserObject({});\r\n                    loadQueriedUsers( \r\n                      e.target.value,\r\n                      _cbSetQueriedUsersList\r\n                    );                      \r\n                  }}\r\n                />\r\n                {\r\n                  queriedUsersList.length > 0 && (\r\n                    <TableContainer>\r\n                      <Table>                      \r\n                        <TableRow>\r\n                          <TableCell>Username</TableCell>\r\n                          <TableCell>Name</TableCell>\r\n                          <TableCell>Middle</TableCell>\r\n                          <TableCell>Surname</TableCell>\r\n                          <TableCell>Balance</TableCell>\r\n                        </TableRow>\r\n                        {\r\n                          queriedUsersList.map( userItem => (\r\n                              <TableRow\r\n                                key={userItem._id}\r\n                                onClick= { () => {\r\n                                  const tempUser = userItem;\r\n                                  setUserObject({...tempUser});\r\n                                  setOrderData({\r\n                                    ...orderData,\r\n                                    user: tempUser._id,\r\n                                    username: tempUser.username\r\n                                  });\r\n                                  setQueriedUsersList([]);\r\n                                }}\r\n                              >\r\n                                <TableCell>{userItem.username}</TableCell>\r\n                                <TableCell>{userItem.name}</TableCell>\r\n                                <TableCell>{userItem.middleName}</TableCell>\r\n                                <TableCell>{userItem.surName}</TableCell>\r\n                                <TableCell>{userItem.balance.toFixed(2)}</TableCell>\r\n                              </TableRow>\r\n                            )\r\n                          )\r\n                        }\r\n                      </Table>\r\n                    </TableContainer>\r\n                  )\r\n                }\r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell >Service</StyledTableCell>\r\n                      <StyledTableCell>Price</StyledTableCell>\r\n                      <StyledTableCell align='center'>Quantity</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell align='right' style={{ paddingRight: '1rem' }}>Tot. Price</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <tbody id='services-list'>\r\n                    {orderData.serviceList.map(service => (\r\n                      <ServiceItemInOrders\r\n                        key={service.service}\r\n                        service={service}\r\n                        changeQuantity={changeQuantity}\r\n                        statusList={statusList}\r\n                        setServiceStatus={setServiceStatus}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </TableContainer> \r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"mb-2 mt-3\">\r\n                <TextField\r\n                  // id='categoryName'\r\n                  // name='categoryName'\r\n                  value={serviceSearchText}\r\n                  placeholder='Search for Services'\r\n                  label='Search Service'\r\n                  InputProps={{\r\n                  startAdornment: (\r\n                      <InputAdornment position='start'>\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  // required={true}\r\n                  fullWidth={true}\r\n                  size='medium'\r\n                  type='search'\r\n                  autoComplete={false}\r\n                  onChange= { e => {\r\n                    setServiceSearchText( e.target.value );\r\n                    loadQueriedServices(\r\n                      e.target.value,\r\n                      _cbSetQueriedServicesList\r\n                    );\r\n                  }}\r\n                />\r\n                {\r\n                  queriedServicesList.length > 0 && queriedServicesList.map(  serviceItem => (\r\n                      <TableRow \r\n                        key={serviceItem._id}\r\n                        onClick={ () => {\r\n                          console.log('service Item Click -> serviceItem -> ', serviceItem);\r\n                          addToOrder({...serviceItem});\r\n                          setQueriedServicesList([]);\r\n                          setServiceSearchText('');\r\n                        }}\r\n                      >\r\n                        <TableCell>{serviceItem.serviceName}</TableCell>\r\n                        <TableCell>{serviceItem.servicePrice}</TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  )\r\n                }\r\n              </div>\r\n            </Grid>\r\n          </Grid>        \r\n        </div>\r\n        <div>\r\n          {/* ------------------------------------------------ */}\r\n          <div className='row'>\r\n              {/* <span className=\"col s6 m9\"></span> */}\r\n              \r\n            </div>\r\n            <div className='row'>\r\n              {/* <span className=\"col s6 m9\"></span> */}\r\n            </div>\r\n            {/* <div className='row flexrow justify-content-flex-end'>\r\n              <span className='col s5 m3 l2 '>\r\n              <button\r\n              style={{ marginRight: \"2rem\" }}\r\n              id='order-submit-button'\r\n              className='btn waves-effect waves-light align-items-flex-end'\r\n                  type='button'\r\n                  onClick={e => {\r\n                    handleSubmit();\r\n                  }}\r\n                  >\r\n                  Submit\r\n                  <i className='material-icons right'>send</i>\r\n                  </button>\r\n                  </span>\r\n                </div> */}\r\n            <div className='flexrow justify-content-flex-end'>\r\n              <ul>\r\n                <li className='flexrow justify-content-space-between'>\r\n                  <span>Total</span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      marginRight: \"2rem\",\r\n                      marginLeft: \"2rem\"\r\n                    }}\r\n                  >\r\n                    ${orderData.orderTotalPrice.toFixed(2)}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='flexrow justify-content-flex-end'>\r\n              <ul>\r\n                <li className='flexrow justify-content-space-between'>\r\n                  <span>Order Status: </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      marginRight: \"2rem\",\r\n                      marginLeft: \"2rem\"\r\n                    }}\r\n                  >\r\n                    {orderData.orderStatus}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='mb-2'>\r\n              <Button\r\n                onClick={e => {\r\n                  handleSubmit();\r\n                }}\r\n                color='secondary'\r\n                variant='contained'\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          {/* ------------------------------------------------ */}\r\n        </div>\r\n\r\n      </div>\r\n          \r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewOrder\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\AddService.js",["449","450","451"],"import React, {useContext, useState, Fragment, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst AddService = ({match, history}) => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const {\r\n    loadQueriedCategories,\r\n    addNewService,\r\n    updateService,\r\n    loadSingleService,\r\n    // serviceToBeEditted, \r\n    loading,\r\n    setAdminLoading\r\n  } = adminContext1;\r\n\r\n  const [formData, setFormData] = useState({\r\n    categoryName: '',\r\n    category: null, // categoryId\r\n    image: null,\r\n    serviceName: '',\r\n    servicePrice: \"\",\r\n    featured: false\r\n  });\r\n\r\n  const [ queriedCategoriesList, setQueriedCategoriesList ] = useState([]);\r\n  const _setQueriedCategories = (arr) => {\r\n    setQueriedCategoriesList(arr);\r\n  }\r\n\r\n  const fileSelectedHandler = e => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n      // I couldnt create image file with .png etc extension so, unless we update image file, we will not send API an image.\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0],\r\n        isImageUpdated: true\r\n      });\r\n    } else { // if not an update but ADD NEW SERVICE\r\n      setFormData({\r\n        ...formData,\r\n        image: e.target.files[0]\r\n      });\r\n    }\r\n  };\r\n\r\n  // If Not a New Service, but Editting. Update this form states, by async function at the adminContext loadSingleService method\r\n  const next = res => {\r\n\r\n    if(!res) {\r\n      return history.push('/dashboard/services')\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      categoryName: res.categoryName || \"\",\r\n      category: res.category || null,\r\n      image: res.image || null, // TO BE UPDATED in FUTURE\r\n      serviceName: res.serviceName || \"\",\r\n      servicePrice: res.servicePrice || \"\",\r\n      featured: res.featured || false,\r\n    });\r\n    console.log(formData);\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n    // If Not a New Service, but Editting\r\n    if(match.params.serviceId) {\r\n    // Do smt\r\n      // loadSingleService({serviceId: match.params.serviceId,}).then(res => {\r\n      // updateFormFromBackend(res);\r\n      loadSingleService({serviceId: match.params.serviceId, next})\r\n\r\n        // console.log(formData);\r\n      } else {\r\n        setAdminLoading(false)\r\n      }\r\n  }, [])\r\n  \r\n\r\n\r\n  // const [ productSearch, setProductSearch ] = useState(false)\r\n  const { \r\n    categoryName,\r\n    category,  // categoryId \r\n    servicePrice, \r\n    serviceName,\r\n    featured \r\n  } = formData\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const submitAddorUpdate = e => {\r\n    setFormData({\r\n      ...formData,\r\n      servicePrice: Number.parseFloat(servicePrice).toFixed(2)\r\n    });\r\n    if(match.params.serviceId) {\r\n      updateService({ formData, serviceId: match.params.serviceId });\r\n    } else {\r\n      addNewService({formData});\r\n    }\r\n  }\r\n\r\n  const handleFeaturedOnChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      featured: !featured\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n        \r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <div className=\"text-center mt-2 mb-2\">\r\n            <h2> {match.params.serviceId ? 'Update Service' : 'Add Service'}</h2>\r\n          </div>\r\n          {\r\n            loading \r\n            ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              )\r\n            : (\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid\r\n                  xs={12}\r\n                > \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='serviceName'\r\n                      name='serviceName'\r\n                      value={serviceName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Service Name'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={e => onChange(e)}\r\n                    />\r\n                  </div>                 \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  \r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      id='categoryName'\r\n                      name='categoryName'\r\n                      value={categoryName}\r\n                      placeholder='Enter Service Name'\r\n                      label='Search Categories'\r\n                      InputProps={{\r\n                      startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                      // required={true}\r\n                      fullWidth={true}\r\n                      size='medium'\r\n                      type='text'\r\n                      autoComplete={false}\r\n                      onChange={\r\n                        (e) => {  \r\n                          setFormData({\r\n                            ...formData,\r\n                            category: null,  // reset id if we type\r\n                            categoryName: e.target.value,\r\n                          });      \r\n                          if ( e.target.value.length >= 2 ) {\r\n                            loadQueriedCategories(\r\n                              e.target.value,\r\n                              _setQueriedCategories\r\n                            );\r\n                          }  \r\n                        }\r\n                      }\r\n                    />\r\n                    {\r\n                      queriedCategoriesList && queriedCategoriesList.length > 0 && (\r\n                        <TableContainer>\r\n                          <Table>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Category Name</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {\r\n                                queriedCategoriesList.map(categoryItem => (\r\n                                  <TableRow\r\n                                    key={categoryItem._id}\r\n                                    onClick={() => {\r\n                                      console.log('selected category Id -> ', categoryItem._id);\r\n                                      const tempCategory = categoryItem;\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        category: tempCategory._id,\r\n                                        categoryName: tempCategory.name,\r\n                                      });\r\n                                      setQueriedCategoriesList([]);                    \r\n                                    }}\r\n                                  >\r\n                                    <TableCell>{categoryItem.name}</TableCell>\r\n                                  </TableRow>\r\n                                ))\r\n                              }\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      )\r\n                    }\r\n                  </div>                  \r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className=\"mb-2\">\r\n                    <TextField\r\n                      placeholder='Select Category Image'\r\n                      required={true}\r\n                      fullWidth={true}\r\n                      type='file'\r\n                      autoComplete={false}\r\n                      onChange={e => fileSelectedHandler(e)}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >                  \r\n                  <TextField\r\n                    id='servicePrice'\r\n                    name='servicePrice'\r\n                    value={servicePrice}\r\n                    placeholder='Enter Service Price'\r\n                    label='Service Price'\r\n                    required={true}\r\n                    fullWidth={true}\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  xs={12}\r\n                >\r\n                  <div className='ml-2 mt-2'>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={featured}\r\n                          onChange={ e => handleFeaturedOnChange(e)}\r\n                          name=\"featured\"\r\n                          size='medium'\r\n                        />                  \r\n                      }\r\n                      label='Featured'\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid> \r\n            )\r\n          }\r\n        </div> \r\n\r\n        <div className='mb-2'>\r\n          <Button\r\n            onClick={e => submitAddorUpdate()}\r\n            color='secondary'\r\n            variant='contained'\r\n          >\r\n            {match.params.serviceId ? 'Update Service' : 'Add Service'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddService;\r\n\r\n\r\n\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\AddCategory.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\AddPayment.js",["452","453","454","455","456","457","458","459"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersTab.js",["460"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\PublicState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\AdminState.js",["461"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\UserState.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\UserMain.js",["462","463"],"import React, {useEffect, useContext } from 'react';\r\nimport OrdersItem from './OrdersItem';\r\nimport userContext from '../../../context/user/userContext';\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst UserMain = () => {\r\n  const userContext1 = useContext(userContext)\r\n  const { loadOrders, orders, loading } = userContext1\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    loadOrders();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (    \r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      {\r\n        loading \r\n          ? (\r\n            <div \r\n              className='flexrow justify-content-center'\r\n              style={{\r\n                minHeight: 180,\r\n                paddingTop: 120\r\n              }}\r\n            >\r\n              <CircularProgress />\r\n            </div>\r\n          ) \r\n          : (\r\n            <div>\r\n              <div>\r\n                <h2 \r\n                  className=\"pt-2  pb-2 text-center\" \r\n                >\r\n                  Orders\r\n                </h2>\r\n              </div>\r\n              <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>Order Date</StyledTableCell>\r\n                      <StyledTableCell align='right'>Order Total</StyledTableCell>\r\n                      <StyledTableCell align='center'>Status</StyledTableCell>\r\n                      <StyledTableCell>Actions</StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {\r\n                    orders \r\n                      ? (\r\n                        orders.length > 0 &&\r\n                        orders.map(order => (\r\n                          <OrdersItem key={order._id} order={order} />\r\n                        ))\r\n                      ) \r\n                      : (\r\n                          <></>\r\n                      )\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          )\r\n      }\r\n    </Container>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default  UserMain\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\SingleOrder.js",["464","465","466"],"import React, {Fragment, useContext, useState,  useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userContext from '../../../context/user/userContext'\r\nimport ServiceFormInOrderForm from './ServiceRowInOrderForm'\r\nimport Moment from 'react-moment'\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst SingleOrder = ({match, history}) => {  \r\n  const userContext1 = useContext(userContext)\r\n  const { loadSingleOrder,  loading } = userContext1\r\n\r\n  const [formData, setFormData] = useState( {\r\n    _id: '',\r\n    user: '',\r\n    serviceList: [],\r\n    orderStatus: '',\r\n    orderTotalPrice: '',\r\n    date: ''\r\n  })\r\n\r\n  const next = (singleOrder) => { \r\n    if (!singleOrder) return  history.push(\"/user-main\")\r\n    setFormData({\r\n      _id : singleOrder._id,\r\n      user : singleOrder.user,\r\n      serviceList : singleOrder.serviceList,\r\n      orderStatus : singleOrder.orderStatus,\r\n      orderTotalPrice : singleOrder.orderTotalPrice,\r\n      date : singleOrder.date\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    loadSingleOrder({ _id: match.params._id, next })\r\n  }, [])\r\n  \r\n\r\n  const { _id, user, serviceList, orderStatus, orderTotalPrice, date } = formData;\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div className=\"pt-1\"></div>\r\n      <Button\r\n        component={NavLink}\r\n        to=\"/user-main\"\r\n        startIcon={<ArrowBackIosIcon/>}\r\n        color='primary'\r\n        variant='contained'\r\n      >Orders</Button>\r\n      <div\r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'calc( 90vh - 36px )'\r\n        }}\r\n      >\r\n        {\r\n          loading \r\n            ? (\r\n              <div \r\n                className='flexrow justify-content-center'\r\n                style={{\r\n                  minHeight: 180,\r\n                  paddingTop: 120\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            )            \r\n            : (\r\n              <div>\r\n                <div className=\"mt-2 mb-2\">\r\n                  <h2 className=\"text-center\">Order Information</h2>\r\n                </div>\r\n                <Grid xs={12}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between ml-2'>\r\n                      <span >\r\n                        Order Date:\r\n                        <Moment className='ml-2' format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n                      </span>\r\n                      <span className='mr-3'>Order Status: {orderStatus}</span>\r\n                    </div>\r\n                  </Box>\r\n                </Grid>\r\n                <div className=\"mt-2\"></div>\r\n                <TableContainer component={Paper}>\r\n                  <Table className={classes.table}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell className='service-column pl-2'>Service</StyledTableCell>\r\n                        <StyledTableCell align='right'>Price</StyledTableCell>\r\n                        <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                        <StyledTableCell align='center'>Status</StyledTableCell>\r\n                        <StyledTableCell  align='right'>Tot. Price</StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {serviceList.map(service => (\r\n                        <ServiceFormInOrderForm\r\n                          key={service.service._id}\r\n                          service={service}\r\n                        />\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            ) \r\n            \r\n        }\r\n        { ( loading || orderTotalPrice === '') ? (<Fragment></Fragment>) : (\r\n          <div className='flexrow justify-content-flex-end text-bold mb-2'>\r\n            Sub Total: {parseFloat(orderTotalPrice).toFixed(2)}\r\n          </div>\r\n        )}\r\n      </div>      \r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default SingleOrder\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\HomeHero.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\cart\\CartServiceItem.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminContext.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Orders\\OrdersItem.js",["467","468"],"import React, {useEffect} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport {  withStyles, createMuiTheme, ThemeProvider,  } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst OrdersItem = ({ order }) => {\r\n\r\n  useEffect(() => {\r\n\r\n  }, [order])\r\n\r\n  const {\r\n    _id,\r\n    user,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const _orderStatusCustomTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // Yellow -> '#ffeb3b'  deeporange -> '#e64a19'  amber -> '#ef6c00'\r\n        main: '#ffeb3b',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        contrastText: '#673ab7'  // white -> '#fafafa'\r\n      },      \r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>{user.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell  align='right' size='small'>{orderTotalPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell  align='center' size='small'>\r\n        <ThemeProvider theme={_orderStatusCustomTheme}>\r\n          <Chip \r\n            color={ \r\n              orderStatus === 'In Progress' \r\n                ? 'secondary'\r\n                : 'primary'            \r\n            }\r\n            label={orderStatus}\r\n            size='small'\r\n          />\r\n        </ThemeProvider>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/orders/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\AdminTabs.js",[],["469","470"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServicesTable.js",["471","472","473","474"],"import React, {Fragment, useContext} from 'react'\r\nimport ServiceItemsInRows from './ServiceItemsInRows'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServicesTable = ({services }) => {\r\n  \r\n\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Service Name</StyledTableCell>\r\n              <StyledTableCell>Image</StyledTableCell>\r\n              <StyledTableCell>Category</StyledTableCell>\r\n              <StyledTableCell align='right'>Price</StyledTableCell>\r\n              <StyledTableCell align='center'>Featured</StyledTableCell>\r\n              <StyledTableCell align='center'>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n              {services ? (\r\n                services.map(service => (\r\n                  <ServiceItemsInRows \r\n                    key={service._id} \r\n                    serviceInfo={service} \r\n                  />\r\n                ))\r\n              ) : (\r\n                <Fragment></Fragment>\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Fragment>\r\n      )\r\n  \r\n}\r\n\r\nexport  default ServicesTable\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\ProductCard.js",["475","476"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport M from \"materialize-css\";\r\n\r\nconst ProductCard = ({productInfo}) => {\r\n  const { _id, name } = productInfo\r\n\r\n  const adminContext1 = useContext(adminContext);\r\n  const { updateProduct, deleteProduct } =  adminContext1 ;\r\n\r\n  \r\n\r\n  const [formData, setFormData] = useState({\r\n    image: null,\r\n    name: null\r\n  });\r\n\r\n  useEffect(() => {\r\n// eslint-disable-next-line\r\n    setFormData({...formData, name: productInfo.name })\r\n    // eslint-disable-next-line\r\n    M.AutoInit()\r\n    // eslint-disable-next-line\r\n  }, [productInfo])\r\n\r\n\r\n\r\n  \r\n\r\n  const fileSelectedHandler = (e) => {\r\n    setFormData( {\r\n      ...formData,\r\n      image: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  const updateProductHandler = (e) => {\r\n    e.preventDefault()\r\n    updateProduct({formData, _id})\r\n  }\r\n\r\n  const handleNameChange = e => {\r\n    if (e.target.name === `${_id}name`) {\r\n      setFormData({\r\n        ...formData,\r\n        name: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='col s12 m6 l3'>\r\n      <div className='card sticky-action'>\r\n        <div className='card-image waves-effect waves-block waves-light'>\r\n          <img className='activator' src={`/api/public/products/${_id}`} />\r\n        </div>\r\n        <div className='card-action'>\r\n          <span className='ml-1 mr-1'>{name}</span>\r\n          <span className='card-title activator grey-text text-darken-4'>\r\n            <a class='btn-small waves-effect waves-light right blue'>\r\n              <i class='material-icons small'>edit</i>\r\n            </a>\r\n            {/* <i className='material-icons right'>edit</i> */}\r\n          </span>\r\n          <a\r\n            className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n            href={`#pd-${_id}`}\r\n            // onClick={e => deleteProduct(_id)}\r\n          >\r\n            <i className='material-icons small'>delete</i>\r\n          </a>\r\n          {/* MODAL BEGIN */}\r\n          <div id={`pd-${_id}`} className='modal'>\r\n            <div className='modal-content'>\r\n              <h4>Delete Confirmation</h4>\r\n              <p>Are you sure you want to delete Product?</p>\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <span\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <a\r\n                  href='#!'\r\n                  className='modal-close waves-effect waves-green red btn-small mr-2'\r\n                  style={{ marginRight: \"1rem\" }}\r\n                >\r\n                  Cancel <i className='material-icons small  right'>close</i>\r\n                </a>\r\n                <a\r\n                  href='#!'\r\n                  onClick={e => deleteProduct(_id)}\r\n                  className='modal-close waves-effect waves-green btn-small ml-2'\r\n                >\r\n                  Agree <i className='material-icons small  right'>send</i>\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* MODAL END */}\r\n          {/* <a href='#'>This is a link</a> */}\r\n        </div>\r\n        <div className='card-reveal'>\r\n          <span className='card-title grey-text text-darken-4'>\r\n            <i className='material-icons right'>close</i>\r\n          </span>\r\n          <form onSubmit={e => updateProductHandler(e)}>\r\n            {/* NAME */}\r\n            <div className='row mp-0'>\r\n              <div className='input-field col s6'>\r\n                <input\r\n                  name={`${_id}name`}\r\n                  value={formData.name}\r\n                  id={`${_id}name`}\r\n                  type='text'\r\n                  onChange={e => handleNameChange(e)}\r\n                  className='validate'\r\n                />\r\n                <label className='active' for={`${_id}name`}>\r\n                  Name\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {/* IMAGE */}\r\n            <div className='file-field input-field'>\r\n              <div className='btn'>\r\n                <span>File</span>\r\n                {/* <span>\r\n                  FILE<i class='ns right'>file_upload</i>\r\n                </span> */}\r\n                <input type='file' onChange={e => fileSelectedHandler(e)} />\r\n              </div>\r\n              <div className='file-path-wrapper'>\r\n                <input\r\n                  className='file-path validate'\r\n                  type='text'\r\n                  // onChange={e => fileSelectedHandler()}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className='btn waves-effect waves-light' type='submit'>\r\n              Submit\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Products\\AddProduct.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Categories\\CategoriesItem.js",["477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import React, {useEffect, useState, useContext} from \"react\";\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport Spinner from '../../layout/Spinner';\r\n// import { StyledTableCell, StyledTableRow } from \"../../layout/CustomTable\";\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nconst CategoriesItem = ({ categoryItem }) => {\r\n\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const {\r\n    _id,\r\n    image,\r\n    name,\r\n    date,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = categoryItem;\r\n\r\n  const adminContext1 = useContext(adminContext)\r\n  const { \r\n    loadOrders, \r\n    loadCategories,\r\n    deleteCategory,\r\n    categories,\r\n    orders, \r\n    loading, \r\n    loadPayments, \r\n    payments\r\n  } = adminContext1\r\n\r\n  const _finishDelete = () => {\r\n    setIsDeleting(false);\r\n  }\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n\r\n\r\n  return (\r\n    <StyledTableRow\r\n      key={_id}\r\n    >      \r\n      <StyledTableCell>\r\n        {/* <img src={uint8ArrayToImageSource(image.data)} width='80' /> */}\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={name}\r\n          variant='circular'\r\n          className={classes.large}\r\n          // width='80' \r\n        />\r\n      </StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell >{name}</StyledTableCell>      \r\n      <StyledTableCell>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              // <Spinner></Spinner>\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {/* <Link\r\n                  to={`/dashboard/categories/edit/${_id}`}\r\n                  className='waves-effect waves-light btn-small grey darken-1 '\r\n                >\r\n                  <i className='material-icons small'>edit</i>\r\n                </Link> */}\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red right mr-1'\r\n                  // className='btn-small halfway-fab waves-effect waves-light modal-trigger red  mr-1'\r\n                  // href={`#cd-${_id}`}          \r\n                >\r\n                  {/* <i className='material-icons small'>delete</i> */}\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }\r\n        {/* MODAL BEGIN */}\r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`cd-${_id}-title`}\r\n          aria-describedby={`cd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`cd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`cd-${_id}-description`}>\r\n              Are you sure you want to delete Category?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button \r\n              onClick={_handleClickCloseDeleteModal} \r\n              color='default'\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteCategory(\r\n                  _id, _finishDelete\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default CategoriesItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderServiceItem.js",["491","492"],"import React from 'react'\r\n\r\nconst newServiceItem = ({service, addToOrder}) => {\r\n  const { _id, serviceName,  servicePrice } = service;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{serviceName}</td>\r\n      <td className='right-align'>{`$${servicePrice.toFixed(2)}`}</td>\r\n      <td className='center-align'>\r\n        <a\r\n          onClick={e => addToOrder(service)}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>add</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newServiceItem\r\n",["493","494"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\OrderUserItem.js",["495","496"],"import React from \"react\";\r\n\r\n\r\nconst newUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n  // console.log(object);\r\n\r\n\r\n  return (\r\n    <tr>\r\n      <td>{`${username}`}</td>\r\n      <td>{fullName}</td>\r\n      <td>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='btn-floating small waves-effect waves-light btn-small blue'\r\n        >\r\n          <i className='material-icons small'>check</i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default newUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\OrderForm\\ServiceItemInOrders.js",["497","498","499","500","501","502","503","504","505","506","507","508","509","510","511"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceItemInOrders = ({\r\n  service,  // It is an Object\r\n  changeQuantity,  \r\n  statusList,\r\n  setServiceStatus\r\n}) => {\r\n  \r\n  const {\r\n    serviceName,\r\n    quantity,\r\n    // servicePrice, // after transform unitPrice exists, servicePrice DOESN'T Exist\r\n    unitPrice,\r\n    // eslint-disable-next-line\r\n    unitServiceStatus,\r\n    // eslint-disable-next-line\r\n    unitTotalPrice\r\n  } = service;\r\n  const serviceId = service.service;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStyles = makeStyles( (theme) => ({\r\n    textField: {\r\n      textAlign:'center',\r\n      display:'inline-block'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>{unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        <div \r\n          className='inside-div-input-text-center' \r\n          style={{width: 80, display:'inline-block'}}\r\n        >\r\n          <TextField\r\n            className={classes.textField}\r\n            fullWidth={true}\r\n            value={quantity}\r\n            autoComplete={false}\r\n            onChange={e =>\r\n              changeQuantity({ service: serviceId, newValue: e.target.value })\r\n            }\r\n          />\r\n        </div>\r\n      </StyledTableCell>\r\n\r\n      {/* <td>{\"In Progress\"}</td> */}\r\n      <StyledTableCell align='center'>\r\n        {/* <div className='browser-default ml-2'> */}\r\n          <Select\r\n            value={unitServiceStatus}\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <MenuItem\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                  // selected ={ status1 === status.servStatus && true}\r\n                >\r\n                  {/* BADGES and COLORS are maybe in future, because badge and colors for select are tricky */}\r\n                  {status.servStatus}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {/* <select\r\n            onChange={e =>\r\n              setServiceStatus({\r\n                service: serviceId,\r\n                selectValue: e.target.value\r\n              })\r\n            }\r\n          >\r\n            {statusList.map(status => {\r\n              console.log(status);\r\n              console.log(status.servStatus);\r\n              console.log(status.description);\r\n              return (\r\n                <option\r\n                  key={status.servStatus}\r\n                  value={status.servStatus}\r\n                >\r\n                  \r\n                  {status.servStatus}\r\n                </option>\r\n              );\r\n            })}\r\n          </select> */}\r\n        {/* </div> */}\r\n      </StyledTableCell>\r\n\r\n      <StyledTableCell  align='right' style={{fontWeight:'bold'}}>{unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\n\r\n  // serviceList[\r\n  //   {\r\n  //     service: \"5df55f1fcac13bc2d8220c01\",\r\n  //     productName: \"Pants\",\r\n  //     quantity: 10,\r\n  //     unitPrice: 10,\r\n  //     unitServiceStatus: \"In Progress\",\r\n  //     serviceType: \"Iron\",\r\n  //     servicePrice: 14.05\r\n  //   }\r\n  // ]; \r\n\r\nexport  default ServiceItemInOrders\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\Services.js",["512","513","514"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport publicContext from \"../../../../context/public/publicContext\";\r\nimport SingleCategoryTab from \"./SingleCategoryTab\";\r\nimport CategoriesRow from './CategoriesRow';\r\nconst Services = () => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const {\r\n    publicServices,\r\n    publicCategories\r\n  } = publicContext1;\r\n\r\n  const [publicServicesList, setPublicServicesList] = useState([]);\r\n  const [servicesChoice, setServicesChoice] = useState(publicCategories[0].name);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    setPublicServicesList(publicServices);\r\n    // eslint-disable-next-line\r\n  }, [publicServicesList]);\r\n\r\n  const handleFeaturedClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('featured')    \r\n  }\r\n  const handleDryCleanClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Dry Clean')    \r\n  }\r\n  const handleIronClick = e => {\r\n    e.preventDefault();\r\n    setServicesChoice('Iron')    \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pt-4\"></div>\r\n      <div className='text-center  mb-2'>\r\n        <h2>Categories</h2>\r\n      </div>\r\n\r\n        \r\n      <CategoriesRow \r\n        publicCategories={publicCategories}  \r\n        onClick={setServicesChoice}\r\n        selectedCategoryName= {servicesChoice}\r\n      />\r\n      <div style={{height:'1rem'}}></div>\r\n      <div style={{ margin: \"auto\" }} >\r\n        { <SingleCategoryTab\r\n            serviceList={publicServices.filter(\r\n              serviceItem => serviceItem.categoryName === servicesChoice\r\n            )}\r\n          /> \r\n        }\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Services\r\n\r\n\r\n\r\n// 2019.31.12 00.49 BACK UP\r\n// import React, { useContext, useEffect, useState, Fragment } from \"react\";\r\n// import ServicesItem from './ServicesItem'\r\n// import publicContext from \"../../../../context/public/publicContext\";\r\n\r\n// const Services = () => {\r\n//   const publicContext1 = useContext(publicContext)\r\n//   const {\r\n//     publicServices\r\n//   } = publicContext1\r\n\r\n//   const [publicServicesList, setPublicServicesList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     setPublicServicesList(publicServices);\r\n\r\n\r\n//     console.log(publicServicesList);\r\n//   }, [publicServicesList]);\r\n\r\n\r\n//   return (\r\n//     <div className='center'>\r\n//       <h1>Featured</h1>\r\n//       Featured Services List: {publicServicesList.length}\r\n//       <div className='row'>\r\n\r\n\r\n//         {publicServicesList.map(service => (\r\n//           <ServicesItem\r\n//             key={service._id}\r\n//             service={service}\r\n//           />\r\n//         ))}\r\n\r\n\r\n//       </div>\r\n//       {/* <ServicesItem />\r\n//       <ServicesItem />\r\n//       <ServicesItem /> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Services\r\n\r\n\r\n\r\n\r\n  ","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\singleOrder\\ServiceRowInOrderForm.js",["515","516"],"import React from 'react';\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst ServiceRowInOrderForm = ({service}) => {\r\n  const { quantity, unitPrice, unitServiceStatus, unitTotalPrice } = service;\r\n  const {\r\n    serviceName, \r\n    category // categoryId\r\n  } = service.service;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>{serviceName}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitPrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>{quantity}</StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>{unitServiceStatus}</StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>${unitTotalPrice.toFixed(2)}</StyledTableCell>\r\n    </StyledTableRow>\r\n  )\r\n}\r\nexport default ServiceRowInOrderForm;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\main\\OrdersItem.js",["517","518","519","520","521","522","523","524","525"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst OrdersItem = ({ order }) => {\r\n  useEffect(() => {}, [order]);\r\n\r\n  const {\r\n    _id,\r\n    // eslint-disable-next-line\r\n    user,\r\n    date,\r\n    // eslint-disable-next-line\r\n    serviceList,\r\n    orderStatus,\r\n    orderTotalPrice\r\n  } = order;\r\n\r\n  let calculatedTotalPrice = 0;\r\n  if( !orderTotalPrice ) {\r\n    for( let i = 0; i < serviceList.length; i++ ) {\r\n      calculatedTotalPrice += serviceList[i].unitTotalPrice;  \r\n    }\r\n  }\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='right'>\r\n        {\r\n          orderTotalPrice \r\n            ? orderTotalPrice.toFixed(2)\r\n            : calculatedTotalPrice.toFixed(2)\r\n        }\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small' align='center'>\r\n        <span className='badge red'>{orderStatus}</span>\r\n      </StyledTableCell>\r\n      <StyledTableCell size='small'>\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/user-main/orders/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default OrdersItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\types.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\user\\userReducer.js",["526"],"import {\r\n  USER_ORDER_FORM_SUBMITTED,\r\n  SET_USER_LOADING,\r\n  USER_ORDERS_LOADED\r\n\r\n} from \"../types\";\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case USER_ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case USER_ORDER_FORM_SUBMITTED:\r\n      return {\r\n        ...state,\r\n        orders: [ ...state.orders, payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\admin\\adminReducer.js",["527"],"import {\r\n  // Customers\r\n  CUSTOMERS_LOADED,\r\n  CUSTOMER_DELETED,\r\n  PAYMENTS_LOADED,\r\n  SERVICES_LOADED,\r\n  SINGLE_SERVICE_LOADED,\r\n  SERVICE_STATUSES_LOADED,  \r\n  // Categories\r\n  CATEGORIES_LOADED,\r\n  CATEGORY_ADDED,\r\n  CATEGORY_DELETED,\r\n  // Products\r\n  PRODUCTS_INFO_LOADED,\r\n  PRODUCT_ADDED,\r\n  PRODUCT_UPDATED,\r\n  QUERIED_PRODUCTS_LOADED,\r\n  // Services\r\n  SERVICE_ADDED,\r\n  SERVICE_UPDATED,\r\n  PRODUCT_DELETED,\r\n  SERVICE_DELETED,\r\n  CLEAR_QUERIED_SERVICES,\r\n  // Orders\r\n  ORDERS_LOADED,\r\n  // Users\r\n  CLEAR_QUERIED_USERS,\r\n  SET_ADMIN_LOADING,\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ADMIN_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case PRODUCT_ADDED:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, payload]\r\n      };\r\n    case PRODUCT_DELETED:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.name !== payload.name\r\n        )\r\n      };\r\n    case PRODUCT_UPDATED:\r\n      return {\r\n        ...state,\r\n        products: state.products.map(product =>\r\n          product._id === payload._id ? payload : product\r\n        )\r\n      };\r\n    case CATEGORIES_LOADED:\r\n      return {\r\n        ...state,\r\n        categories: payload\r\n      };\r\n    case CATEGORY_ADDED:\r\n      return {\r\n        ...state,\r\n        categories: [...state.categories, payload]\r\n      };\r\n    case CATEGORY_DELETED:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== payload._id\r\n        )\r\n      };\r\n    case SERVICE_ADDED:\r\n      return {\r\n        ...state,\r\n        services: [...state.services, payload]\r\n      };\r\n    case SERVICE_UPDATED:\r\n      return {\r\n        ...state,\r\n        services: state.services.map(service =>\r\n          service._id === payload._id ? payload : service\r\n        )\r\n      };\r\n    case SERVICE_DELETED:\r\n      return {\r\n        ...state,\r\n        services: state.services.filter(service => service._id !== payload._id)\r\n      };\r\n    case CUSTOMERS_LOADED:\r\n      return {\r\n        ...state,\r\n        customers: payload\r\n      };\r\n    case CUSTOMER_DELETED:\r\n      return {\r\n        ...state,\r\n        customers: state.customers.filter(\r\n          customerItem => customerItem._id !== payload._id\r\n        )\r\n      };\r\n    case ORDERS_LOADED:\r\n      return {\r\n        ...state,\r\n        orders: payload\r\n      };\r\n    case PAYMENTS_LOADED:\r\n      return {\r\n        ...state,\r\n        payments: payload\r\n      };\r\n    case SERVICES_LOADED:\r\n      return {\r\n        ...state,\r\n        services: payload\r\n      };\r\n    case CLEAR_QUERIED_SERVICES:\r\n      return {\r\n        ...state,\r\n        serviceQuery: []\r\n      };\r\n    case SERVICE_STATUSES_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceStatuses: payload\r\n      };\r\n    case SINGLE_SERVICE_LOADED:\r\n      return {\r\n        ...state,\r\n        serviceToBeEditted: payload\r\n      };\r\n    case CLEAR_QUERIED_USERS:\r\n      return {\r\n        ...state,\r\n        userQuery: []\r\n      };\r\n    case PRODUCTS_INFO_LOADED:\r\n      return {\r\n        ...state,\r\n        products: payload\r\n      };\r\n    case QUERIED_PRODUCTS_LOADED:\r\n      return {\r\n        ...state,\r\n        productsQuery: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\auth\\authReducer.js",["528"],"\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  ADMIN_LOADED,\r\n  ADMIN_LOGIN_SUCCESS,\r\n  ADMIN_LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_AUTH_LOADING\r\n} from \"../types\";\r\n\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload.user,\r\n        userType: payload.userType\r\n      };\r\n    case ADMIN_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload.admin,\r\n        userType: payload.userType,\r\n        loading: false\r\n      };\r\n    case USER_LOGIN_SUCCESS:\r\n    case USER_REGISTER_SUCCESS:\r\n    case ADMIN_LOGIN_SUCCESS:\r\n      localStorage.setItem(\r\n        \"auth\",\r\n        JSON.stringify({\r\n          token: payload.token,\r\n          userType: payload.userType\r\n        })\r\n      );\r\n      return {\r\n        ...state,\r\n        token: payload.token,\r\n        userType: payload.userType,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case SET_AUTH_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      }\r\n    case AUTH_ERROR:\r\n    case USER_LOGIN_FAIL:\r\n    case ADMIN_LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"auth\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        userType: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomersItem.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\public\\publicReducer.js",["529"],"import { GET_SERVICES_AND_CATEGORIES, SET_PUBLIC_LOADING, ADD_TO_CART, SET_CART } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_SERVICES_AND_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        publicServices: payload.services,\r\n        publicCategories: payload.categories,\r\n      };\r\n    case SET_PUBLIC_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload\r\n      };\r\n    case ADD_TO_CART:\r\n    case SET_CART:\r\n      return {\r\n        ...state,\r\n        cart: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\context\\alert\\alertReducer.js",["530"],"import { \r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n } from \"../types\";\r\n\r\n\r\n export default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n\r\n }\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\utils\\helpers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentUserItem.js",["531"],"import React from \"react\";\r\nimport {\r\n  TableRow,\r\n  TableCell,  \r\n} from '@material-ui/core';\r\n\r\nconst PaymentUserItem = ({ userInfo, selectUser }) => {\r\n  const { _id, username, name, middleName, surName, balance } = userInfo;\r\n  const fullName = [name, middleName, surName].join(\" \").trim();\r\n\r\n  console.log(userInfo);  \r\n\r\n\r\n  return (\r\n    <TableRow\r\n      onClick={e => selectUser({userInfo})}\r\n    >\r\n      <TableCell>{`${username}`}</TableCell>\r\n      <TableCell>{fullName}</TableCell>\r\n      <TableCell>{balance}</TableCell>\r\n      {/* <TableCell>\r\n        <a\r\n          onClick={e => selectUser({userInfo})}\r\n          className='waves-effect waves-light btn-small red'\r\n        >\r\n          <i className='material-icons right'>check</i>Add\r\n        </a>\r\n      </TableCell> */}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentUserItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ProductRowForAddService.js",["532"],"import React from 'react'\r\n\r\nconst ProductRowForAddService = ({ productInfo, selectProduct }) => {\r\n  const { name, _id } = productInfo;\r\n  return (\r\n    \r\n      <a \r\n        style={{ display: 'flex', alignItems:'center'}}\r\n        className='collection-item avatar'      \r\n        onClick={e => selectProduct({productInfo})}>\r\n        <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n        <span class='title'>{name}</span>\r\n        {/* <p>\r\n\r\n        </p> */}\r\n      </a>\r\n    \r\n  );\r\n};\r\n\r\nexport default ProductRowForAddService\r\n\r\n\r\n\r\n\r\n    // <li class='collection-item avatar'>\r\n    //   <a \r\n    //     className='hoverable'      \r\n    //     onClick={e => selectProduct({productInfo})}>\r\n    //     <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n    //     <span class='title'>{name}</span>\r\n    //     {/* <p>\r\n\r\n    //     </p> */}\r\n    //   </a>\r\n    // </li>\r\n\r\n\r\n      // <img src={`/api/public/products/${_id}`} alt='' class='circle' />\r\n      // <span class='title'>{name}</span>\r\n      // {/* <p>\r\n\r\n      // </p> */}\r\n      // <a href='#!' class='secondary-content'>\r\n      //   <i class='material-icons'>grade</i>\r\n      // </a>\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\AddCustomerModal.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Services\\ServiceItemsInRows.js",["533","534","535","536","537","538","539"],"import React, { useContext, useState} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport { uint8ArrayToImageSource } from \"../../../utils/helpers\";\r\nimport admincontext from '../../../context/admin/adminContext'\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\n\r\n const ServiceItemsInRows = ({serviceInfo}) => {\r\n  const adminContext1 = useContext(admincontext)\r\n  const { deleteService} = adminContext1;\r\n  const { _id, serviceName, category, categoryName, image, servicePrice, featured } = serviceInfo;\r\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\r\n  const _handleClickOpenDeleteModal = () => {\r\n    setIsModalOpen(true);\r\n  }\r\n  const _handleClickCloseDeleteModal = () => {\r\n    setIsModalOpen(false);\r\n  }\r\n  const [ isDeleting, setIsDeleting ] = useState(false);\r\n  const _cbDeleteService = () => setIsDeleting(false);\r\n\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const useStylesAvatar = makeStyles((theme) => ({\r\n    large: {\r\n      width: theme.spacing(9),\r\n      height: theme.spacing(9),\r\n    }\r\n  }));\r\n  const classes = useStylesAvatar();\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>{serviceName}</StyledTableCell>\r\n      <StyledTableCell>\r\n        <Avatar \r\n          src={uint8ArrayToImageSource(image.data)} \r\n          alt={serviceName}\r\n          variant='circular'\r\n          className={classes.large}\r\n        />\r\n      </StyledTableCell>\r\n      <StyledTableCell>{categoryName}</StyledTableCell>\r\n      <StyledTableCell align='right'>{servicePrice.toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {featured && (\r\n          <DoneOutlineIcon />\r\n        )}\r\n      </StyledTableCell>\r\n      <StyledTableCell align='center'>\r\n        {\r\n          isDeleting \r\n          ? (\r\n              <p>Deleting...</p>\r\n            )\r\n          : (\r\n              <>\r\n                <IconButton\r\n                  component={NavLink}\r\n                  to={`/dashboard/services/edit/${_id}`}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={_handleClickOpenDeleteModal}\r\n                  color=\"secondary\"        \r\n                >\r\n                  <DeleteForeverIcon />\r\n                </IconButton>\r\n              </>\r\n          ) \r\n        }        \r\n        <Dialog\r\n          open={isModalOpen}\r\n          onClose= {_handleClickCloseDeleteModal}\r\n          aria-labelledby={`sd-${_id}-title`}\r\n          aria-describedby={`sd-${_id}-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`sd-${_id}-title`}\r\n          >\r\n            Delete Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`sd-${_id}-description`}>\r\n              Are you sure you want to delete Service?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button \r\n              onClick={_handleClickCloseDeleteModal} \r\n              color='default'\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseDeleteModal();\r\n                setIsDeleting(true);\r\n                deleteService(\r\n                  _id,\r\n                  _cbDeleteService\r\n                );\r\n              }}\r\n              color='secondary'\r\n            >Delete</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n        {/* MODAL END */}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n}\r\n\r\nexport default ServiceItemsInRows\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\SingleCategoryTab.js",["540","541"],"import React, { useContext, useEffect } from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport ServicesItem from './ServicesItem'\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nconst SingleCategoryTab = ({\r\n  serviceList\r\n}) => {\r\n  const publicContext1 = useContext(publicContext)\r\n  const { publicServices } = publicContext1 \r\n\r\n\r\n\r\n  return (\r\n      <Grid container space={0}>\r\n        {serviceList && serviceList.map(service => (\r\n          <ServicesItem\r\n            key={service._id}\r\n            service={service}\r\n          />\r\n        ))}\r\n      </Grid>\r\n     \r\n  )\r\n}\r\n\r\nexport default SingleCategoryTab\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\ServicesItem.js",["542","543","544","545"],"import React, {useContext} from 'react'\r\nimport publicContext from '../../../../context/public/publicContext'\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Box\r\n} from '@material-ui/core'\r\n\r\nconst ServicesItem = ({\r\n  service\r\n}) => {\r\n        const publicContext1 = useContext(publicContext);\r\n        const { addToCart } = publicContext1;\r\n\r\n        \r\n        const {\r\n          // eslint-disable-next-line\r\n          _id,\r\n          image,\r\n          serviceName,\r\n          categoryName,\r\n          category,\r\n          servicePrice,\r\n          featured,\r\n        } = service;\r\n\r\n        // return (\r\n        //   <div className='col s6 m4 l3'>\r\n        //     <div className='card '>\r\n        //       <div className='card-image'>\r\n        //         <img\r\n        //           alt={`${serviceName}`}\r\n        //           // src={`/api/public/products/${product}`}\r\n        //           src={uint8ArrayToImageSource(image.data)}\r\n        //         />\r\n        //       </div>\r\n        //       <span className='card-title  grey-text text-darken-4'>\r\n        //         {/* {productName} {serviceType} */}\r\n        //         {serviceName}\r\n        //       </span>\r\n        //       <div className='card-content'>\r\n        //         <div className='flexrow justify-content-flex-end mp-1'>\r\n        //           <p\r\n        //             className='mr-2'\r\n        //             style={{\r\n        //               display: \"block\",\r\n        //               height: \"100%\",\r\n        //               verticalAlign: \"middle\"\r\n        //             }}\r\n        //           >{` $${servicePrice}`}</p>\r\n        //           <a\r\n        //             href='#!'\r\n        //             className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n        //             onClick={e => {\r\n        //               e.preventDefault();\r\n        //               addToCart({ service });\r\n        //             }}\r\n        //           >\r\n        //             <i className='material-icons'>add</i>\r\n        //           </a>\r\n        //         </div>\r\n        //       </div>\r\n              \r\n\r\n             \r\n              \r\n        //     </div>\r\n            \r\n        //   </div>\r\n        // );\r\n        return (\r\n          <Grid xs={12} sm={6}  lg={4}>\r\n            <div \r\n              style={{                \r\n                marginLeft:'0.5rem',\r\n                marginRight: '0.5rem',\r\n              }}\r\n            >\r\n              <Card>\r\n                <CardMedia\r\n                  component='img'\r\n                  alt={`${serviceName}`}\r\n                  title={`${serviceName}`}\r\n                  image={uint8ArrayToImageSource(image.data)}\r\n                />\r\n                <CardContent style={{padding: 0}}>\r\n                  <Box bgcolor='info.main' color='info.contrastText' p={2}>\r\n                    <div className='flexrow justify-content-space-between '>\r\n                      <p className=\"text-bold\">{serviceName}</p>\r\n                      <p className=\"text-bold\">{` $${parseFloat(servicePrice.toString()).toFixed(2)}`}</p>\r\n                    </div>\r\n                  </Box>\r\n                </CardContent>\r\n                  {/* <span className='card-title  grey-text text-darken-4'>\r\n                    {serviceName}\r\n                  </span>\r\n                  <div className='card-content'>\r\n                    <div className='flexrow justify-content-flex-end mp-1'>\r\n                      <p\r\n                        className='mr-2'\r\n                        style={{\r\n                          display: \"block\",\r\n                          height: \"100%\",\r\n                          verticalAlign: \"middle\"\r\n                        }}\r\n                      >{` $${servicePrice}`}</p>\r\n                      <a\r\n                        href='#!'\r\n                        className='btn halfway-fab waves-effect waves-light blue darken-1 ml-2'\r\n                        onClick={e => {\r\n                          e.preventDefault();\r\n                          addToCart({ service });\r\n                        }}\r\n                      >\r\n                        <i className='material-icons'>add</i>\r\n                      </a>\r\n                    </div>\r\n                  </div> */}\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginBottom:'1rem'}}></div>\r\n          </Grid>\r\n              \r\n\r\n             \r\n              \r\n\r\n        );\r\n      }\r\n\r\nexport default ServicesItem","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\ContentBody.js",["546","547"],"import React, {useContext} from 'react';\r\nimport authContext from '../../context/auth/authContext';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst ContentBody = ({children}) =>  {\r\n  const authContext1 =  useContext(authContext);\r\n  const {\r\n    userType, \r\n    user, \r\n    isAuthenticated,\r\n  } = authContext1;\r\n  let desktopPublic =  {\r\n    paddingTop: 47,\r\n    width: '100vw',\r\n    minHeight: '90vh'\r\n  };\r\n  let desktopPrivate =  {\r\n    top: 64,\r\n    // width: 'calc(100vw-180px) !important',\r\n    paddingTop: 47,\r\n    paddingLeft: 180,\r\n    minHeight: '90vh',\r\n    overflow: 'scroll'\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      paddingLeft: 180\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  return (    \r\n    (\r\n      userType === \"Admin\" \r\n      ||  userType === \"user\"\r\n    ) && isAuthenticated\r\n    && user\r\n      ?   (\r\n        <div\r\n          className={classes.content}\r\n          // style={desktopPrivate}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n      : (\r\n        <div\r\n          // style={desktopPublic}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n  );  \r\n}\r\nexport default ContentBody;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\GlobalStyles.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\CustomTable.js",["548"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentsPage.js",["549","550","551"],"import React, {useContext, useEffect } from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport PaymentItem from './PaymentItem';\r\n\r\n\r\nconst PaymentsPage = () => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const { loadOrders, orders, loading, loadPayments, payments} = adminContext1\r\n  \r\n  useEffect(() => {\r\n    loadPayments();\r\n  }, []);\r\n  \r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        minHeight:'90vh'\r\n      }}\r\n      \r\n    >\r\n      <div \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-1 mb-1'>Payments</h2>\r\n          {\r\n            loading \r\n            ? (\r\n                <div \r\n                  className='flexrow justify-content-center'\r\n                  style={{\r\n                    minHeight: 180,\r\n                    paddingTop: 120\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </div>\r\n              )\r\n            : (\r\n                <>\r\n\r\n                  <TableContainer component={Paper}>\r\n                    <Table className={classes.table}>\r\n                      <TableHead>\r\n                          <TableRow>\r\n                          <StyledTableCell>Payment Date</StyledTableCell>\r\n                          <StyledTableCell>Username</StyledTableCell>\r\n                          <StyledTableCell align='right'>Quantity</StyledTableCell>\r\n                          <StyledTableCell align='center'>Actions</StyledTableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {payments ? (\r\n                          payments.length > 0 &&\r\n                          payments.map(payment => (\r\n                            <PaymentItem key={payment._id} payment={payment} />\r\n                          ))\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </>\r\n              )\r\n          }\r\n        </div>\r\n        <div className='mb-2 mt-2'>\r\n          <Button\r\n            component={NavLink}\r\n            to='/dashboard/payments/add-payment'\r\n            size='large'\r\n            color='secondary'\r\n            variant='contained'\r\n          //   style={{\r\n          //   position:'absolute',\r\n          //   bottom: 112,\r\n          //   marginLeft:'1rem',\r\n          //   marginRight:'1rem',\r\n          // }}\r\n          >\r\n            Add Payment\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PaymentsPage;","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\payment\\PaymentItem.js",["552","553","554","555","556","557","558","559","560","561"],"import React, { useEffect } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport {  withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst PaymentItem = ({ payment }) => {\r\n  useEffect(() => {}, [payment]);\r\n\r\n  const { _id, customerId, date, amount } = payment;\r\n\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell>{customerId.username}</StyledTableCell>\r\n      {/* <td>{orderStatus}</td> */}\r\n      <StyledTableCell align='right'>{((-1) * amount).toFixed(2)}</StyledTableCell>\r\n      <StyledTableCell align='center'> \r\n        {/* <a class=\"waves-effect waves-light grey darken-1 btn-small mr-1\">Edit</a> */}\r\n        {/* <Link\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n          className='waves-effect waves-light btn-small grey darken-1 '\r\n        >\r\n          <i className='material-icons small'>edit</i>\r\n        </Link> */}\r\n        <IconButton\r\n          component={NavLink}\r\n          to={`/dashboard/payments/edit/${_id}`}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default PaymentItem;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\public\\home\\services\\CategoriesRow.js",["562"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { uint8ArrayToImageSource } from '../../../../utils/helpers';\r\n\r\nconst images = [\r\n  {\r\n    url: '/static/images/grid-list/breakfast.jpg',\r\n    title: 'Breakfast',\r\n    width: '40%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/burgers.jpg',\r\n    title: 'Burgers',\r\n    width: '30%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/camera.jpg',\r\n    title: 'Camera',\r\n    width: '30%',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageTitleSelected: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n    border: '4px solid currentColor',\r\n    color: 'red'\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function CategoriesRow({\r\n  publicCategories, \r\n  selectedCategoryName,\r\n  onClick\r\n}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {publicCategories.map((categoryItem) => (\r\n        <ButtonBase\r\n          focusRipple\r\n          key={categoryItem._id}\r\n          component={'button'}\r\n          onClick={() => { onClick(categoryItem.name)}}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: 200,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${ \r\n                uint8ArrayToImageSource(categoryItem.image.data)}\r\n              )`\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={\r\n                selectedCategoryName === categoryItem.name \r\n                  ? classes.imageTitleSelected\r\n                  : classes.imageTitle\r\n              }\r\n            >\r\n              {categoryItem.name}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}      \r\n    </div>\r\n  );\r\n}","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\layout\\Navbar\\Navbar.js",["563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n  NavLink,\r\n  withRouter\r\n} from 'react-router-dom';\r\nimport authContext from '../../../context/auth/authContext'\r\n\r\nimport {\r\n  AppBar, \r\n  Drawer,\r\n  Toolbar, \r\n  Button,\r\n  makeStyles,\r\n  // FOR MODAL\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  // End of FOR MODAL\r\n} from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Navbar = ({\r\n  location\r\n}) => {\r\n  const authContext1 = useContext(authContext)\r\n  const { loading, userType, user, isAuthenticated, logout } = authContext1 \r\n  \r\n  let classes;\r\n  const useStyles = makeStyles( () => ({\r\n    mobileDrawer: {\r\n      width: 180\r\n    },\r\n    desktopDrawer: {\r\n      width: 180,\r\n      top: 64,\r\n      backgroundColor:'#777'\r\n    }\r\n  }));\r\n  classes=useStyles();  \r\n  \r\n  const _CustomNavButton = ({content, navPath, onClick, isAppbar = false}) => {\r\n    const _sidebarButtonTheme = createMuiTheme({\r\n      palette: {\r\n        primary: {\r\n          main: '#fafafa',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        },\r\n      }\r\n    });\r\n    if ( isAppbar ) {\r\n      return (\r\n        <ThemeProvider theme={_sidebarButtonTheme}>\r\n          <Button\r\n            component={NavLink}\r\n            color={  'primary'  }\r\n            to={navPath}\r\n            variant= { location.pathname === navPath ? 'outlined' : 'inherit'}\r\n          >\r\n            {content}\r\n          </Button>\r\n        </ThemeProvider>\r\n      );\r\n    }\r\n    if ( onClick ) {\r\n      return (\r\n        <ThemeProvider theme={_sidebarButtonTheme}>\r\n          <Button\r\n            onClick={onClick}\r\n          >\r\n            {content}\r\n          </Button>\r\n        </ThemeProvider>\r\n      );\r\n    }\r\n    return (\r\n      <ThemeProvider theme={_sidebarButtonTheme}>\r\n        <Button\r\n          component={NavLink}\r\n          color={ location.pathname === navPath ? 'secondary' : 'primary'  }\r\n          to={navPath}\r\n        >\r\n          {content}\r\n        </Button>\r\n      </ThemeProvider>\r\n    );\r\n  }  // End of _CustomNavButton\r\n\r\n  const [_isLogoutModalOpen, _setIsLogoutModalOpen] = useState(false);\r\n  const _handleClickOpenLogoutModal = () => {\r\n    _setIsLogoutModalOpen(true);\r\n  }\r\n  const _handleClickCloseLogoutModal = () => {\r\n    _setIsLogoutModalOpen(false);\r\n  }\r\n  const _LogoutModalDialog = () => {    \r\n    return (\r\n      <Dialog\r\n          open={_isLogoutModalOpen}\r\n          onClose= {_handleClickCloseLogoutModal}\r\n          aria-labelledby={`logout-modal-title`}\r\n          aria-describedby={`logout-modal-description`}\r\n        >\r\n          <DialogTitle\r\n            id={`logout-modal-title`}\r\n          >\r\n            Logout Confirmation\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id={`logout-modal-description`}>\r\n              Are you sure you want to Logout?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={_handleClickCloseLogoutModal} color='inherit'>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={() => {\r\n                _handleClickCloseLogoutModal();\r\n                logout();\r\n              }}\r\n              color='secondary'\r\n            >Logout</Button>\r\n          </DialogActions>          \r\n        </Dialog>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n  const adminMenu = () => (\r\n    <> \r\n        <div className='pt-2'></div>\r\n        <_CustomNavButton\r\n          navPath= '/dashboard'\r\n          content='Dashboard'\r\n        />    \r\n        <_CustomNavButton\r\n          navPath= '/dashboard/customers'\r\n          content='Customers'\r\n        />     \r\n        <_CustomNavButton\r\n          navPath= '/dashboard/orders'\r\n          content='Orders'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/payments'\r\n          content='Payments'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/categories'\r\n          content='Categories'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/services'\r\n          content='Services'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/employee-list'\r\n          content='Employee'\r\n        />\r\n        <_CustomNavButton\r\n          navPath= '/dashboard/settings'\r\n          // content={<TuneIcon />}\r\n          content={'Settings'}\r\n        />     \r\n        <_CustomNavButton\r\n          onClick= { _handleClickOpenLogoutModal }\r\n          content={\r\n            <>\r\n              <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Logout</p>\r\n              <ExitToAppIcon color='primary'/>\r\n            </>\r\n          }\r\n        />\r\n        <_LogoutModalDialog/>\r\n    </>\r\n  );  // End of adminMenu \r\n  \r\n  const userMenu = () => (\r\n    <>\r\n      <_CustomNavButton\r\n        navPath= '/user-main'\r\n        content='Orders'\r\n      />  \r\n      <_CustomNavButton\r\n        navPath= '/user-main/account'\r\n        content='Account'\r\n      />  \r\n      <_CustomNavButton\r\n        onClick= { _handleClickOpenLogoutModal }\r\n        content={\r\n          <>\r\n            <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Logout</p>\r\n            <ExitToAppIcon color='primary'/>\r\n          </>\r\n        }\r\n      />\r\n      <_LogoutModalDialog/>\r\n    </>\r\n  )\r\n\r\n  const publicMenu = () => (\r\n    <>      \r\n      <_CustomNavButton\r\n        isAppbar={true}\r\n        navPath={'/user-login'}\r\n        content={\r\n          <>\r\n            <ExitToAppIcon color='primary'/>\r\n            <p style={{color:'#fafafa', marginLeft:'.75rem'}}>Login</p>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );  \r\n \r\n\r\n  return (\r\n    <>      \r\n      {\r\n        (\r\n          userType === \"Admin\" \r\n          ||  userType === \"user\"\r\n        ) && isAuthenticated\r\n        && user && (\r\n          <Drawer\r\n            anchor='left'\r\n            variant='permanent'\r\n            classes={{paper: classes.desktopDrawer}}\r\n          >\r\n              {!loading &&\r\n                userType === \"Admin\" &&\r\n                user &&\r\n                isAuthenticated &&\r\n                adminMenu()}\r\n              {!loading &&\r\n                userType === \"user\" &&\r\n                user &&\r\n                isAuthenticated &&\r\n                userMenu()}  \r\n          </Drawer>\r\n        )\r\n      }        \r\n      <AppBar\r\n        color='secondary'\r\n      >\r\n        <Toolbar>\r\n          <_CustomNavButton\r\n            navPath='/'\r\n            content={<p style={{color:'#fafafa'}}>Home</p>}\r\n            isAppbar={true}\r\n          />\r\n          <_CustomNavButton\r\n            navPath='/about'\r\n            content={<p style={{color:'#fafafa'}}>About</p>}\r\n            isAppbar={true}\r\n          />\r\n          {\r\n            !loading \r\n            && !userType \r\n            && !user\r\n            && !isAuthenticated \r\n            && publicMenu()\r\n          }\r\n        </Toolbar>\r\n      </AppBar>      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\TotalCustomers.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\Payment.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\reports\\OrdersProgress.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\CustomerDetails.js",["581","582"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport adminContext from '../../../../context/admin/adminContext'\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { ActivitiesTable } from './ActivitiesTable';\r\n\r\n\r\n\r\nconst CustomerDetails =   ({match}) => {\r\n  const adminContext1 = useContext(adminContext)\r\n  const {  updateCustomer, addNewCustomer, loadSingleCustomer, loadSingleCustomerActivities } = adminContext1;\r\n  const [ _loading,  _setLoading] = useState(false);\r\n\r\n  const [ _willShowActivities, _setWillShowActivities ] = useState(false);\r\n  const [ _customerActivities, _setCustomerActivities ] = useState( [] );\r\n  const _cbLoadSingleCustomerActivities = ( res ) => {\r\n    console.log('admin/customers/customerDetails -> _cbLoadSingleCustomerActivities -> res -> ', res);\r\n    _setCustomerActivities(res);\r\n  }\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n  name:\"\",\r\n  middleName:\"\",\r\n  surName:\"\",\r\n  username: \"\",\r\n  email:\"\", \r\n  tel1:\"\",\r\n  tel2:\"\", \r\n  address:\"\",\r\n  balance:\"\"\r\n  });\r\n\r\n  const updateFormFromBackend = (res) => {\r\n    let balance;\r\n    if ( res.balance === 0 ) {\r\n      balance= res.balance.toFixed(2);\r\n    } else if (res.balance ) {\r\n      balance = res.balance.toFixed(2);\r\n    } else if ( !res.balance ) {\r\n      balance = res.user.balance.toFixed(2);\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      name: res.name || (res.user && res.user.name ) || \"\",\r\n      middleName: res.middleName ||(res.user && res.user.middleName ) || \"\",\r\n      surName: res.surName || (res.user && res.user.surName ) || \"\",\r\n      username: res.username || (res.user && res.user.username ) || \"\",\r\n      email: res.email || (res.user && res.user.email ) || \"\",\r\n      tel1: res.tel1 || (res.user && res.user.tel1) || \"\",\r\n      tel2: res.tel2 ||  (res.user && res.user.tel2 )|| \"\",\r\n      address: res.address ||  (res.user && res.user.address )|| \"\",\r\n      // balance: res.balance || \"\",\r\n      balance: balance || \"\",\r\n    });\r\n  }\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    // If Edit\r\n    if(match.params.id) {\r\n      _setLoading(true);\r\n      loadSingleCustomer(match.params.id)\r\n        .then(res => {            \r\n          updateFormFromBackend(res);\r\n          _setLoading(false);\r\n        })\r\n    }\r\n  }, []);\r\n\r\n  const {    \r\n    name,\r\n    middleName,\r\n    surName,\r\n    username,\r\n    email,\r\n    tel1,\r\n    tel2,\r\n    address,\r\n    balance,\r\n  } = formData;\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    // If Update\r\n    if (match.params.id) {\r\n      updateCustomer({ formData, id: match.params.id })\r\n        .then(res => {\r\n          updateFormFromBackend(res);\r\n      });\r\n    } else {\r\n\r\n      // If New Customer\r\n      addNewCustomer({\r\n        formData,\r\n        cb: updateFormFromBackend\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>          \r\n          {\r\n            _loading \r\n              ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <div>\r\n                  {match.params.id ? (\r\n                    <h2 className='text-center mt-3 mb-2'>{`${username} Info`}</h2>\r\n                  ) : (\r\n                    <h2 className='text-center mt-3 mb-2'>Add Customer</h2>\r\n                  )}\r\n                  <Grid container spacing={3}>\r\n                    {!match.params.id && (\r\n                      <Grid\r\n                        xs={12}\r\n                      >                  \r\n                        <TextField\r\n                          placeholder='Username'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='username'\r\n                          size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          className='validate'\r\n                          name='username'\r\n                          value={username}\r\n                          onChange={e => onChange(e)}\r\n                          label='User Name'\r\n                        />\r\n                      </Grid>\r\n                    )}\r\n                  \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter name'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='name'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='name'\r\n                          value={name}\r\n                          onChange={e => onChange(e)}\r\n                          label='Name'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Middlename'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='middleName'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='middleName'\r\n                          value={middleName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Middlename'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Surname'\r\n                          fullWidth={true}\r\n                          id='surName'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='surName'\r\n                          value={surName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Surname'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Email'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          disabled={match.params.id ? true : false}\r\n                          id='email'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='email'\r\n                          value={email}\r\n                          onChange={e => onChange(e)}\r\n                          label='Email'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num1'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='tel1'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel1'\r\n                          value={tel1}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel1'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num2'\r\n                          fullWidth={true}\r\n                          id='tel2'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel2'\r\n                          value={tel2}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel2'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          disabled={true}\r\n                          fullWidth={true}\r\n                          id='balance'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='balance'\r\n                          value={`$${balance}`}\r\n                          label='Balance'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          fullWidth={true}\r\n                          id='address'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='address'\r\n                          value={address}\r\n                          onChange={e => onChange(e)}\r\n                          label='Address'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n            )\r\n          }\r\n          {\r\n            _willShowActivities && (\r\n              <>\r\n                <div className='text-center mb-1 mt-4'>\r\n                  <h3>Customer Activities</h3>\r\n                </div>\r\n                <ActivitiesTable\r\n                  activitiesList={_customerActivities}\r\n                />\r\n\r\n              </>\r\n            )\r\n          }\r\n        </div>\r\n        <div className='mb-2 flexrow'>\r\n          <Button\r\n            size='large'\r\n            disabled={_loading}\r\n            variant='contained'\r\n            color='secondary'\r\n            endIcon= {<SendIcon />}\r\n            type='submit'\r\n          >\r\n            {match.params.id ? 'Update User' : 'Create User'}\r\n          </Button>\r\n          <div className=\"ml-1\">\r\n            <Button\r\n              size='large'\r\n              variant='contained'\r\n              color='secondary'\r\n              onClick={() => {\r\n                _setWillShowActivities(true);\r\n                loadSingleCustomerActivities({\r\n                  customerId: match.params.id,\r\n                  cb: _cbLoadSingleCustomerActivities\r\n\r\n                });\r\n              }}\r\n            >\r\n              View Activities\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomerDetails\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTable.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Customers\\CustomerDetails\\ActivitiesTableItem.js",["583","584"],"import React from 'react';\r\nimport{ Link, NavLink } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\nimport {\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  IconButton,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport {  withStyles, createMuiTheme, ThemeProvider,  } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport const ActivitiesTableItem = ({activityItem}) => {\r\n  const {\r\n    _id,\r\n    date,\r\n    activityType,\r\n    amount,\r\n    orderId,\r\n  } = activityItem;\r\n  const StyledTableRow = withStyles( (theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)':{ \r\n        backgroundColor:  theme.palette.action.hover,        \r\n      },\r\n    }\r\n  }))(TableRow);\r\n\r\n  const StyledTableCell = withStyles( theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n\r\n  const _orderTypeCustomTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // Yellow -> '#ffeb3b'  deeporange -> '#e64a19'  amber -> '#ef6c00' green -> '#357a38'\r\n        main: '#357a38',  // you can not write any hex color here. there is a list of colors supported. For further info, look at material ui colors\r\n        contrastText: '#fafafa'  // white -> '#fafafa'\r\n      },      \r\n    }\r\n  });\r\n\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell size='small'>\r\n        <Moment format='YYYY-MM-DD HH:mm'>{date}</Moment>\r\n      </StyledTableCell>\r\n      <StyledTableCell align='center' size='small'>\r\n        <ThemeProvider theme={_orderTypeCustomTheme}>\r\n          <Chip\r\n            label={activityType}\r\n            color={activityType === 'order' ? 'secondary' : 'primary'}\r\n             size='small'\r\n          />\r\n        </ThemeProvider>        \r\n      </StyledTableCell>\r\n      <StyledTableCell align='center' size='small'>\r\n        {\r\n          orderId ? orderId.orderStatus : '-'\r\n        }\r\n      </StyledTableCell>\r\n      <StyledTableCell  align='right' size='small'>\r\n        {(amount * (-1)).toFixed(2)}\r\n      </StyledTableCell>\r\n      <StyledTableCell  align='center' size='small'>\r\n        <IconButton\r\n          component={NavLink}\r\n          to={ activityType === 'order' \r\n            ?  `/dashboard/orders/edit/${orderId._id}`\r\n            : `/dashboard/payments/edit/${_id}`\r\n          }\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n}\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\Account\\AccountUserPage.js",["585","586"],"import React, {useContext, useState, useEffect, } from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport authContext from '../../../context/auth/authContext';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport const AccountUserPage = () => {\r\n  const authContext1 = useContext(authContext)\r\n  const {\r\n    loading,  \r\n    user,\r\n    userUpdateSelfAccount,\r\n  } = authContext1;\r\n  const [formData, setFormData] = useState({\r\n    _id: '',\r\n    name:\"\",\r\n    middleName:\"\",\r\n    surName:\"\",\r\n    username: \"\",\r\n    email:\"\", \r\n    tel1:\"\",\r\n    tel2:\"\", \r\n    address:\"\",\r\n    balance:\"\"\r\n  });\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if( !loading ) {\r\n      setFormData({\r\n        ...user\r\n      })\r\n    }\r\n  }, [loading]);\r\n\r\n  const {  \r\n    _id,  \r\n    name,\r\n    middleName,\r\n    surName,\r\n    username,\r\n    email,\r\n    tel1,\r\n    tel2,\r\n    address,\r\n    balance,\r\n  } = formData;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    userUpdateSelfAccount({\r\n      formData\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>          \r\n          {\r\n            loading \r\n              ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n              : (\r\n                <div>\r\n                  <h2 className='text-center mt-3 mb-2'>Account</h2>\r\n                  <Grid container spacing={3}>\r\n                    <Grid\r\n                      xs={12}\r\n                    >                  \r\n                      <TextField\r\n                        placeholder='Username'\r\n                        disabled={true}\r\n                        fullWidth={true}\r\n                        id='username'\r\n                        size='medium'\r\n                        type='text'\r\n                        autoComplete={false}\r\n                        className='validate'\r\n                        name='username'\r\n                        value={username}\r\n                        label='User Name'\r\n                      />\r\n                    </Grid>                  \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter name'\r\n                          required={true}\r\n                          fullWidth={true}\r\n                          id='name'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='name'\r\n                          value={name}\r\n                          onChange={e => onChange(e)}\r\n                          label='Name'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Middlename'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='middleName'\r\n                          // size='medium'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='middleName'\r\n                          value={middleName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Middlename'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-1'>\r\n                        <TextField\r\n                          placeholder='Enter Surname'\r\n                          fullWidth={true}\r\n                          id='surName'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='surName'\r\n                          value={surName}\r\n                          onChange={e => onChange(e)}\r\n                          label='Surname'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Email'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          disabled={true}\r\n                          id='email'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='email'\r\n                          value={email}\r\n                          label='Email'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num1'\r\n                          // required={true}\r\n                          fullWidth={true}\r\n                          id='tel1'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel1'\r\n                          value={tel1}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel1'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12} md={4}>\r\n                      <div className='mx-1 mt-2'>\r\n                        <TextField\r\n                          placeholder='Enter Phone Num2'\r\n                          fullWidth={true}\r\n                          id='tel2'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='tel2'\r\n                          value={tel2}\r\n                          onChange={e => onChange(e)}\r\n                          label='Tel2'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          disabled={true}\r\n                          fullWidth={true}\r\n                          id='balance'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='balance'\r\n                          value={( balance === undefined || balance === '') ?  '-' : `$${(parseFloat(balance)).toFixed(2)}`}\r\n                          label='Balance'\r\n                        />\r\n                      </div>\r\n                    </Grid>            \r\n                    <Grid  xs={12}>\r\n                      <div className='mt-2'>\r\n                        <TextField\r\n                          fullWidth={true}\r\n                          id='address'\r\n                          type='text'\r\n                          autoComplete={false}\r\n                          name='address'\r\n                          value={address}\r\n                          onChange={e => onChange(e)}\r\n                          label='Address'\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n            )\r\n          }\r\n          \r\n        </div>\r\n        <div className='mb-2 pt-3 flexrow'>\r\n          <Button\r\n            size='large'\r\n            disabled={loading}\r\n            variant='contained'\r\n            color='secondary'\r\n            endIcon= {<SendIcon />}\r\n            type='submit'\r\n          >\r\n            Update\r\n          </Button>\r\n          <div className=\"ml-2\">\r\n            <Button\r\n              size='large'\r\n              component={NavLink}\r\n              disabled={loading}\r\n              variant='contained'\r\n              color='secondary'\r\n              endIcon= {<SendIcon />}\r\n              to={`/user-main/change-password`}\r\n              // type='submit'\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </div>\r\n          \r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\user\\ChangePassword.js",["587"],"import React, {useState, useContext} from 'react';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport authContext from '../../context/auth/authContext';\r\nimport alertContext from '../../context/alert/alertContext';\r\n\r\nexport const ChangePassword = () => {\r\n\r\n  // userUpdateSelfPassword\r\n  const authContext1 = useContext( authContext );\r\n  const {\r\n    loading, \r\n    userUpdateSelfPassword\r\n  } = authContext1;\r\n  const alertContext1 = useContext( alertContext );\r\n  const { \r\n    setAlert\r\n  } = alertContext1;\r\n\r\n  const _textFieldMinWidth = 350;\r\n  const [_isChangingPassword, _setIsChangingPassword ] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: '',\r\n  });\r\n  const {\r\n    currentPassword,\r\n    newPassword,\r\n    confirmNewPassword\r\n  } = formData;\r\n  const onChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  const _cbChangePassword = () => {\r\n    // history.push('/user-main/account');    \r\n    console.log('_cbChangePassword FIRED...');\r\n    setFormData({      \r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmNewPassword: '',  \r\n    });\r\n    _setIsChangingPassword(false);\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    if ( newPassword !== confirmNewPassword ) {\r\n      return setAlert('Passwords do not match!', \"error\");          \r\n    }\r\n    _setIsChangingPassword(true);\r\n    userUpdateSelfPassword({\r\n      formData: {...formData},\r\n      cb: _cbChangePassword\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container\r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}    \r\n    >\r\n      <div \r\n        className='flexrow justify-content-center' \r\n        style={{minHeight:'90vh'}}\r\n      >\r\n        <div \r\n          className='flexcol h-100 justify-content-center'\r\n          style={{minHeight:'90vh'}}\r\n        >\r\n          <form \r\n            className='col s12' \r\n            onSubmit = {onSubmit}\r\n          >\r\n            <div className=\"pt-4\"></div>\r\n            {\r\n              _isChangingPassword \r\n                ? (\r\n                  <div \r\n                    className='flexrow justify-content-center'\r\n                    style={{\r\n                      minHeight: 180,\r\n                      paddingTop: 120\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                )\r\n                : (\r\n                  <>\r\n\r\n                    <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                      <TextField\r\n                        placeholder='Enter Current Password'\r\n                        label='Current Password'\r\n                        required\r\n                        id='currentPassword'\r\n                        name='currentPassword'\r\n                        value={currentPassword}\r\n                        type='password'\r\n                        onChange={e => onChange(e)}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                      />\r\n                    </div> \r\n                    <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                      <TextField\r\n                        placeholder='Enter New Password'\r\n                        label='New Password'\r\n                        required\r\n                        id='newPassword'\r\n                        name='newPassword'\r\n                        value={newPassword}\r\n                        type='password'\r\n                        onChange={e => onChange(e)}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                      />\r\n                    </div> \r\n                    <div className=\"mb-2\" style={{minWidth: _textFieldMinWidth}}>\r\n                      <TextField\r\n                        placeholder='Confirm New Password'\r\n                        label='Confirm Password'\r\n                        required\r\n                        id='confirmNewPassword'\r\n                        name='confirmNewPassword'\r\n                        value={confirmNewPassword}\r\n                        type='password'\r\n                        onChange={e => onChange(e)}\r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )\r\n            }\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              fullWidth\r\n              disabled={_isChangingPassword}\r\n              // type='submit'\r\n              onClick={onSubmit}\r\n            >\r\n              {_isChangingPassword ? 'Please Wait...' : 'Change Password' }\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivitiesTabInAdminDashBoard.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\dashboard\\ActivityItem.js",["588","589","590"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\EmployeeList\\EmployeeListPage.js",["591","592"],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Settings\\SettingsPage.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\EmployeeList\\EmployeeItem.js",[],"C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Employee\\AddEmployeePage.js",["593"],"import React, {useState, useContext} from 'react';\r\nimport {\r\n  Container,\r\n  CircularProgress,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport adminContext from '../../../context/admin/adminContext'\r\nimport alertContext from '../../../context/alert/alertContext'\r\nconst AddEmployeePage = ({match}) => {\r\n  const adminContext1 = useContext(adminContext);\r\n  const {\r\n    addNewEmployee\r\n  } = adminContext1;\r\n  const alertContext1 =  useContext(alertContext);\r\n  const { \r\n    setAlert\r\n  } = alertContext1;\r\n  const _minInputWidth = 450;\r\n  const _maxInputWidth = '90vw';\r\n  const [formData, setFormData] = useState({\r\n  email:\"\",\r\n  username:\"\",\r\n  password:\"\",\r\n  confirmPassword:\"\",\r\n  });  \r\n  const {\r\n    username,\r\n    email,\r\n    password,\r\n    confirmPassword\r\n  } = formData;\r\n\r\n  const onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const _cbAddNewEmployee = (res) => {\r\n    console.log(res);\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( password !== confirmPassword ) {\r\n      return setAlert('Passwords do not match!', \"error\");          \r\n    }\r\n    addNewEmployee({\r\n      formData,\r\n      cb: _cbAddNewEmployee\r\n    });\r\n    // If Update\r\n    console.log('AddEmployeePage -> onSubmit -> FIRED ');\r\n  }\r\n\r\n  return (\r\n    <Container \r\n      maxWidth='lg'\r\n      style={{\r\n        backgroundColor:'#ccc',\r\n        // paddingTop: 64,\r\n        minHeight:'90vh'\r\n      }}\r\n    >\r\n      <form \r\n        className='flexcol justify-content-space-between'\r\n        style={{\r\n          minHeight:'90vh'\r\n        }}\r\n        onSubmit={e => onSubmit(e)}\r\n      >\r\n        <div>\r\n          <h2 className='text-center mt-3 mb-2'>Add Employee</h2>\r\n          <Grid container spacing={3}>\r\n            <Grid xs={12}>\r\n              <div className=\"pt-4 flexrow justify-content-center\">\r\n                <div style={{minWidth: _minInputWidth, maxWidth:_maxInputWidth}}>\r\n                  <TextField\r\n                    placeholder='Username'\r\n                    required={true}\r\n                    fullWidth={true}\r\n                    id='username'\r\n                    size='medium'\r\n                    type='text'\r\n                    autoComplete={false}\r\n                    className='validate'\r\n                    name='username'\r\n                    value={username}\r\n                    onChange={e => onChange(e)}\r\n                    label='User Name'\r\n                  />\r\n                </div>                  \r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"pt-1 flexrow justify-content-center\">\r\n                <div style={{minWidth: _minInputWidth, maxWidth:_maxInputWidth}}>\r\n                  <TextField\r\n                    required={true}\r\n                    fullWidth={true}\r\n                    // size='medium'\r\n                    autoComplete={false}\r\n                    placeholder='Please enter email'\r\n                    label='Email'\r\n                    id='email'\r\n                    name='email'\r\n                    value={email}\r\n                    type='email'\r\n                    onChange={e => onChange(e)}\r\n                  />\r\n                </div>                  \r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"pt-1 flexrow justify-content-center\">\r\n                  <div style={{minWidth: _minInputWidth, maxWidth:_maxInputWidth}}>\r\n\r\n                    <TextField\r\n                      placeholder='Enter Password'\r\n                      label='Password'\r\n                      required\r\n                      id='password'\r\n                      name='password'\r\n                      value={password}\r\n                      type='password'\r\n                      onChange={e => onChange(e)}\r\n                      // variant='outlined'\r\n                      fullWidth={true}\r\n                    />\r\n                  </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"pt-1 flexrow justify-content-center\">\r\n                <div style={{minWidth: _minInputWidth, maxWidth:_maxInputWidth}}>\r\n                  <TextField\r\n                    placeholder='Confirm Password'\r\n                    label='Confirm Password'\r\n                    required\r\n                    id='confirmPassword'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    type='password'\r\n                    onChange={e => onChange(e)}\r\n                    // variant='outlined'\r\n                    fullWidth={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <div className=\"pt-4 flexrow justify-content-center\">\r\n                <div style={{minWidth: _minInputWidth, maxWidth:_maxInputWidth}}>\r\n                  <Button\r\n                    color='secondary'\r\n                    fullWidth={true}\r\n                    variant='contained'\r\n                    type='submit'\r\n                  >\r\n                    ADD EMPLOYEE\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport  default AddEmployeePage;\r\n","C:\\Users\\Emrah\\repos\\dry-cleaner-shop\\client\\src\\components\\Admin\\Employee\\EditEmployeePage.js",["594","595","596"],{"ruleId":"597","replacedBy":"598"},{"ruleId":"599","replacedBy":"600"},{"ruleId":"601","severity":1,"message":"602","line":98,"column":9,"nodeType":"603","messageId":"604","endLine":98,"endColumn":16},{"ruleId":"605","severity":1,"message":"606","line":102,"column":15,"nodeType":"607","endLine":102,"endColumn":27},{"ruleId":"608","severity":1,"message":"609","line":7,"column":6,"nodeType":"610","endLine":7,"endColumn":8,"suggestions":"611"},{"ruleId":"601","severity":1,"message":"612","line":4,"column":8,"nodeType":"603","messageId":"604","endLine":4,"endColumn":15},{"ruleId":"601","severity":1,"message":"613","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":9},{"ruleId":"601","severity":1,"message":"614","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":12},{"ruleId":"601","severity":1,"message":"618","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":11},{"ruleId":"601","severity":1,"message":"619","line":15,"column":3,"nodeType":"603","messageId":"604","endLine":15,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":8},{"ruleId":"601","severity":1,"message":"621","line":18,"column":11,"nodeType":"603","messageId":"604","endLine":18,"endColumn":21},{"ruleId":"601","severity":1,"message":"622","line":18,"column":23,"nodeType":"603","messageId":"604","endLine":18,"endColumn":33},{"ruleId":"605","severity":1,"message":"606","line":222,"column":15,"nodeType":"607","endLine":222,"endColumn":27},{"ruleId":"597","replacedBy":"623"},{"ruleId":"599","replacedBy":"624"},{"ruleId":"601","severity":1,"message":"625","line":21,"column":54,"nodeType":"603","messageId":"604","endLine":21,"endColumn":62},{"ruleId":"601","severity":1,"message":"626","line":28,"column":32,"nodeType":"603","messageId":"604","endLine":28,"endColumn":42},{"ruleId":"601","severity":1,"message":"627","line":28,"column":44,"nodeType":"603","messageId":"604","endLine":28,"endColumn":50},{"ruleId":"608","severity":1,"message":"628","line":55,"column":6,"nodeType":"610","endLine":55,"endColumn":8,"suggestions":"629"},{"ruleId":"601","severity":1,"message":"614","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":12},{"ruleId":"601","severity":1,"message":"618","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":11},{"ruleId":"601","severity":1,"message":"619","line":15,"column":3,"nodeType":"603","messageId":"604","endLine":15,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":8},{"ruleId":"601","severity":1,"message":"621","line":18,"column":11,"nodeType":"603","messageId":"604","endLine":18,"endColumn":21},{"ruleId":"601","severity":1,"message":"622","line":18,"column":23,"nodeType":"603","messageId":"604","endLine":18,"endColumn":33},{"ruleId":"608","severity":1,"message":"630","line":34,"column":6,"nodeType":"610","endLine":34,"endColumn":8,"suggestions":"631"},{"ruleId":"605","severity":1,"message":"632","line":39,"column":11,"nodeType":"607","endLine":47,"endColumn":12},{"ruleId":"597","replacedBy":"633"},{"ruleId":"599","replacedBy":"634"},{"ruleId":"601","severity":1,"message":"635","line":1,"column":40,"nodeType":"603","messageId":"604","endLine":1,"endColumn":48},{"ruleId":"608","severity":1,"message":"636","line":33,"column":6,"nodeType":"610","endLine":33,"endColumn":8,"suggestions":"637"},{"ruleId":"601","severity":1,"message":"638","line":1,"column":50,"nodeType":"603","messageId":"604","endLine":1,"endColumn":58},{"ruleId":"601","severity":1,"message":"639","line":37,"column":5,"nodeType":"603","messageId":"604","endLine":37,"endColumn":12},{"ruleId":"601","severity":1,"message":"640","line":51,"column":10,"nodeType":"603","messageId":"604","endLine":51,"endColumn":26},{"ruleId":"601","severity":1,"message":"641","line":51,"column":28,"nodeType":"603","messageId":"604","endLine":51,"endColumn":47},{"ruleId":"608","severity":1,"message":"642","line":105,"column":6,"nodeType":"610","endLine":105,"endColumn":8,"suggestions":"643"},{"ruleId":"644","severity":1,"message":"645","line":121,"column":24,"nodeType":"646","messageId":"647","endLine":127,"endColumn":7},{"ruleId":"648","severity":1,"message":"649","line":149,"column":22,"nodeType":"650","messageId":"651","endLine":149,"endColumn":24},{"ruleId":"648","severity":1,"message":"649","line":173,"column":22,"nodeType":"650","messageId":"651","endLine":173,"endColumn":24},{"ruleId":"648","severity":1,"message":"649","line":190,"column":22,"nodeType":"650","messageId":"651","endLine":190,"endColumn":24},{"ruleId":"601","severity":1,"message":"638","line":1,"column":38,"nodeType":"603","messageId":"604","endLine":1,"endColumn":46},{"ruleId":"608","severity":1,"message":"652","line":95,"column":6,"nodeType":"610","endLine":95,"endColumn":8,"suggestions":"653"},{"ruleId":"601","severity":1,"message":"654","line":102,"column":5,"nodeType":"603","messageId":"604","endLine":102,"endColumn":13},{"ruleId":"601","severity":1,"message":"655","line":21,"column":22,"nodeType":"603","messageId":"604","endLine":21,"endColumn":35},{"ruleId":"601","severity":1,"message":"656","line":26,"column":5,"nodeType":"603","messageId":"604","endLine":26,"endColumn":14},{"ruleId":"601","severity":1,"message":"657","line":27,"column":5,"nodeType":"603","messageId":"604","endLine":27,"endColumn":19},{"ruleId":"601","severity":1,"message":"658","line":55,"column":7,"nodeType":"603","messageId":"604","endLine":55,"endColumn":11},{"ruleId":"608","severity":1,"message":"659","line":75,"column":6,"nodeType":"610","endLine":75,"endColumn":8,"suggestions":"660"},{"ruleId":"601","severity":1,"message":"661","line":162,"column":11,"nodeType":"603","messageId":"604","endLine":162,"endColumn":19},{"ruleId":"601","severity":1,"message":"662","line":162,"column":21,"nodeType":"603","messageId":"604","endLine":162,"endColumn":29},{"ruleId":"601","severity":1,"message":"663","line":162,"column":31,"nodeType":"603","messageId":"604","endLine":162,"endColumn":38},{"ruleId":"608","severity":1,"message":"664","line":28,"column":6,"nodeType":"610","endLine":28,"endColumn":8,"suggestions":"665"},{"ruleId":"601","severity":1,"message":"666","line":983,"column":27,"nodeType":"603","messageId":"604","endLine":983,"endColumn":34},{"ruleId":"601","severity":1,"message":"667","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":12},{"ruleId":"601","severity":1,"message":"613","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":9},{"ruleId":"608","severity":1,"message":"668","line":50,"column":6,"nodeType":"610","endLine":50,"endColumn":8,"suggestions":"669"},{"ruleId":"601","severity":1,"message":"670","line":53,"column":11,"nodeType":"603","messageId":"604","endLine":53,"endColumn":14},{"ruleId":"601","severity":1,"message":"671","line":53,"column":16,"nodeType":"603","messageId":"604","endLine":53,"endColumn":20},{"ruleId":"601","severity":1,"message":"672","line":2,"column":9,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"620","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":8},{"ruleId":"597","replacedBy":"673"},{"ruleId":"599","replacedBy":"674"},{"ruleId":"601","severity":1,"message":"675","line":1,"column":26,"nodeType":"603","messageId":"604","endLine":1,"endColumn":36},{"ruleId":"601","severity":1,"message":"676","line":4,"column":3,"nodeType":"603","messageId":"604","endLine":4,"endColumn":12},{"ruleId":"601","severity":1,"message":"677","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":19},{"ruleId":"601","severity":1,"message":"613","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":9},{"ruleId":"678","severity":1,"message":"679","line":57,"column":11,"nodeType":"607","endLine":57,"endColumn":76},{"ruleId":"605","severity":1,"message":"632","line":62,"column":13,"nodeType":"607","endLine":62,"endColumn":70},{"ruleId":"601","severity":1,"message":"680","line":1,"column":16,"nodeType":"603","messageId":"604","endLine":1,"endColumn":25},{"ruleId":"601","severity":1,"message":"672","line":2,"column":9,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"681","line":3,"column":8,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"601","severity":1,"message":"612","line":6,"column":8,"nodeType":"603","messageId":"604","endLine":6,"endColumn":15},{"ruleId":"601","severity":1,"message":"658","line":37,"column":5,"nodeType":"603","messageId":"604","endLine":37,"endColumn":9},{"ruleId":"601","severity":1,"message":"682","line":38,"column":5,"nodeType":"603","messageId":"604","endLine":38,"endColumn":16},{"ruleId":"601","severity":1,"message":"683","line":39,"column":5,"nodeType":"603","messageId":"604","endLine":39,"endColumn":20},{"ruleId":"601","severity":1,"message":"626","line":44,"column":5,"nodeType":"603","messageId":"604","endLine":44,"endColumn":15},{"ruleId":"601","severity":1,"message":"684","line":45,"column":5,"nodeType":"603","messageId":"604","endLine":45,"endColumn":19},{"ruleId":"601","severity":1,"message":"685","line":47,"column":5,"nodeType":"603","messageId":"604","endLine":47,"endColumn":15},{"ruleId":"601","severity":1,"message":"627","line":48,"column":5,"nodeType":"603","messageId":"604","endLine":48,"endColumn":11},{"ruleId":"601","severity":1,"message":"639","line":49,"column":5,"nodeType":"603","messageId":"604","endLine":49,"endColumn":12},{"ruleId":"601","severity":1,"message":"686","line":50,"column":5,"nodeType":"603","messageId":"604","endLine":50,"endColumn":17},{"ruleId":"601","severity":1,"message":"625","line":51,"column":5,"nodeType":"603","messageId":"604","endLine":51,"endColumn":13},{"ruleId":"601","severity":1,"message":"670","line":4,"column":11,"nodeType":"603","messageId":"604","endLine":4,"endColumn":14},{"ruleId":"605","severity":1,"message":"632","line":11,"column":9,"nodeType":"607","endLine":14,"endColumn":10},{"ruleId":"597","replacedBy":"687"},{"ruleId":"599","replacedBy":"688"},{"ruleId":"601","severity":1,"message":"670","line":5,"column":11,"nodeType":"603","messageId":"604","endLine":5,"endColumn":14},{"ruleId":"605","severity":1,"message":"632","line":15,"column":9,"nodeType":"607","endLine":18,"endColumn":10},{"ruleId":"601","severity":1,"message":"680","line":1,"column":16,"nodeType":"603","messageId":"604","endLine":1,"endColumn":25},{"ruleId":"601","severity":1,"message":"635","line":1,"column":27,"nodeType":"603","messageId":"604","endLine":1,"endColumn":35},{"ruleId":"601","severity":1,"message":"614","line":3,"column":3,"nodeType":"603","messageId":"604","endLine":3,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":4,"column":3,"nodeType":"603","messageId":"604","endLine":4,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":12,"column":3,"nodeType":"603","messageId":"604","endLine":12,"endColumn":8},{"ruleId":"601","severity":1,"message":"613","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":9},{"ruleId":"601","severity":1,"message":"689","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":13},{"ruleId":"601","severity":1,"message":"690","line":15,"column":3,"nodeType":"603","messageId":"604","endLine":15,"endColumn":9},{"ruleId":"601","severity":1,"message":"691","line":16,"column":3,"nodeType":"603","messageId":"604","endLine":16,"endColumn":14},{"ruleId":"601","severity":1,"message":"692","line":17,"column":3,"nodeType":"603","messageId":"604","endLine":17,"endColumn":16},{"ruleId":"601","severity":1,"message":"693","line":18,"column":3,"nodeType":"603","messageId":"604","endLine":18,"endColumn":20},{"ruleId":"601","severity":1,"message":"694","line":19,"column":3,"nodeType":"603","messageId":"604","endLine":19,"endColumn":16},{"ruleId":"601","severity":1,"message":"695","line":20,"column":3,"nodeType":"603","messageId":"604","endLine":20,"endColumn":9},{"ruleId":"601","severity":1,"message":"696","line":22,"column":9,"nodeType":"603","messageId":"604","endLine":22,"endColumn":28},{"ruleId":"601","severity":1,"message":"697","line":26,"column":9,"nodeType":"603","messageId":"604","endLine":26,"endColumn":28},{"ruleId":"601","severity":1,"message":"698","line":30,"column":9,"nodeType":"603","messageId":"604","endLine":30,"endColumn":24},{"ruleId":"601","severity":1,"message":"622","line":6,"column":23,"nodeType":"603","messageId":"604","endLine":6,"endColumn":33},{"ruleId":"601","severity":1,"message":"654","line":12,"column":5,"nodeType":"603","messageId":"604","endLine":12,"endColumn":13},{"ruleId":"601","severity":1,"message":"676","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":12},{"ruleId":"601","severity":1,"message":"667","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":12},{"ruleId":"601","severity":1,"message":"613","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":9},{"ruleId":"601","severity":1,"message":"614","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":8},{"ruleId":"601","severity":1,"message":"622","line":17,"column":23,"nodeType":"603","messageId":"604","endLine":17,"endColumn":33},{"ruleId":"699","severity":1,"message":"700","line":9,"column":1,"nodeType":"701","endLine":31,"endColumn":3},{"ruleId":"699","severity":1,"message":"700","line":34,"column":1,"nodeType":"701","endLine":156,"endColumn":3},{"ruleId":"699","severity":1,"message":"700","line":18,"column":1,"nodeType":"701","endLine":78,"endColumn":2},{"ruleId":"699","severity":1,"message":"700","line":3,"column":1,"nodeType":"701","endLine":27,"endColumn":3},{"ruleId":"699","severity":1,"message":"700","line":7,"column":2,"nodeType":"701","endLine":19,"endColumn":3},{"ruleId":"601","severity":1,"message":"670","line":8,"column":11,"nodeType":"603","messageId":"604","endLine":8,"endColumn":14},{"ruleId":"605","severity":1,"message":"632","line":7,"column":7,"nodeType":"607","endLine":10,"endColumn":53},{"ruleId":"601","severity":1,"message":"672","line":2,"column":9,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"614","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":13,"column":3,"nodeType":"603","messageId":"604","endLine":13,"endColumn":8},{"ruleId":"601","severity":1,"message":"654","line":31,"column":29,"nodeType":"603","messageId":"604","endLine":31,"endColumn":37},{"ruleId":"601","severity":1,"message":"680","line":1,"column":29,"nodeType":"603","messageId":"604","endLine":1,"endColumn":38},{"ruleId":"601","severity":1,"message":"702","line":12,"column":11,"nodeType":"603","messageId":"604","endLine":12,"endColumn":25},{"ruleId":"601","severity":1,"message":"703","line":16,"column":17,"nodeType":"603","messageId":"604","endLine":16,"endColumn":26},{"ruleId":"601","severity":1,"message":"704","line":24,"column":11,"nodeType":"603","messageId":"604","endLine":24,"endColumn":23},{"ruleId":"601","severity":1,"message":"654","line":25,"column":11,"nodeType":"603","messageId":"604","endLine":25,"endColumn":19},{"ruleId":"601","severity":1,"message":"705","line":27,"column":11,"nodeType":"603","messageId":"604","endLine":27,"endColumn":19},{"ruleId":"601","severity":1,"message":"706","line":13,"column":7,"nodeType":"603","messageId":"604","endLine":13,"endColumn":20},{"ruleId":"601","severity":1,"message":"707","line":18,"column":7,"nodeType":"603","messageId":"604","endLine":18,"endColumn":21},{"ruleId":"601","severity":1,"message":"708","line":55,"column":7,"nodeType":"603","messageId":"604","endLine":55,"endColumn":19},{"ruleId":"601","severity":1,"message":"626","line":22,"column":11,"nodeType":"603","messageId":"604","endLine":22,"endColumn":21},{"ruleId":"601","severity":1,"message":"627","line":22,"column":23,"nodeType":"603","messageId":"604","endLine":22,"endColumn":29},{"ruleId":"608","severity":1,"message":"709","line":26,"column":6,"nodeType":"610","endLine":26,"endColumn":8,"suggestions":"710"},{"ruleId":"601","severity":1,"message":"672","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":14},{"ruleId":"601","severity":1,"message":"676","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":12},{"ruleId":"601","severity":1,"message":"667","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":12},{"ruleId":"601","severity":1,"message":"613","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":9},{"ruleId":"601","severity":1,"message":"614","line":8,"column":3,"nodeType":"603","messageId":"604","endLine":8,"endColumn":17},{"ruleId":"601","severity":1,"message":"615","line":9,"column":3,"nodeType":"603","messageId":"604","endLine":9,"endColumn":8},{"ruleId":"601","severity":1,"message":"616","line":10,"column":3,"nodeType":"603","messageId":"604","endLine":10,"endColumn":12},{"ruleId":"601","severity":1,"message":"617","line":11,"column":3,"nodeType":"603","messageId":"604","endLine":11,"endColumn":12},{"ruleId":"601","severity":1,"message":"620","line":14,"column":3,"nodeType":"603","messageId":"604","endLine":14,"endColumn":8},{"ruleId":"601","severity":1,"message":"622","line":17,"column":23,"nodeType":"603","messageId":"604","endLine":17,"endColumn":33},{"ruleId":"601","severity":1,"message":"711","line":7,"column":7,"nodeType":"603","messageId":"604","endLine":7,"endColumn":13},{"ruleId":"601","severity":1,"message":"712","line":24,"column":8,"nodeType":"603","messageId":"604","endLine":24,"endColumn":16},{"ruleId":"713","severity":1,"message":"714","line":138,"column":9,"nodeType":"607","endLine":141,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":142,"column":9,"nodeType":"607","endLine":145,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":146,"column":9,"nodeType":"607","endLine":149,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":150,"column":9,"nodeType":"607","endLine":153,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":154,"column":9,"nodeType":"607","endLine":157,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":158,"column":9,"nodeType":"607","endLine":161,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":162,"column":9,"nodeType":"607","endLine":165,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":166,"column":9,"nodeType":"607","endLine":170,"endColumn":11},{"ruleId":"713","severity":1,"message":"714","line":171,"column":9,"nodeType":"607","endLine":179,"endColumn":11},{"ruleId":"713","severity":1,"message":"715","line":180,"column":9,"nodeType":"607","endLine":180,"endColumn":30},{"ruleId":"713","severity":1,"message":"714","line":186,"column":7,"nodeType":"607","endLine":189,"endColumn":9},{"ruleId":"713","severity":1,"message":"714","line":190,"column":7,"nodeType":"607","endLine":193,"endColumn":9},{"ruleId":"713","severity":1,"message":"714","line":194,"column":7,"nodeType":"607","endLine":202,"endColumn":9},{"ruleId":"713","severity":1,"message":"715","line":203,"column":7,"nodeType":"607","endLine":203,"endColumn":28},{"ruleId":"713","severity":1,"message":"714","line":209,"column":7,"nodeType":"607","endLine":218,"endColumn":9},{"ruleId":"713","severity":1,"message":"714","line":253,"column":11,"nodeType":"607","endLine":257,"endColumn":13},{"ruleId":"713","severity":1,"message":"714","line":258,"column":11,"nodeType":"607","endLine":262,"endColumn":13},{"ruleId":"601","severity":1,"message":"716","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":14},{"ruleId":"608","severity":1,"message":"717","line":77,"column":6,"nodeType":"610","endLine":77,"endColumn":8,"suggestions":"718"},{"ruleId":"601","severity":1,"message":"672","line":2,"column":9,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"620","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":8},{"ruleId":"608","severity":1,"message":"719","line":42,"column":6,"nodeType":"610","endLine":42,"endColumn":15,"suggestions":"720"},{"ruleId":"601","severity":1,"message":"670","line":45,"column":5,"nodeType":"603","messageId":"604","endLine":45,"endColumn":8},{"ruleId":"601","severity":1,"message":"639","line":16,"column":5,"nodeType":"603","messageId":"604","endLine":16,"endColumn":12},{"ruleId":"601","severity":1,"message":"680","line":1,"column":16,"nodeType":"603","messageId":"604","endLine":1,"endColumn":25},{"ruleId":"601","severity":1,"message":"672","line":2,"column":9,"nodeType":"603","messageId":"604","endLine":2,"endColumn":13},{"ruleId":"601","severity":1,"message":"682","line":25,"column":5,"nodeType":"603","messageId":"604","endLine":25,"endColumn":16},{"ruleId":"601","severity":1,"message":"639","line":23,"column":5,"nodeType":"603","messageId":"604","endLine":23,"endColumn":12},{"ruleId":"608","severity":1,"message":"721","line":37,"column":6,"nodeType":"610","endLine":37,"endColumn":8,"suggestions":"722"},{"ruleId":"601","severity":1,"message":"677","line":4,"column":3,"nodeType":"603","messageId":"604","endLine":4,"endColumn":19},{"ruleId":"601","severity":1,"message":"613","line":5,"column":3,"nodeType":"603","messageId":"604","endLine":5,"endColumn":9},{"ruleId":"601","severity":1,"message":"723","line":6,"column":3,"nodeType":"603","messageId":"604","endLine":6,"endColumn":7},{"ruleId":"601","severity":1,"message":"667","line":7,"column":3,"nodeType":"603","messageId":"604","endLine":7,"endColumn":12},"no-native-reassign",["724"],"no-negated-in-lhs",["725"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.","ArrayExpression",["726"],"'Spinner' is defined but never used.","'Button' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'Paper' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.",["724"],["725"],"'payments' is assigned a value but never used.","'loadOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUserActivities' and 'loadDashboardReports'. Either include them or remove the dependency array.",["727"],"React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["728"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["724"],["725"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["729"],"'Fragment' is defined but never used.","'loading' is assigned a value but never used.","'sectionSelection' is assigned a value but never used.","'setSectionSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadServiceStatuses', 'loadSingleOrder', 'next', and 'orderId'. Either include them or remove the dependency array.",["730"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadSingleService', 'match.params.serviceId', 'next', and 'setAdminLoading'. Either include them or remove the dependency array.",["731"],"'category' is assigned a value but never used.","'setActivityId' is assigned a value but never used.","'userQuery' is assigned a value but never used.","'clearUserQuery' is assigned a value but never used.","'date' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activityId', 'getSingleUserActivity', and 'next'. Either include them or remove the dependency array.",["732"],"'username' is assigned a value but never used.","'fullName' is assigned a value but never used.","'balance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers.length' and 'loadCustomers'. Either include them or remove the dependency array.",["733"],"'payment' is assigned a value but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'loadSingleOrder', 'match.params._id', and 'next'. Either include them or remove the dependency array.",["734"],"'_id' is assigned a value but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.",["724"],["725"],"'useContext' is defined but never used.","'Container' is defined but never used.","'CircularProgress' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Moment' is defined but never used.","'orderStatus' is assigned a value but never used.","'orderTotalPrice' is assigned a value but never used.","'loadCategories' is assigned a value but never used.","'categories' is assigned a value but never used.","'loadPayments' is assigned a value but never used.",["724"],["725"],"'IconButton' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'Avatar' is defined but never used.","'handleFeaturedClick' is assigned a value but never used.","'handleDryCleanClick' is assigned a value but never used.","'handleIronClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'publicServices' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'categoryName' is assigned a value but never used.","'featured' is assigned a value but never used.","'desktopPublic' is assigned a value but never used.","'desktopPrivate' is assigned a value but never used.","'exampleTable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPayments'. Either include it or remove the dependency array.",["735"],"'images' is assigned a value but never used.","'TuneIcon' is defined but never used.","react/jsx-pascal-case","Imported JSX component _CustomNavButton must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _LogoutModalDialog must be in PascalCase or SCREAMING_SNAKE_CASE","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'loadSingleCustomer', 'match.params.id', and 'updateFormFromBackend'. Either include them or remove the dependency array.",["736"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["737"],"React Hook useEffect has a missing dependency: 'loadEmployeeList'. Either include it or remove the dependency array.",["738"],"'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},"Update the dependencies array to be: [match]",{"range":"765","text":"766"},"Update the dependencies array to be: [getAllUserActivities, loadDashboardReports]",{"range":"767","text":"768"},"Update the dependencies array to be: [loadServices]",{"range":"769","text":"770"},"Update the dependencies array to be: [loadCategories]",{"range":"771","text":"772"},"Update the dependencies array to be: [loadServiceStatuses, loadSingleOrder, next, orderId]",{"range":"773","text":"774"},"Update the dependencies array to be: [loadSingleService, match.params.serviceId, next, setAdminLoading]",{"range":"775","text":"776"},"Update the dependencies array to be: [activityId, getSingleUserActivity, next]",{"range":"777","text":"778"},"Update the dependencies array to be: [customers.length, loadCustomers]",{"range":"779","text":"780"},"Update the dependencies array to be: [loadSingleOrder, match.params._id, next]",{"range":"781","text":"782"},"Update the dependencies array to be: [loadPayments]",{"range":"783","text":"784"},"Update the dependencies array to be: [loadSingleCustomer, match.params.id, updateFormFromBackend]",{"range":"785","text":"786"},"Update the dependencies array to be: [loading, user]",{"range":"787","text":"788"},"Update the dependencies array to be: [loadEmployeeList]",{"range":"789","text":"790"},[151,153],"[match]",[1867,1869],"[getAllUserActivities, loadDashboardReports]",[786,788],"[loadServices]",[727,729],"[loadCategories]",[3037,3039],"[loadServiceStatuses, loadSingleOrder, next, orderId]",[2586,2588],"[loadSingleService, match.params.serviceId, next, setAdminLoading]",[2016,2018],"[activityId, getSingleUserActivity, next]",[748,750],"[customers.length, loadCustomers]",[1374,1376],"[loadSingleOrder, match.params._id, next]",[668,670],"[loadPayments]",[2384,2386],"[loadSingleCustomer, match.params.id, updateFormFromBackend]",[925,934],"[loading, user]",[980,982],"[loadEmployeeList]"]